/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateBnplPaymentInput struct for CreateBnplPaymentInput
type CreateBnplPaymentInput struct {
	// Payment Plan ID
	PaymentPlanId int64 `json:"paymentPlanId"`
	// Defines if the payment should be captured right away or if the capture should be deferred.  Possible values: `Automatic` and `Manual`. Default is set to 'Automatic'.
	CaptureMode *string `json:"captureMode,omitempty"`
	Delivery BnplDelivery `json:"delivery"`
	// Possible values:    `PhysicalGood`    `Discount`    `ShippingFee`    `DigitalGood`    `ExternalPayment`    `Insurance`
	Items []BnplPurchaseItem `json:"items"`
	Customer Customer `json:"customer"`
	// Return success url
	ReturnUrl string `json:"returnUrl"`
	// Return error url
	ErrorUrl string `json:"errorUrl"`
	// Return cancel url
	CancelUrl string `json:"cancelUrl"`
	// Unique ID of the call, generated by your server. This ID can be used as a search field when looking for operation details
	Reference *string `json:"reference,omitempty"`
	// Payment Account ID to Credit
	AccountId string `json:"accountId"`
	// Amount to Debit  Amounts are given as integer numbers in cents
	TotalAmount *int32 `json:"totalAmount,omitempty"`
	// Your Fee  Amounts are given as integer numbers in cents
	CommissionAmount *int32 `json:"commissionAmount,omitempty"`
	// Comment Regarding the Transaction
	Comment *string `json:"comment,omitempty"`
	// If true:  1. [amountCom] will be ignored and will be replaced with Lemonway's fee    2. You will not receive any fee
	AutoCommission *bool `json:"autoCommission,omitempty"`
}

// NewCreateBnplPaymentInput instantiates a new CreateBnplPaymentInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBnplPaymentInput(paymentPlanId int64, delivery BnplDelivery, items []BnplPurchaseItem, customer Customer, returnUrl string, errorUrl string, cancelUrl string, accountId string) *CreateBnplPaymentInput {
	this := CreateBnplPaymentInput{}
	this.PaymentPlanId = paymentPlanId
	this.Delivery = delivery
	this.Items = items
	this.Customer = customer
	this.ReturnUrl = returnUrl
	this.ErrorUrl = errorUrl
	this.CancelUrl = cancelUrl
	this.AccountId = accountId
	return &this
}

// NewCreateBnplPaymentInputWithDefaults instantiates a new CreateBnplPaymentInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBnplPaymentInputWithDefaults() *CreateBnplPaymentInput {
	this := CreateBnplPaymentInput{}
	return &this
}

// GetPaymentPlanId returns the PaymentPlanId field value
func (o *CreateBnplPaymentInput) GetPaymentPlanId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PaymentPlanId
}

// GetPaymentPlanIdOk returns a tuple with the PaymentPlanId field value
// and a boolean to check if the value has been set.
func (o *CreateBnplPaymentInput) GetPaymentPlanIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentPlanId, true
}

// SetPaymentPlanId sets field value
func (o *CreateBnplPaymentInput) SetPaymentPlanId(v int64) {
	o.PaymentPlanId = v
}

// GetCaptureMode returns the CaptureMode field value if set, zero value otherwise.
func (o *CreateBnplPaymentInput) GetCaptureMode() string {
	if o == nil || o.CaptureMode == nil {
		var ret string
		return ret
	}
	return *o.CaptureMode
}

// GetCaptureModeOk returns a tuple with the CaptureMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBnplPaymentInput) GetCaptureModeOk() (*string, bool) {
	if o == nil || o.CaptureMode == nil {
		return nil, false
	}
	return o.CaptureMode, true
}

// HasCaptureMode returns a boolean if a field has been set.
func (o *CreateBnplPaymentInput) HasCaptureMode() bool {
	if o != nil && o.CaptureMode != nil {
		return true
	}

	return false
}

// SetCaptureMode gets a reference to the given string and assigns it to the CaptureMode field.
func (o *CreateBnplPaymentInput) SetCaptureMode(v string) {
	o.CaptureMode = &v
}

// GetDelivery returns the Delivery field value
func (o *CreateBnplPaymentInput) GetDelivery() BnplDelivery {
	if o == nil {
		var ret BnplDelivery
		return ret
	}

	return o.Delivery
}

// GetDeliveryOk returns a tuple with the Delivery field value
// and a boolean to check if the value has been set.
func (o *CreateBnplPaymentInput) GetDeliveryOk() (*BnplDelivery, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Delivery, true
}

// SetDelivery sets field value
func (o *CreateBnplPaymentInput) SetDelivery(v BnplDelivery) {
	o.Delivery = v
}

// GetItems returns the Items field value
func (o *CreateBnplPaymentInput) GetItems() []BnplPurchaseItem {
	if o == nil {
		var ret []BnplPurchaseItem
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *CreateBnplPaymentInput) GetItemsOk() ([]BnplPurchaseItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *CreateBnplPaymentInput) SetItems(v []BnplPurchaseItem) {
	o.Items = v
}

// GetCustomer returns the Customer field value
func (o *CreateBnplPaymentInput) GetCustomer() Customer {
	if o == nil {
		var ret Customer
		return ret
	}

	return o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value
// and a boolean to check if the value has been set.
func (o *CreateBnplPaymentInput) GetCustomerOk() (*Customer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Customer, true
}

// SetCustomer sets field value
func (o *CreateBnplPaymentInput) SetCustomer(v Customer) {
	o.Customer = v
}

// GetReturnUrl returns the ReturnUrl field value
func (o *CreateBnplPaymentInput) GetReturnUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReturnUrl
}

// GetReturnUrlOk returns a tuple with the ReturnUrl field value
// and a boolean to check if the value has been set.
func (o *CreateBnplPaymentInput) GetReturnUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReturnUrl, true
}

// SetReturnUrl sets field value
func (o *CreateBnplPaymentInput) SetReturnUrl(v string) {
	o.ReturnUrl = v
}

// GetErrorUrl returns the ErrorUrl field value
func (o *CreateBnplPaymentInput) GetErrorUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorUrl
}

// GetErrorUrlOk returns a tuple with the ErrorUrl field value
// and a boolean to check if the value has been set.
func (o *CreateBnplPaymentInput) GetErrorUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorUrl, true
}

// SetErrorUrl sets field value
func (o *CreateBnplPaymentInput) SetErrorUrl(v string) {
	o.ErrorUrl = v
}

// GetCancelUrl returns the CancelUrl field value
func (o *CreateBnplPaymentInput) GetCancelUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CancelUrl
}

// GetCancelUrlOk returns a tuple with the CancelUrl field value
// and a boolean to check if the value has been set.
func (o *CreateBnplPaymentInput) GetCancelUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CancelUrl, true
}

// SetCancelUrl sets field value
func (o *CreateBnplPaymentInput) SetCancelUrl(v string) {
	o.CancelUrl = v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *CreateBnplPaymentInput) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBnplPaymentInput) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *CreateBnplPaymentInput) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *CreateBnplPaymentInput) SetReference(v string) {
	o.Reference = &v
}

// GetAccountId returns the AccountId field value
func (o *CreateBnplPaymentInput) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *CreateBnplPaymentInput) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *CreateBnplPaymentInput) SetAccountId(v string) {
	o.AccountId = v
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise.
func (o *CreateBnplPaymentInput) GetTotalAmount() int32 {
	if o == nil || o.TotalAmount == nil {
		var ret int32
		return ret
	}
	return *o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBnplPaymentInput) GetTotalAmountOk() (*int32, bool) {
	if o == nil || o.TotalAmount == nil {
		return nil, false
	}
	return o.TotalAmount, true
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *CreateBnplPaymentInput) HasTotalAmount() bool {
	if o != nil && o.TotalAmount != nil {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given int32 and assigns it to the TotalAmount field.
func (o *CreateBnplPaymentInput) SetTotalAmount(v int32) {
	o.TotalAmount = &v
}

// GetCommissionAmount returns the CommissionAmount field value if set, zero value otherwise.
func (o *CreateBnplPaymentInput) GetCommissionAmount() int32 {
	if o == nil || o.CommissionAmount == nil {
		var ret int32
		return ret
	}
	return *o.CommissionAmount
}

// GetCommissionAmountOk returns a tuple with the CommissionAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBnplPaymentInput) GetCommissionAmountOk() (*int32, bool) {
	if o == nil || o.CommissionAmount == nil {
		return nil, false
	}
	return o.CommissionAmount, true
}

// HasCommissionAmount returns a boolean if a field has been set.
func (o *CreateBnplPaymentInput) HasCommissionAmount() bool {
	if o != nil && o.CommissionAmount != nil {
		return true
	}

	return false
}

// SetCommissionAmount gets a reference to the given int32 and assigns it to the CommissionAmount field.
func (o *CreateBnplPaymentInput) SetCommissionAmount(v int32) {
	o.CommissionAmount = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *CreateBnplPaymentInput) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBnplPaymentInput) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *CreateBnplPaymentInput) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *CreateBnplPaymentInput) SetComment(v string) {
	o.Comment = &v
}

// GetAutoCommission returns the AutoCommission field value if set, zero value otherwise.
func (o *CreateBnplPaymentInput) GetAutoCommission() bool {
	if o == nil || o.AutoCommission == nil {
		var ret bool
		return ret
	}
	return *o.AutoCommission
}

// GetAutoCommissionOk returns a tuple with the AutoCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBnplPaymentInput) GetAutoCommissionOk() (*bool, bool) {
	if o == nil || o.AutoCommission == nil {
		return nil, false
	}
	return o.AutoCommission, true
}

// HasAutoCommission returns a boolean if a field has been set.
func (o *CreateBnplPaymentInput) HasAutoCommission() bool {
	if o != nil && o.AutoCommission != nil {
		return true
	}

	return false
}

// SetAutoCommission gets a reference to the given bool and assigns it to the AutoCommission field.
func (o *CreateBnplPaymentInput) SetAutoCommission(v bool) {
	o.AutoCommission = &v
}

func (o CreateBnplPaymentInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["paymentPlanId"] = o.PaymentPlanId
	}
	if o.CaptureMode != nil {
		toSerialize["captureMode"] = o.CaptureMode
	}
	if true {
		toSerialize["delivery"] = o.Delivery
	}
	if true {
		toSerialize["items"] = o.Items
	}
	if true {
		toSerialize["customer"] = o.Customer
	}
	if true {
		toSerialize["returnUrl"] = o.ReturnUrl
	}
	if true {
		toSerialize["errorUrl"] = o.ErrorUrl
	}
	if true {
		toSerialize["cancelUrl"] = o.CancelUrl
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if o.TotalAmount != nil {
		toSerialize["totalAmount"] = o.TotalAmount
	}
	if o.CommissionAmount != nil {
		toSerialize["commissionAmount"] = o.CommissionAmount
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.AutoCommission != nil {
		toSerialize["autoCommission"] = o.AutoCommission
	}
	return json.Marshal(toSerialize)
}

type NullableCreateBnplPaymentInput struct {
	value *CreateBnplPaymentInput
	isSet bool
}

func (v NullableCreateBnplPaymentInput) Get() *CreateBnplPaymentInput {
	return v.value
}

func (v *NullableCreateBnplPaymentInput) Set(val *CreateBnplPaymentInput) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBnplPaymentInput) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBnplPaymentInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBnplPaymentInput(val *CreateBnplPaymentInput) *NullableCreateBnplPaymentInput {
	return &NullableCreateBnplPaymentInput{value: val, isSet: true}
}

func (v NullableCreateBnplPaymentInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBnplPaymentInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


