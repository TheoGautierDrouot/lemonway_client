/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetMoneyInTransDetailsInput struct for GetMoneyInTransDetailsInput
type GetMoneyInTransDetailsInput struct {
	// Money-In ID
	TransactionId *int64 `json:"transactionId,omitempty"`
	// Money-In Comment
	TransactionComment *string `json:"transactionComment,omitempty"`
	// Unique ID generated by your server. This ID can be used as a reference for a search field when looking for operation details.
	TransactionMerchantToken *string `json:"TransactionMerchantToken,omitempty"`
	// UTC Unix timestamp, in order to return transactions initialized after it
	StartDate *string `json:"startDate,omitempty"`
	// UTC Unix timestamp, in order to return transactions initialized before it
	EndDate *string `json:"endDate,omitempty"`
}

// NewGetMoneyInTransDetailsInput instantiates a new GetMoneyInTransDetailsInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMoneyInTransDetailsInput() *GetMoneyInTransDetailsInput {
	this := GetMoneyInTransDetailsInput{}
	return &this
}

// NewGetMoneyInTransDetailsInputWithDefaults instantiates a new GetMoneyInTransDetailsInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMoneyInTransDetailsInputWithDefaults() *GetMoneyInTransDetailsInput {
	this := GetMoneyInTransDetailsInput{}
	return &this
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *GetMoneyInTransDetailsInput) GetTransactionId() int64 {
	if o == nil || o.TransactionId == nil {
		var ret int64
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoneyInTransDetailsInput) GetTransactionIdOk() (*int64, bool) {
	if o == nil || o.TransactionId == nil {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *GetMoneyInTransDetailsInput) HasTransactionId() bool {
	if o != nil && o.TransactionId != nil {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given int64 and assigns it to the TransactionId field.
func (o *GetMoneyInTransDetailsInput) SetTransactionId(v int64) {
	o.TransactionId = &v
}

// GetTransactionComment returns the TransactionComment field value if set, zero value otherwise.
func (o *GetMoneyInTransDetailsInput) GetTransactionComment() string {
	if o == nil || o.TransactionComment == nil {
		var ret string
		return ret
	}
	return *o.TransactionComment
}

// GetTransactionCommentOk returns a tuple with the TransactionComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoneyInTransDetailsInput) GetTransactionCommentOk() (*string, bool) {
	if o == nil || o.TransactionComment == nil {
		return nil, false
	}
	return o.TransactionComment, true
}

// HasTransactionComment returns a boolean if a field has been set.
func (o *GetMoneyInTransDetailsInput) HasTransactionComment() bool {
	if o != nil && o.TransactionComment != nil {
		return true
	}

	return false
}

// SetTransactionComment gets a reference to the given string and assigns it to the TransactionComment field.
func (o *GetMoneyInTransDetailsInput) SetTransactionComment(v string) {
	o.TransactionComment = &v
}

// GetTransactionMerchantToken returns the TransactionMerchantToken field value if set, zero value otherwise.
func (o *GetMoneyInTransDetailsInput) GetTransactionMerchantToken() string {
	if o == nil || o.TransactionMerchantToken == nil {
		var ret string
		return ret
	}
	return *o.TransactionMerchantToken
}

// GetTransactionMerchantTokenOk returns a tuple with the TransactionMerchantToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoneyInTransDetailsInput) GetTransactionMerchantTokenOk() (*string, bool) {
	if o == nil || o.TransactionMerchantToken == nil {
		return nil, false
	}
	return o.TransactionMerchantToken, true
}

// HasTransactionMerchantToken returns a boolean if a field has been set.
func (o *GetMoneyInTransDetailsInput) HasTransactionMerchantToken() bool {
	if o != nil && o.TransactionMerchantToken != nil {
		return true
	}

	return false
}

// SetTransactionMerchantToken gets a reference to the given string and assigns it to the TransactionMerchantToken field.
func (o *GetMoneyInTransDetailsInput) SetTransactionMerchantToken(v string) {
	o.TransactionMerchantToken = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *GetMoneyInTransDetailsInput) GetStartDate() string {
	if o == nil || o.StartDate == nil {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoneyInTransDetailsInput) GetStartDateOk() (*string, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *GetMoneyInTransDetailsInput) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *GetMoneyInTransDetailsInput) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *GetMoneyInTransDetailsInput) GetEndDate() string {
	if o == nil || o.EndDate == nil {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoneyInTransDetailsInput) GetEndDateOk() (*string, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *GetMoneyInTransDetailsInput) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *GetMoneyInTransDetailsInput) SetEndDate(v string) {
	o.EndDate = &v
}

func (o GetMoneyInTransDetailsInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TransactionId != nil {
		toSerialize["transactionId"] = o.TransactionId
	}
	if o.TransactionComment != nil {
		toSerialize["transactionComment"] = o.TransactionComment
	}
	if o.TransactionMerchantToken != nil {
		toSerialize["TransactionMerchantToken"] = o.TransactionMerchantToken
	}
	if o.StartDate != nil {
		toSerialize["startDate"] = o.StartDate
	}
	if o.EndDate != nil {
		toSerialize["endDate"] = o.EndDate
	}
	return json.Marshal(toSerialize)
}

type NullableGetMoneyInTransDetailsInput struct {
	value *GetMoneyInTransDetailsInput
	isSet bool
}

func (v NullableGetMoneyInTransDetailsInput) Get() *GetMoneyInTransDetailsInput {
	return v.value
}

func (v *NullableGetMoneyInTransDetailsInput) Set(val *GetMoneyInTransDetailsInput) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMoneyInTransDetailsInput) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMoneyInTransDetailsInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMoneyInTransDetailsInput(val *GetMoneyInTransDetailsInput) *NullableGetMoneyInTransDetailsInput {
	return &NullableGetMoneyInTransDetailsInput{value: val, isSet: true}
}

func (v NullableGetMoneyInTransDetailsInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMoneyInTransDetailsInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


