/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MoneyInWebInitOutput struct for MoneyInWebInitOutput
type MoneyInWebInitOutput struct {
	// Payment Token to Pass to WebKit URL using GET
	WebKitToken *string `json:"webKitToken,omitempty"`
	// Transaction ID
	Id *int32 `json:"id,omitempty"`
	CardId *int32 `json:"cardId,omitempty"`
	Error *Error `json:"error,omitempty"`
}

// NewMoneyInWebInitOutput instantiates a new MoneyInWebInitOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoneyInWebInitOutput() *MoneyInWebInitOutput {
	this := MoneyInWebInitOutput{}
	return &this
}

// NewMoneyInWebInitOutputWithDefaults instantiates a new MoneyInWebInitOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoneyInWebInitOutputWithDefaults() *MoneyInWebInitOutput {
	this := MoneyInWebInitOutput{}
	return &this
}

// GetWebKitToken returns the WebKitToken field value if set, zero value otherwise.
func (o *MoneyInWebInitOutput) GetWebKitToken() string {
	if o == nil || o.WebKitToken == nil {
		var ret string
		return ret
	}
	return *o.WebKitToken
}

// GetWebKitTokenOk returns a tuple with the WebKitToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyInWebInitOutput) GetWebKitTokenOk() (*string, bool) {
	if o == nil || o.WebKitToken == nil {
		return nil, false
	}
	return o.WebKitToken, true
}

// HasWebKitToken returns a boolean if a field has been set.
func (o *MoneyInWebInitOutput) HasWebKitToken() bool {
	if o != nil && o.WebKitToken != nil {
		return true
	}

	return false
}

// SetWebKitToken gets a reference to the given string and assigns it to the WebKitToken field.
func (o *MoneyInWebInitOutput) SetWebKitToken(v string) {
	o.WebKitToken = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MoneyInWebInitOutput) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyInWebInitOutput) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MoneyInWebInitOutput) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MoneyInWebInitOutput) SetId(v int32) {
	o.Id = &v
}

// GetCardId returns the CardId field value if set, zero value otherwise.
func (o *MoneyInWebInitOutput) GetCardId() int32 {
	if o == nil || o.CardId == nil {
		var ret int32
		return ret
	}
	return *o.CardId
}

// GetCardIdOk returns a tuple with the CardId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyInWebInitOutput) GetCardIdOk() (*int32, bool) {
	if o == nil || o.CardId == nil {
		return nil, false
	}
	return o.CardId, true
}

// HasCardId returns a boolean if a field has been set.
func (o *MoneyInWebInitOutput) HasCardId() bool {
	if o != nil && o.CardId != nil {
		return true
	}

	return false
}

// SetCardId gets a reference to the given int32 and assigns it to the CardId field.
func (o *MoneyInWebInitOutput) SetCardId(v int32) {
	o.CardId = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *MoneyInWebInitOutput) GetError() Error {
	if o == nil || o.Error == nil {
		var ret Error
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyInWebInitOutput) GetErrorOk() (*Error, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *MoneyInWebInitOutput) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given Error and assigns it to the Error field.
func (o *MoneyInWebInitOutput) SetError(v Error) {
	o.Error = &v
}

func (o MoneyInWebInitOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WebKitToken != nil {
		toSerialize["webKitToken"] = o.WebKitToken
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Id != nil {
		toSerialize["id "] = o.Id
	}
	if o.CardId != nil {
		toSerialize["cardId"] = o.CardId
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableMoneyInWebInitOutput struct {
	value *MoneyInWebInitOutput
	isSet bool
}

func (v NullableMoneyInWebInitOutput) Get() *MoneyInWebInitOutput {
	return v.value
}

func (v *NullableMoneyInWebInitOutput) Set(val *MoneyInWebInitOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableMoneyInWebInitOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableMoneyInWebInitOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoneyInWebInitOutput(val *MoneyInWebInitOutput) *NullableMoneyInWebInitOutput {
	return &NullableMoneyInWebInitOutput{value: val, isSet: true}
}

func (v NullableMoneyInWebInitOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoneyInWebInitOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


