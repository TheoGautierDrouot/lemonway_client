openapi: 3.0.1
info:
  title: Lemonway DirectKit API 2.0
  version: v2
servers:
- url: https://sandbox-api.lemonway.fr/mb/drouot/dev/directkitrest
paths:
  /v2/accounts/{accountid}:
    get:
      description: "Enables your system to get detailed payment account information\
        \ including:   \r\n* Payment account balance   \r\n* Account type    \r\n\
        * Account status (if blocked or not) \r\n* Account email address"
      operationId: Accounts_AccountSingleGet
      parameters:
      - description: Account ID
        in: path
        name: accountid
        required: true
        schema:
          type: string
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                account:
                  id: "33612345678"
                  internalId: 3673
                  firstname: Jean
                  lastname: Dupont
                  balance: 2390
                  email: jean.dupont@email.com
                  status: 1
                  isblocked: true
                  accountType: 0
                  adresse: null
                  birth: null
                  isDebtor: false
                  payerOrBeneficiary: 1
              schema:
                $ref: '#/components/schemas/AccountDetailsOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Get Detailed Payment Account Data
      tags:
      - Accounts | Admin
  /v2/accounts/{accountid}/documents:
    get:
      description: "Returns the document ID, document status, and document type of\
        \ a users account.\r\n            \r\n**Note:** If you validate your Client's\
        \ documentation using Lemonway's automated KYC, you will not receive a `validityDate`\
        \ response."
      operationId: Accounts_DocumentGet
      parameters:
      - description: Account ID
        in: path
        name: accountid
        required: true
        schema:
          type: string
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                documents:
                - id: 843847
                  status: 0
                  type: 0
                  comment: null
              schema:
                $ref: '#/components/schemas/AccountDocumentsOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Get Documents Associated with a Payment Account
      tags:
      - Accounts | Admin
  /v2/accounts/{accountId}ultimateBeneficialOwner:
    get:
      description: This method enables you get all the Ultimate Beneficial Owners
        associated to a legal payment account.
      operationId: Accounts_GetUltimateBeneficialOwner
      parameters:
      - description: Account ID
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                ultimateBeneficialOwners:
                - firstname: Jean
                  lastname: Dupont
                  nationality: null
                  dateOfBirth: null
                  cityOfBirth: null
                  countryOfBirth: null
                  countryOfResidence: null
                  startDate: 0
                  endDate: 0
                  ultimateBeneficialOwnerId: 0
              schema:
                $ref: '#/components/schemas/GetUltimateBeneficialOwnerOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Get all Ultimate Beneficial Owners associated to a payment account.
      tags:
      - Accounts | Create & KYC
  /v2/accounts/{accountId}/balances/history:
    get:
      description: "Enter an `accountId` and specify the `atDate` parameter to return\
        \ an account balance.  \r\n\r\n**Important:** Payment account balances can\
        \ not be viewed for special accounts SC **11** and LW **4** using the `accountId`\
        \ parameter."
      operationId: Accounts_BalancesHistoryGet
      parameters:
      - description: Account ID
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: Request balance at given time in UTC Unix timestamp.
        in: query
        name: atDate
        schema:
          pattern: "^-?\\d{1,12}$"
          type: string
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                balance: 10010
              schema:
                $ref: '#/components/schemas/BalanceHistoryOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Get Payment Account Balance History
      tags:
      - Accounts | Admin
  /v2/accounts/kycstatus:
    get:
      description: "Use to find users, documents, IBAN for which the status has changed\
        \ since a specified date.  \r\n**Note:** Returns the same user multiple times\
        \ in the same request if his status has changed multiple time since a specified\
        \ date."
      operationId: Accounts_KycStatusGet
      parameters:
      - description: UTC Unix timestamp
        in: query
        name: updateDate
        required: true
        schema:
          pattern: "^-?\\d{1,12}$"
          type: string
      - description: "Index start from 1, let null to get all"
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: "Default 20, let it null if no pagination"
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                accounts:
                - id: "13"
                  status: 5
                  date: "1749028528"
              schema:
                $ref: '#/components/schemas/KycStatusOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: "Find a user, document or an IBAN that has been modified since an entry\
        \ date"
      tags:
      - Accounts | Create & KYC
  /v2/accounts/balances:
    get:
      description: "Use `GetBalances` to get all payment accounts where the balance\
        \ has changed since the input date, or all the balances of payment accounts\
        \ with internal ID between payment `accountIdStart` and payment `accountIdEnd`.\r\
        \n\r\n**Important:** Payment account balances can not be viewed for special\
        \ accounts SC **11** and LW **4** using the `accountId` parameter."
      operationId: Accounts_BalancesGet
      parameters:
      - description: "Date in UTC Seconds\r\nLeave empty to use payment account IDs."
        in: query
        name: updateDate
        schema:
          pattern: "^-?\\d{1,12}$"
          type: string
      - description: "First payment account internal ID, starting from 12."
        in: query
        name: internalAccountIdStart
        schema:
          format: int64
          pattern: "^\\d{1,19}$"
          type: integer
      - description: "Last payment account internal ID, starting from 12."
        in: query
        name: internalAccountIdEnd
        schema:
          format: int64
          pattern: "^\\d{1,19}$"
          type: integer
      - description: "Index start from 1, let null to get all"
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: "Default 20, let it null if no pagination"
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                accounts:
                - id: "20"
                  balance: 26100
                - id: "22"
                  balance: 100
              schema:
                $ref: '#/components/schemas/AccountBalanceOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Get all Payment Account Balances
      tags:
      - Accounts | Admin
  /v2/accounts/{accountId}/transactions:
    get:
      description: "Use the `GetWalletTransHistory` to retrieve the list of **Money-In**,\
        \ **Money-Out** and **P2P (payment between payment account)** of a given payment\
        \ account.\r\nThe following numbered list corresponds to the payment type\
        \ specified in the response attribute method:  \r\n\r\n0 Card  \r\n1 Bank\
        \ transfer (MoneyIn)   \r\n3 Bank transfer (MoneyOut)   \r\n4 P2P  \r\n13\
        \ iDEAL  \r\n14 SEPA DirectDebit  \r\n15 Cheque  \r\n19 Multibanco  \r\n35\
        \ PayPal\r\n\r\n\r\n ---\r\n **Important:** The following services have been\
        \ discontinued. \r\n \r\n16 Neosurf  \r\n17 Sofort  \r\n18 PFS Physical Card\
        \  \r\n20 Payshop  \r\n21 MBWAY  \r\n22 Polish Instant Transfer  \r\n23 Pagare\
        \   \r\n24 MobilePay  \r\n25 Paytrail  \r\n26 WeChat  \r\n27 P24  \r\n28 MoneyIn\
        \ by TPE  \r\n29 Trustly"
      operationId: Accounts_TransactionsGet
      parameters:
      - description: Account ID
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: "UTC Unix timestamp\r\nIn order to return transactions initialized\
          \ after `startDate`.\r\nIf the payment account is a **SC Wallet** then this\
          \ value is mandatory."
        in: query
        name: startDate
        schema:
          pattern: "^-?\\d{1,12}$"
          type: string
      - description: "UTC Unix timestamp\r\nIn order to return transactions initialized\
          \ before `endDate`.\r\nIf the payment account is a **SC Wallet** then this\
          \ value is mandatory and the time span can not exceed 1 week."
        in: query
        name: endDate
        schema:
          pattern: "^-?\\d{1,12}$"
          type: string
      - description: "UTC Unix timestamp\r\nIn order to return transactions Executed\
          \ after `endDate`.\r\nIf the payment account is a **SC Wallet** then this\
          \ value is mandatory and the time span can not exceed 1 week."
        in: query
        name: executionDateStart
        schema:
          pattern: "^-?\\d{1,12}$"
          type: string
      - description: "UTC Unix timestamp\r\nIn order to return transactions Executed\
          \ before `endDate`\r\nIf the payment account is a **SC Wallet** then this\
          \ value is mandatory and the time span can not exceed 1 week."
        in: query
        name: executionDateEnd
        schema:
          pattern: "^-?\\d{1,12}$"
          type: string
      - description: "Index start from 1, let null to get all"
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: "Default 20, let it null if no pagination"
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                transactions:
                  value:
                  - transactionIn:
                      receiverAccountId: pizza
                      creditAmount: 1500
                      scheduledDate: 2015/12/31
                      scheduledNumber: null
                      PSP:
                        message: 05-00-05 ERR_PSP_REFUSED
                      card:
                        id: 0
                        is3DS: true
                        country: FRA
                        maskedNumber: "455622"
                        isRegistered: false
                        holderName: Peter PAN
                      refundAmount: 1500.0
                      bankReference: null
                      ChequeSendingAddress_CorporateName: null
                      ChequeSendingAddress_Street: null
                      ChequeSendingAddress_City: null
                      ChequeSendingAddress_PostCode: null
                      id: 255
                      method: 0
                      date: 1749028528
                      commissionAmount: 200
                      comment: Order number 245776
                      status: 0
                      executionDate: 0
                      reference: null
              schema:
                $ref: '#/components/schemas/AccountKycStatusOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Get list of all Payment Account transactions
      tags:
      - Accounts | Admin
  /v2/accounts/legal/{accountid}:
    put:
      description: "This method enables you to update information relating to a **legal**\
        \ client payment account.  \r\n1. The client enters their new data.  \r\n\
        2. The client calls the Lemonway Webservice.  \r\n3. Lemonway records data\
        \ when it exists.  \r\n4. The application processes Lemonway's response and\
        \ displays a confirmation message."
      operationId: Accounts_LegalSinglePut
      parameters:
      - description: Account ID
        in: path
        name: accountid
        required: true
        schema:
          type: string
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLegalAccountDetailsInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                account:
                  id: Account1234
                  lemonwayId: 13
              schema:
                $ref: '#/components/schemas/UpdateLegalAccountDetailsOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Update Legal Payment Account Data
      tags:
      - Accounts | Update
      x-codegen-request-body-name: parameters
  /v2/accounts/{accountid}/blocked:
    put:
      operationId: Accounts_BlockedPut
      parameters:
      - description: Account ID
        in: path
        name: accountid
        required: true
        schema:
          type: string
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountBlockedInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                account:
                  id: ExternalUserId
                  isBlocked: true
              schema:
                $ref: '#/components/schemas/AccountBlockedOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Block or Unblock an Account
      tags:
      - Accounts | Admin
      x-codegen-request-body-name: parameters
  /v2/accounts/kycstatus/{accountid}:
    put:
      description: "Allows certain payment account statuses to be updated. \r\n\r\n\
        - To close an account (status 12), the account must have zero balance.  \r\
        \n- An account status can not be changed to bypass the KYC process. KYC statuses\
        \ are updated by Lemonway.  \r\n- If an account is closed in status 6 (KYC\
        \ 2) and you would like to reopen it, you must send a support request to Lemonway.\
        \  \r\n\r\nYou can view all account statues [here.](https://documentation.lemonway.com/reference/wallet-status)\
        \  \r\n\r\n**Note:** This feature is subject to your contract."
      operationId: Accounts_KycstatusPut
      parameters:
      - description: Account ID
        in: path
        name: accountid
        required: true
        schema:
          type: string
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountStatusInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                account:
                  id: ExternalUserId
                  status: 6
              schema:
                $ref: '#/components/schemas/UpdateAccountStatusOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Update Payment Account Status
      tags:
      - Accounts | Update
      x-codegen-request-body-name: parameters
  /v2/accounts/individual/{accountid}:
    put:
      description: "Enables you to update information related to a client payment\
        \ account.  \r\n1. The client enters their new data.  \r\n2. The client calls\
        \ the Lemonway Webservice.  \r\n3. Lemonway records data when it exists. \
        \ \r\n4. The application processes Lemonway's response and displays a confirmation\
        \ message."
      operationId: Accounts_IndividualPut
      parameters:
      - description: Account ID
        in: path
        name: accountid
        required: true
        schema:
          type: string
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIndividualAccountDetailsInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                account:
                  id: Account1234
                  internalId: 13
              schema:
                $ref: '#/components/schemas/UpdateIndividualAccountDetailsOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Update Individual Payment Account Data
      tags:
      - Accounts | Update
      x-codegen-request-body-name: parameters
  /v2/accounts/{accountId}/ultimateBeneficialOwner/{UltimateBeneficialOwnerId}:
    put:
      description: This method enables you to update information related to an Ultimate
        Beneficial Owner.
      operationId: Accounts_UpdateUltimateBeneficialOwner
      parameters:
      - description: Account ID
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: UltimateBeneficial Owner ID
        in: path
        name: UltimateBeneficialOwnerId
        required: true
        schema:
          format: int64
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUltimateBeneficialOwnerInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                ultimateBeneficialOwnerId: 0
              schema:
                $ref: '#/components/schemas/UpdateUltimateBeneficialOwnerOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Update Ultimate Beneficial Owner data
      tags:
      - Accounts | Create & KYC
      x-codegen-request-body-name: parameters
  /v2/accounts/legal:
    post:
      description: "Lets you to create a legal payment account:      \r\n1. Your client\
        \ enter their data on your platform, for example on their profile space. \
        \  \r\n2. Your server calls our Accounts API.  \r\n3. Lemonway creates the\
        \ payment account in your environment.     \r\n4. Your system reads the method\
        \ response and informs the user.    \r\n\r\nWe apply validation rules for\
        \ different parameters.   \r\n\r\n**Check Injection:**    \r\n* String parameters\
        \ (email, name and so on) must not contain odd characters.\r\n\r\n**Names\
        \ (first and last name)**  \r\n\r\n* Not made-up names: \"name\", \"nom\"\
        , \"prénom\", \"prenom\", \"lastname\", \"last_name\", \"last name\", \"firstname\"\
        , \"first_name\", \"first name\", \"name\", \"test\", \"unknow\"    \r\n*\
        \ Names must have at least 2 characters with at least 1 vowel  \r\n* The first\
        \ name must not be the same as the last name  \r\n* Using the same the same\
        \ character 3 times in a row will cause an error  \r\n* We might apply other\
        \ validation rules, for example: in the case VIP (politician)"
      operationId: Accounts_LegalPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterLegalAccountInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                legalAccount:
                  id: Account1234
                  lemonwayId: 13
              schema:
                $ref: '#/components/schemas/RegisterLegalAccountOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Create a New Legal Account
      tags:
      - Accounts | Create & KYC
      x-codegen-request-body-name: parameters
  /v2/accounts/individual:
    post:
      description: "Lets you to create a individual payment account  \r\n1. Your Client\
        \ enter their data on your platform, for example on their profile space. \
        \ \r\n2. Your server calls our Accounts API.  \r\n3. Lemonway creates the\
        \ payment account in your environment.  \r\n4. Your system reads the method\
        \ response and informs the user.   \r\n\r\nWe apply our validation rules for\
        \ different parameters.   \r\n\r\n**Check Injection:**      \r\n* String parameters\
        \ (email, name and so on) must not contain odd characters.  \r\n\r\n**Names\
        \ (first and last name)**    \r\n\r\n* Not made-up names: \"name\", \"nom\"\
        , \"prénom\", \"prenom\", \"lastname\", \"last_name\", \"last name\", \"firstname\"\
        , \"first_name\", \"first name\", \"name\", \"test\", \"unknow\"      \r\n\
        * Names must have at least 2 characters with at least 1 vowel     \r\n* The\
        \ first name must not be the same as the last name     \r\n* Using the same\
        \ the same character 3 times in a row will cause an error    \r\n* We might\
        \ apply other validation rules, for example: in the case VIP (politician)"
      operationId: Accounts_IndividualPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterIndividualAccountInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                account:
                  id: Account1234
                  internalId: 13
              schema:
                $ref: '#/components/schemas/RegisterIndividualAccountOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Create a New Individual Account
      tags:
      - Accounts | Create & KYC
      x-codegen-request-body-name: parameters
  /v2/accounts/retrieve:
    post:
      description: "Lets your system to get detailed payment account information including:\
        \ \r\npayment account balance, account type, if the account is blocked, and\
        \ account email address.  \r\nFill at least one search field."
      operationId: Accounts_RetrievePost
      parameters:
      - in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDetailsBatchInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                accounts:
                - id: "33612345678"
                  internalId: 3673
                  firstname: Jean
                  lastname: Dupont
                  balance: 2390
                  email: jean.dupont@email.com
                  status: 1
                  isblocked: true
                  accountType: 0
                  adresse: null
                  birth: null
                  isDebtor: false
                  payerOrBeneficiary: 1
              schema:
                $ref: '#/components/schemas/AccountDetailsBatchOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Get Detailed Payments Accounts Data
      tags:
      - Accounts | Admin
      x-codegen-request-body-name: parameters
  /v2/accounts/{accountid}/enrolment/init:
    post:
      operationId: Accounts_EnrolmentInit
      parameters:
      - in: path
        name: accountid
        required: true
        schema:
          type: string
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrolmentInitInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                redirecturl: https://postident.deutschepost.de/user/start/?caseId=WNRJY93B7NR3
              schema:
                $ref: '#/components/schemas/EnrolmentInitOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: (Deprecated) Initialize a Deutsche Post POSTIDENT Identification
      tags:
      - Accounts | Admin
      x-codegen-request-body-name: parameters
  /v2/accounts/{accountid}/documents/upload:
    post:
      description: "KYC is a regulatory obligation for Payment Institutions. European\
        \ Directive 2015/849 of the European Parliament states this requirement  \
        \  \r\nfor the prevention of the use of the financial system for the purposes\
        \ of money laundering and terrorist financing.    \r\n\r\nTo upload documents\
        \ for KYC use the following guidelines:  \r\n* Use JPG, JPEG, PNG or PDF (maximum\
        \ 2 pages) for ID documentation only (for example: Passport, Driving Licence\
        \ and Residence Permit).  \r\n* Maximum file upload size is **4MB** for automatic\
        \ verification.    \r\n* Minimum file upload size is **100KB**.  \r\n* Full\
        \ Colour, and straighten file.   \r\n* Card ID: Scan both sides. One file\
        \ should contain both sides (maximum 2 pages).  \r\n\r\n**Important** Documents\
        \ over 4MB and upto 10MB will be manually validated.  \r\n**Note:** TIFF format\
        \ is not accepted.  \r\n**Note:** If a document has been rejected, it is still\
        \ possible to use the same slot to upload a new file."
      operationId: Accounts_DocumentsUploadPost
      parameters:
      - description: Account ID
        in: path
        name: accountid
        required: true
        schema:
          type: string
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadDocumentInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                uploadDocument:
                  id: 521
                  status: 1
                  substatus: 5
                  accountstatus: 5
              schema:
                $ref: '#/components/schemas/UploadDocumentOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Upload Documents for KYC (Know Your Customers)
      tags:
      - Accounts | Create & KYC
      x-codegen-request-body-name: parameters
  /v2/accounts/{accountId}/ultimateBeneficialOwner:
    post:
      description: "The method enables you to link an Ultimate Beneficial Owner to\
        \ a legal payment account.  \r\nTo be validated all Legal accounts need to\
        \ provide their Ultimate Beneficial Owner information.  \r\nAn Ultimate Beneficial\
        \ Owner is a natural person that owns directly or indirectly (i.e. through\
        \ another entity)  \r\nmore than 25% of the shares/stock or voting rights\
        \ of the legal entity, or a person having significant control over it   \r\
        \nthrough other means. Any company established in EEA or EU is obliged to\
        \ obtain and maintain this information with the competent   \r\ncentral register\
        \ (as per article 30 of Directive 2015/843/EU).   \r\nSimilar requirements\
        \ may also exist in other countries.  \r\nIn order to comply with AML-CTF\
        \ legal provisions, payment institutions are required  \r\nto identify the\
        \ beneficial owner(s) of a legal entity(i.e.a company or an organisation).\
        \  \r\nIf the Legal Representative is also an Ultimate Beneficial Owner, \
        \ you can specify this information when creating or updating a legal account."
      operationId: Accounts_AddUltimateBeneficialOwner
      parameters:
      - description: Account ID
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUltimateBeneficialOwnerInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                ultimateBeneficialOwnerId: 0
              schema:
                $ref: '#/components/schemas/AddUltimateBeneficialOwnerOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Create an Ultimate Beneficial Owner
      tags:
      - Accounts | Create & KYC
      x-codegen-request-body-name: parameters
  /v2/accounts/{accountid}/documents/{documentid}/signinit:
    post:
      description: "This call lets you to generate an electronic signature.  \r\n\r\
        \n**Note:** Only SDD mandates can be signed with this method.      \r\n\r\n\
        **Prerequisite:**  A Mandate needs to be registered with **RegisterSddMandate**\r\
        \n\r\n1. A call to `SignDocumentInit` of DirectKit to make the signature request\
        \ and get a token.  \r\n2. A redirection from your website to the WebKit,\
        \ with the token in GET parameter (see Finalize document signature).  \r\n\
        3. A return page where your user will be redirected after the signature."
      operationId: Accounts_DocumentsSignInitPost
      parameters:
      - description: Account Id
        in: path
        name: accountid
        required: true
        schema:
          type: string
      - in: path
        name: documentid
        required: true
        schema:
          format: int64
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignDocumentInitInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                signDocument: signDocument_Token
              schema:
                $ref: '#/components/schemas/SignDocumentInitOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Generate an Electronic Signature of a Document
      tags:
      - Accounts | Admin
      x-codegen-request-body-name: parameters
  /v2/moneyins/card/{cardId}:
    get:
      description: Lets you retrieve card information.
      operationId: MoneyIns_CardGet
      parameters:
      - in: path
        name: cardId
        required: true
        schema:
          format: int64
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example: {}
              schema:
                $ref: '#/components/schemas/GetCardOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Get Card Information
      tags:
      - MoneyIns | Cards
  /v2/moneyins/{accountid}/card:
    get:
      operationId: MoneyIns_CardGet
      parameters:
      - description: Account ID
        in: path
        name: accountid
        required: true
        schema:
          type: string
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                cards:
                - id: 24335
                  isRegistered: false
              schema:
                $ref: '#/components/schemas/AccountCardsOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Get the Card Associated to a Payment Account
      tags:
      - MoneyIns | Cards
  /v2/moneyins/bankwire/iban/count:
    get:
      description: "This endpoint enables you to retrieve the VIBAN count, the remaining\
        \ VIBAN count and the max VIBAN thresholds."
      operationId: MoneyIns_BankwireIbanCountGet
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                activeVibanCount: 100
                inactiveVibanCount: 100
                remainingVibanCount: 900
                maxVibanThreshold: 1000
                maxVibanPerWalletThreshold: 100
              schema:
                $ref: '#/components/schemas/GetVibanCountOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Get VIBANs count
      tags:
      - MoneyIns | Virtual IBAN
  /v2/moneyins/{accountid}/mandate:
    get:
      operationId: MoneyIns_MandateGet
      parameters:
      - description: Account ID
        in: path
        name: accountid
        required: true
        schema:
          type: string
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                mandates:
                - id: 98
                  status: 5
              schema:
                $ref: '#/components/schemas/AccountMandatsOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Get Mandate Associated to a Payment Account
      tags:
      - MoneyIns | Direct Debits
  /v2/moneyins/buynowpaylater/plans:
    get:
      description: "Activated payment plans are summarized in a list that may consist\
        \ of one, or more configured plans.  \r\nWe offer 15 and 30 day deferment\
        \ plans, and pay 3x and 4x plans.  \r\n**Note:** Payment plans are typically\
        \ configured with a member of Lemonway's Implementation team."
      operationId: MoneyIns_GetBnplPaymentPlans
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                paymentPlans:
                - id: 1
                  provider: pledg
                  type: deferred
                  deferredDays: 15
                  description: The payer bears the fees.
                - id: 2
                  provider: pledg
                  type: installments
                  installments: 3
                  description: The marketplace bears the fees.
              schema:
                $ref: '#/components/schemas/GetPaymentPlansOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Get all Actived Payment Plans
      tags:
      - MoneyIns | BNPL
  /v2/moneyins/paymentform/{formid}/completed:
    get:
      description: "This method lets you to retreive the status of a <b>completed\
        \ (or filled) payment form</b><br />\r\nScenario\r\n<ul><li>Using the POST\
        \ /moneyins/card/paymentform method, you have generated a re-usable Payment\
        \ Form (with the form Id is for example 579c7def4bb0411da294d9b57c2c1323)</li><li>Some\
        \ clients filled the form and make payment.</li><li>Each time a client completes\
        \ the form and click on the <b>Accept and Pay</b> button, Lemonway will store\
        \ the completed form and generate a new id for it, for example 7e98be392a5e45f6bc357a9ab8c623d2</li><li>The\
        \ initial status of the <b>completed form</b> is pending. When client finish\
        \ the payment process, it will switch to PAID. It could also switch to CANCEL\
        \ or ERROR.</li><li>In this example, the completed form 7e98.. was created\
        \ from the parent form 579c..The form 579c.. is reusable, which means it can\
        \ be completed several time by different clients, so it could have many completed\
        \ version.This function allows you to retreive the status of a the filled\
        \ form via its id (7e98..).</li></ul>"
      operationId: MoneyIns_PaymentFormCompletedGet
      parameters:
      - in: path
        name: formid
        required: true
        schema:
          type: string
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                form:
                  parentId: string
                  parentComment: string
                  amountTot: string
                  status: PENDING | PAID | ERROR | CANCEL
                  utcDate: 1474376289
                  created: 1474290552
                  id: 579c7def4bb0411da294d9b57c2c1323
                  optId: Order1234
                  accountPayer: "8888"
                  accountReceiver: "9999"
                  comment: Commande numéro 245
                  returnUrl: http://YourCompany.com/success
                  cancelUrl: http://YourCompany.com/cancel
                  errorUrl: http://YourCompany.com/error
                  firstNamePayer: Jean
                  lastNamePayer: DUPONT
                  emailPayer: jean.dupont@email.com
              schema:
                $ref: '#/components/schemas/GetCompletedPaymentFormOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Get Details of a Completed Payment Form
      tags:
      - MoneyIns | Pay by Link
  /v2/moneyins/{accountid}/mandate/{mandateid}/document:
    get:
      description: Download a mandate document that is registered to one of your payment
        accounts.
      operationId: MoneyIns_MandateGetDocument
      parameters:
      - description: Account Id
        in: path
        name: accountid
        required: true
        schema:
          type: string
      - description: Id of the registered SDD Mandate
        in: path
        name: mandateid
        required: true
        schema:
          format: int64
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                document: RXhlbXBsZSBwZGYgYmFzZTY0Cg==...
                name: mandate.pdf
              schema:
                $ref: '#/components/schemas/MandateGetDocumentOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Get Mandate Document
      tags:
      - MoneyIns | Direct Debits
  /v2/moneyins/paybybank/transfer/banks:
    get:
      description: "Returns the list of supported Banks to make Pay By Bank transfers.\
        \ This method enables you to design, customize and host a bank selection site,\
        \ or alternatively a bank's bankid can be retrieved from the bank list.\r\n\
        id can then be used to send your end-user directly to their bank website.\
        \ <br /><br /><b>How does it work?</b><br />\r\n\r\n1. Call the method GET\
        \ /v2/moneyins/paybybank/transfer/banks. Ensure that you use the bank's country\
        \ code in the Query Parameters to retrieve a list of banks. <br /><p></p><b>Note:</b>\
        \ If you want a comprehensive list of all supported banks do not specify a\
        \ country code. <br /><b>Note:</b> Currently there is not a way to search\
        \ for a specific bank in a country. Therefore when you create the query FR\
        \ for example, a list of French banks is displayed in the response. You will\
        \ be then required to identify the end-user's bank. <br /><p></p>\r\n2. If\
        \ you have your end-user's bankId, and would like to direct them their bank\
        \ each time they select Pay by Bank on your website: <br /><ul><li>Use the\
        \ method POST v2/moneyins/paybybank/transfer/init using the bankId in the\
        \ request body. You can then use the redirectURL and id (from the response)\
        \ to send the end-user directly to their bank without them ever using a bank\
        \ selection process.</li></ul>"
      operationId: MoneyIns_GetMoneyInBanks
      parameters:
      - description: "Comma separated string of ISO Alpha-2 country codes.\r\nAvailable\
          \ country codes include:  \r\n- France (FR)   \r\n- Spain (ES)   \r\n- Italy\
          \ (IT)   \r\n- Germany (DE)   \r\n- Portugal (PT)"
        in: query
        name: countryCodes
        schema:
          type: string
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                banks:
                  FR:
                  - countryCode: FR
                    parentName: BNP Paribas
                    logoURL: https://cdn.tink.se/provider-images/fr/fr-bnpparibas.png
                    bankName: BNP Paribas
                    bankId: fr-bnpparibas-ob
                    segments:
                    - PERSONAL
                  - countryCode: FR
                    parentName: Crédit Agricole
                    logoURL: https://cdn.tink.se/provider-images/fr/fr-creditagricole.png
                    bankName: Banque Chalus
                    bankId: fr-creditagricolebanquechalus-ob
                    segments:
                    - PERSONAL
              schema:
                $ref: '#/components/schemas/GetMoneyInBanksOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Get Pay by Bank List
      tags:
      - MoneyIns | Pay by Bank
  /v2/moneyins/bankwire:
    get:
      description: "Use `GetMoneyInIBANStatus` to obtain the list of all Money-In\
        \ by fund transfer (not by card payment) received by Lemonway, starting from\
        \ an entry date given in input to this method."
      operationId: MoneyIns_BankwireGet
      parameters:
      - description: UTC Unix Timestamp
        in: query
        name: updateDate
        required: true
        schema:
          pattern: "^-?\\d{1,12}$"
          type: string
      - description: End Date tUTC Unix Timestamp
        in: query
        name: updateEndDate
        required: true
        schema:
          pattern: "^-?\\d{1,12}$"
          type: string
      - description: "Index start from 1, let null to get all"
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: "Default 20, let it null if no pagination"
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                transactions:
                  value:
                  - receiverAccountId: pizza
                    creditAmount: 1500
                    scheduledNumber: null
                    refundAmount: 0.0
                    bankReference: null
                    ChequeSendingAddress_CorporateName: null
                    ChequeSendingAddress_Street: null
                    ChequeSendingAddress_City: null
                    ChequeSendingAddress_PostCode: null
                    id: 255
                    method: 0
                    date: 1749028528
                    commissionAmount: 100
                    comment: Order number 2457765AX2
                    status: 0
                    executionDate: 0
                    reference: null
              schema:
                $ref: '#/components/schemas/GetMoneyInIBANDetailsOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Search for a Money-In by Fund Transfer
      tags:
      - MoneyIns | Transfers In
  /v2/moneyins/sdd:
    get:
      description: Returns the list of Money-In by SDD which status has changed since
        the input date.
      operationId: MoneyIns_SddGet
      parameters:
      - description: Unique ID Generated by your Server
        in: query
        name: reference
        schema:
          maxLength: 50
          minLength: 0
          type: string
      - description: UTC Unix Timestamp
        in: query
        name: updateDate
        schema:
          pattern: "^-?\\d{1,12}$"
          type: string
      - description: End Date UTC Unix Timestamp
        in: query
        name: updateEndDate
        schema:
          pattern: "^-?\\d{1,12}$"
          type: string
      - description: "Index start from 1, let null to get all"
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: "Default 20, let it null if no pagination"
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                transactions:
                  value:
                  - receiverAccountId: pizza
                    creditAmount: 1500
                    scheduledNumber: null
                    refundAmount: 1500.0
                    bankReference: null
                    ChequeSendingAddress_CorporateName: null
                    ChequeSendingAddress_Street: null
                    ChequeSendingAddress_City: null
                    ChequeSendingAddress_PostCode: null
                    id: 255
                    method: 0
                    date: 1749028528
                    commissionAmount: 100
                    comment: "245"
                    status: 0
                    executionDate: 0
                    reference: null
              schema:
                $ref: '#/components/schemas/GetMoneyInSddOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: List of Money-In by SEPA Direct Debit (SDD)
      tags:
      - MoneyIns | Direct Debits
  /v2/moneyins/cheque:
    get:
      description: "Use GET /moneyins/cheque to obtain the list of all money-in by\
        \ cheque (received by Lemonway), starting from an entry date given in input\
        \ to this method, or by merchant token."
      operationId: MoneyIns_ChequeGet
      parameters:
      - in: query
        name: updateDate
        schema:
          pattern: "^-?\\d{1,12}$"
          type: string
      - description: End Date UTC Unix Timestamp
        in: query
        name: updateEndDate
        schema:
          pattern: "^-?\\d{1,12}$"
          type: string
      - description: "Cheque Payment (by default) or Pagaré:\r\n15 = Cheque payment.<br/>23\
          \ = Pagaré."
        in: query
        name: chequeType
        schema:
          enum:
          - 15
          - 23
          format: int32
          type: integer
      - description: Unique ID generated by your server
        in: query
        name: reference
        schema:
          maxLength: 50
          minLength: 0
          type: string
      - description: "Index start from 1, let null to get all"
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: "Default 20, let it null if no pagination"
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                transactions:
                  value:
                  - receiverAccountId: pizza
                    creditAmount: 1500
                    scheduledNumber: null
                    refundAmount: 0.0
                    bankReference: "12345678"
                    ChequeSendingAddress_CorporateName: null
                    ChequeSendingAddress_Street: null
                    ChequeSendingAddress_City: null
                    ChequeSendingAddress_PostCode: null
                    id: 255
                    method: 0
                    date: 1749028528
                    commissionAmount: 100
                    comment: Order number 2457765AX2
                    status: 0
                    executionDate: 0
                    reference: null
              schema:
                $ref: '#/components/schemas/GetMoneyInChequeDetailsOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Search for Cheque Money-In by Date or by Token
      tags:
      - MoneyIns | Cheque
  /v2/moneyins:
    get:
      description: Retrieves the details of a Payment that has previously been initiated.
      operationId: MoneyIns_MoneyInGet
      parameters:
      - description: Money-In ID
        in: query
        name: transactionId
        schema:
          format: int64
          type: integer
      - description: Money-In Comment
        in: query
        name: transactionComment
        schema:
          maxLength: 140
          minLength: 0
          type: string
      - description: Unique ID generated by your server. This ID can be used as a
          reference for a search field when looking for operation details.
        in: query
        name: transactionMerchantToken
        schema:
          maxLength: 50
          minLength: 0
          type: string
      - description: "UTC Unix timestamp, in order to return transactions initialized\
          \ after it"
        in: query
        name: startDate
        schema:
          pattern: "^-?\\d{1,12}$"
          type: string
      - description: "UTC Unix timestamp, in order to return transactions initialized\
          \ before it"
        in: query
        name: endDate
        schema:
          pattern: "^-?\\d{1,12}$"
          type: string
      - description: "Index start from 1, let null to get all"
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: "Default 20, let it null if no pagination"
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                transactions:
                  value:
                  - receiverAccountId: pizza
                    creditAmount: 500
                    scheduledNumber: null
                    card:
                      id: 0
                      is3DS: true
                      country: FRA
                      authorizationNumber: "455622"
                      maskedNumber: 4972XXXXXXXXXX03
                      type: VISA
                      isRegistered: false
                      holderName: Peter PAN
                    refundAmount: 0.0
                    bankReference: null
                    ChequeSendingAddress_CorporateName: null
                    ChequeSendingAddress_Street: null
                    ChequeSendingAddress_City: null
                    ChequeSendingAddress_PostCode: null
                    id: 255
                    method: 0
                    date: 1749028528
                    commissionAmount: 200
                    comment: Order number 245776
                    status: 0
                    executionDate: 0
                    reference: null
                    authorization:
                      id: 250
                      status: 20
                      remainingAmount: 0
                  - receiverAccountId: pizza
                    creditAmount: 500
                    scheduledNumber: null
                    card:
                      id: 0
                      is3DS: true
                      country: FRA
                      authorizationNumber: "455622"
                      maskedNumber: 4972XXXXXXXXXX03
                      type: VISA
                      isRegistered: false
                      holderName: Peter PAN
                    refundAmount: 0.0
                    bankReference: null
                    ChequeSendingAddress_CorporateName: null
                    ChequeSendingAddress_Street: null
                    ChequeSendingAddress_City: null
                    ChequeSendingAddress_PostCode: null
                    id: 255
                    method: 0
                    date: 1749028528
                    commissionAmount: 200
                    comment: Order number 245776
                    status: 0
                    executionDate: 0
                    reference: null
                    childTransactions:
                    - id: 250
                      date: 0
                      commissionAmount: 0
                      comment: null
                      amount: 100
                      refundAmount: 0.0
                      executionDate: 0
                      status: 0
                      reference: null
                  - receiverAccountId: hotel
                    creditAmount: 500
                    scheduledNumber: null
                    refundAmount: 0.0
                    bankReference: null
                    ChequeSendingAddress_CorporateName: null
                    ChequeSendingAddress_Street: null
                    ChequeSendingAddress_City: null
                    ChequeSendingAddress_PostCode: null
                    buyNowPayLaterInfo:
                      paymentPlanId: 1
                      type: installments
                      secondInstallmentPaymentDate: 2025-08-04
                    id: 259
                    method: 30
                    date: 1749028528
                    commissionAmount: 200
                    comment: Order number 2457790
                    status: 0
                    executionDate: 0
                    reference: null
              schema:
                $ref: '#/components/schemas/GetMoneyInTransDetailsOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Retrieve Payment Details
      tags:
      - MoneyIns | Cards
  /v2/moneyins/{transactionid}/cancel:
    put:
      description: "With the PUT /moneyins/{transactionid}/cancel method, you can\
        \ cancel a pre-authorization / SEPA Direct Debit (SDD) request."
      operationId: MoneyIns_CancelPut
      parameters:
      - in: path
        name: transactionid
        required: true
        schema:
          format: int64
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelMoneyInInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                transaction:
                  receiverAccountId: pizza
                  creditAmount: 1500
                  scheduledNumber: null
                  card:
                    id: 0
                    is3DS: true
                    country: FRA
                    authorizationNumber: "4564"
                    maskedNumber: 4972XXXXXXXXXX03
                    type: VISA
                    isRegistered: false
                    holderName: Peter PAN
                  refundAmount: 0.0
                  bankReference: null
                  ChequeSendingAddress_CorporateName: null
                  ChequeSendingAddress_Street: null
                  ChequeSendingAddress_City: null
                  ChequeSendingAddress_PostCode: null
                  id: 255
                  method: 0
                  date: 1749028528
                  commissionAmount: 200
                  comment: order 245
                  status: 0
                  executionDate: 0
                  reference: null
              schema:
                $ref: '#/components/schemas/CancelMoneyInOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Cancel a Money-In
      tags:
      - MoneyIns | Direct Debits
      - MoneyIns | Cards
      x-codegen-request-body-name: parameters
  /v2/moneyins/card/{cardid}/unregister:
    put:
      description: This method lets you unregister (break the link) between a card
        and a payment account.
      operationId: MoneyIns_CardUnregisterPut
      parameters:
      - in: path
        name: cardid
        required: true
        schema:
          format: int64
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnregisterCardInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                cardId: 0
              schema:
                $ref: '#/components/schemas/UnregisterCardOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Unregister a Card Token
      tags:
      - MoneyIns | Cards
      x-codegen-request-body-name: parameters
  /v2/moneyins/{transactionid}/validate:
    put:
      description: "This call is only used in deferred payment. Pre-authroriztion\
        \ validation can only be done once.\r\n1. After initiating a pre-authorized\
        \ Web Payment using `POST /moneyins/card/webinit`, you received a Transaction\
        \ Id from Lemonway.\r\n2. Depending on the number you specified as captureDelayedDays,\
        \ funds are blocked between 1 to 6 days maximum.\r\n3. To validate the pre-authorization,\
        \ you need to call `PUT /moneyins/{transactionid}/validate`. If the capture\
        \ is a success, then the original transaction status switches to Success."
      operationId: MoneyIns_ValidatePut
      parameters:
      - in: path
        name: transactionid
        required: true
        schema:
          format: int64
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyInValidateInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                transaction:
                  receiverAccountId: Pizza56
                  creditAmount: 1500
                  scheduledNumber: null
                  refundAmount: 0.0
                  bankReference: null
                  ChequeSendingAddress_CorporateName: null
                  ChequeSendingAddress_Street: null
                  ChequeSendingAddress_City: null
                  ChequeSendingAddress_PostCode: null
                  id: 255
                  method: 0
                  date: 1749028528
                  commissionAmount: 200
                  comment: null
                  status: 0
                  executionDate: 0
                  reference: null
                  authorization:
                    id: 100
                    status: 20
                    remainingAmount: null
              schema:
                $ref: '#/components/schemas/MoneyInValidateOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Capture a Deferred Payment
      tags:
      - MoneyIns | Cards
      x-codegen-request-body-name: parameters
  /v2/moneyins/paymentform/{formid}/disable:
    put:
      description: Disable a payment form created by CreatePaymentForm
      operationId: MoneyIns_PaymentFormDisablePut
      parameters:
      - in: path
        name: formid
        required: true
        schema:
          type: string
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                message: e6a3bbb8d6864cdba6e311d65e3d2005
              schema:
                $ref: '#/components/schemas/DisablePaymentFormOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Disable a Payment Form
      tags:
      - MoneyIns | Pay by Link
  /v2/moneyins/ideal/{transactionid}/confirm:
    put:
      description: "This method finalizes the credit of a payment account by iDeal,\
        \ after the user has returned to your website.<br />\r\n            You can\
        \ only finalize the operation once."
      operationId: MoneyIns_IDealConfirmPut
      parameters:
      - in: path
        name: transactionid
        required: true
        schema:
          format: int64
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                transactions:
                  receiverAccountId: Pizza56
                  creditAmount: 1500
                  scheduledNumber: null
                  refundAmount: 0.0
                  bankReference: null
                  ChequeSendingAddress_CorporateName: null
                  ChequeSendingAddress_Street: null
                  ChequeSendingAddress_City: null
                  ChequeSendingAddress_PostCode: null
                  id: 255
                  method: 0
                  date: 1749028528
                  commissionAmount: 200
                  comment: Order number 2457765AX2
                  status: 0
                  executionDate: 0
                  reference: null
              schema:
                $ref: '#/components/schemas/MoneyInIDealConfirmOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Finalize an iDeal Payment
      tags:
      - MoneyIns | Local Payments
  /v2/moneyins/sdd/mandate/{mandatid}/unregister:
    put:
      description: This allows you to deactivate a mandate
      operationId: MoneyIns_SddMandateUnregisterPut
      parameters:
      - in: path
        name: mandatid
        required: true
        schema:
          format: int64
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnregisterSddMandateInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                SDDMandate:
                  id: 255
                  status: 8
              schema:
                $ref: '#/components/schemas/UnregisterSddMandateOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Deactivate a Mandate
      tags:
      - MoneyIns | Direct Debits
      x-codegen-request-body-name: parameters
  /v2/moneyins/card/direct/{transactionid}/3dconfirm:
    put:
      description: "This method finalizes the credit of a wallet by card after 3D\
        \ Secure authentication of the client:<br />\r\n1. After initiating a Direct\
        \ Payment using <b>POST /moneyins/card/direct/3dinit</b>, you receive an Authentication\
        \ URL and a Transaction Id. If you want to register a card for future payments\
        \ set **registerCard=true**\r\n2. With the Authentication URL, you are able\
        \ to redirect the end-user to the ACS (Bank Authentication Server) Page\r\n\
        3. After 3D Secure Authentication, you will be called back on the ReturnURL\r\
        \n4. You need to then call <b>POST /moneyins/card/direct/{transactionid}/3dauthenticate</b>\
        \ to verify the authentication process was done.\r\n5. If the authentication\
        \ was done then call <b>PUT /moneyins/card/direct/{transactionid}/3dconfirm</b>\
        \ specifying the return Transaction ID to finalize the payment. <br />\r\n\
        For Subscriptions with equal recurring amounts: for the initial subscription\
        \ payment, use the <b>POST /moneyins/card/direct/3dinit</b> and then <b>POST\
        \ /moneyins/card/direct/{transactionid}/3dauthenticate</b> and <b>PUT /moneyins/card/direct/{transactionid}/3dconfirm</b>\
        \ Ensure that you set: <b>registerCard=true</b> Use POST /moneyins/card/{cardid}/rebill\
        \ for all subsequent payments."
      operationId: MoneyIns_CardDirect3DConfirmPut
      parameters:
      - in: path
        name: transactionid
        required: true
        schema:
          format: int64
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyIn3DConfirmInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                transaction:
                  receiverAccountId: Pizza56
                  creditAmount: 1500
                  scheduledNumber: null
                  card:
                    id: 0
                    is3DS: true
                    country: FRA
                    maskedNumber: "43245"
                    isRegistered: false
                    holderName: Peter PAN
                  refundAmount: 0.0
                  bankReference: null
                  ChequeSendingAddress_CorporateName: null
                  ChequeSendingAddress_Street: null
                  ChequeSendingAddress_City: null
                  ChequeSendingAddress_PostCode: null
                  id: 255
                  method: 0
                  date: 1749028528
                  commissionAmount: 100
                  comment: Order number 2457765AX2
                  status: 0
                  executionDate: 0
                  reference: null
              schema:
                $ref: '#/components/schemas/MoneyIn3DConfirmOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Finalize a Direct Payment (PCI-DSS compliant only)
      tags:
      - MoneyIns | Cards
      x-codegen-request-body-name: parameters
  /v2/moneyins/sdd/init:
    post:
      description: "SEPA Direct Debit requests are sent to our bank every working\
        \ day at 10:30am (CET).<br />\r\nPrequisites:<br />\r\n1. You allow your client\
        \ to fill in a mandate, and pre-registers it with Lemonway, by calling POST\
        \ /moneyins/sdd/mandate<br />\r\n2. Follow the SignDocumentInit process in\
        \ order to electronically sign the mandate<br />\r\nRequest the direct debit:<br\
        \ />\r\n1. You call POST /moneyins/sdd/init to request a debit<br />\r\n2.\
        \ Lemonway sends the request to the bank every working day at 10:30am (CET).<br\
        \ />\r\n3. Once the request is sent to the bank, the debit on the client's\
        \ bank account will happens about 1 working day later. If you indicate a date,\
        \ the debit will happen on the given date.<br />\r\n4. When Lemonway receives\
        \ the payment, the SDD payment will be validated and the client payment account\
        \ will be credited<br />\r\n5. You can call GET /moneyins/sdd once a day in\
        \ order to know which payments have been validated.You can also use our notification\
        \ functionality.<br />\r\n**Important: Setting up an SDD with Italian Banks**.\
        \ This rule **only applies to the first** B2B direct debit request for an\
        \ Italian IBAN.    \r\nThereafter, **all future debits** take place within\
        \ the **standard 1-2 day** time frame. The mandate validation process for\
        \ Italian banks  \r\ntakes approximately 14 calendar days from the reception\
        \ of the first SDD request. Even if you initially specify a debit date, the\
        \ funds  \r\nwill only be debited 14 days after the request date.  \r\n**Example:**\
        \ If you specify that you would like the first Direct Debit to take place\
        \ on 4th April 2022 and you submit a request before 10:30am (CET)  \r\non\
        \ the 30th March 2022. The direct debit will take place on 18th April 2022."
      operationId: MoneyIns_SddInitPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyInSddInitInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                transaction:
                  receiverAccountId: Pizza56
                  creditAmount: 1500
                  scheduledNumber: null
                  refundAmount: 0.0
                  bankReference: null
                  ChequeSendingAddress_CorporateName: null
                  ChequeSendingAddress_Street: null
                  ChequeSendingAddress_City: null
                  ChequeSendingAddress_PostCode: null
                  id: 677
                  method: 0
                  date: 1749028528
                  commissionAmount: 200
                  comment: "245"
                  status: 0
                  executionDate: 0
                  reference: Dze8778
              schema:
                $ref: '#/components/schemas/MoneyInSddInitOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Request a SEPA Direct Debit (SDD)
      tags:
      - MoneyIns | Direct Debits
      x-codegen-request-body-name: parameters
  /v2/moneyins/ideal/init:
    post:
      description: "You will need 3 integration points on your code:\r\n<ul><li>One\
        \ call to Lemonway DirectKit API to init iDeal payment to credit the payment\
        \ account</li><li>One redirection from your website to the return URL by IDealInit</li><li>One\
        \ call to Lemonway DirectKit API to finalize the iDeal payment</li></ul>"
      operationId: MoneyIns_IDealInitPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyInIDealInitInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 589
                actionUrl: https://gateway.cardgateplus.com/simulator/?return_url=http://localhost/test/3DS2.php&ec=2647565
              schema:
                $ref: '#/components/schemas/MoneyInIDealInitOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Initialize iDeal Payment
      tags:
      - MoneyIns | Local Payments
      x-codegen-request-body-name: parameters
  /v2/moneyins/mbway/init:
    post:
      description: "Payment process:\r\n<ul><li>You call the Lemonway DirectKit API,\
        \ provide a phone number to initialize the payment</li><li>The payment order\
        \ is sent to the customer's smartphone</li><li>The customer pays with their\
        \ smartphone</li><li>You will be notified after the payment is settled</li></ul>"
      operationId: MoneyIns_MbwayInitPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyInMbwayInitInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                euPagoInit:
                  id: 589
                  reference: "00000.425"
              schema:
                $ref: '#/components/schemas/MoneyInMbwayInitOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: (Deprecated) Initialize MB WAY Payment
      tags:
      - MoneyIns | Local Payments
      x-codegen-request-body-name: parameters
  /v2/moneyins/card/create:
    post:
      description: "Credit an account with Money-In with card without PSP process.\r\
        \nThis functionality is available depending on your contract."
      operationId: MoneyIns_CardCreatePost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyInCreateInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                transaction:
                  receiverAccountId: Pizza56
                  creditAmount: 1500
                  scheduledNumber: null
                  card:
                    id: 0
                    is3DS: true
                    country: FRA
                    authorizationNumber: "218571"
                    maskedNumber: XXXX XXXX XXXX 9845
                    isRegistered: false
                    holderName: Peter PAN
                  refundAmount: 0.0
                  bankReference: null
                  ChequeSendingAddress_CorporateName: null
                  ChequeSendingAddress_Street: null
                  ChequeSendingAddress_City: null
                  ChequeSendingAddress_PostCode: null
                  id: 255
                  method: 0
                  date: 1749028528
                  commissionAmount: 200
                  comment: Order number 2457765AX2
                  status: 0
                  executionDate: 0
                  reference: null
              schema:
                $ref: '#/components/schemas/MoneyInOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Credit an Account with Money-In with Card without PSP process
      tags:
      - MoneyIns | Cards
      x-codegen-request-body-name: parameters
  /v2/moneyins/card/direct:
    post:
      description: "<b>If your system is not PCI-DSS do not to save any card data\
        \ on your system.</b>\r\n            This method enables you to credit an\
        \ account with a non 3-D Secure card payment. Should only be used on mobile\
        \ devices. For internet payments use 3-D Secure.<br />\r\n            This\
        \ method allows our system to credit a wallet and debit a card in real time.\
        \ Your server has to send us the wallet ID to credit, all card data, the amount,\
        \ and a comment.<br /><b>Note:</b> Lemonway does not recommend you use the\
        \ MoneyIn method from January 2021. You should now use `POST /moneyins/card/direct/3dini`\
        \ and `PUT /moneyins/card/direct/{transactionid}/3dconfirm` only."
      operationId: MoneyIns_CardDirectPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyInInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                transaction:
                  receiverAccountId: Pizza56
                  creditAmount: 1500
                  scheduledNumber: null
                  card:
                    id: 0
                    is3DS: true
                    country: FRA
                    authorizationNumber: "218571"
                    maskedNumber: XXXX XXXX XXXX 9845
                    isRegistered: false
                    holderName: Peter PAN
                  refundAmount: 0.0
                  bankReference: null
                  ChequeSendingAddress_CorporateName: null
                  ChequeSendingAddress_Street: null
                  ChequeSendingAddress_City: null
                  ChequeSendingAddress_PostCode: null
                  id: 255
                  method: 0
                  date: 1749028528
                  commissionAmount: 200
                  comment: Order number 2457765AX2
                  status: 0
                  executionDate: 0
                  reference: null
              schema:
                $ref: '#/components/schemas/MoneyInOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: (Deprecated) Credit an Account with a non 3-D Secure Card Payment (PCI-DSS
        compliant only)
      tags:
      - MoneyIns | Cards
      x-codegen-request-body-name: parameters
  /v2/moneyins/cheque/init:
    post:
      description: "The following rules apply:\r\nIf you want to pre-enter the cheques\
        \ in our system, use the POST /moneyins/cheque/init method<br />\r\nThe cheque\
        \ must be made out to Lemonway<br />\r\nOn the back of the cheque, please\
        \ enter a code to facilitate reconciliation. It will be of the following form:\
        \ XXXXX-YYYYYYYYYY <br /><ul><li>\"XXXXX: code identifying you as indicated\
        \ in your production configuration form </li><li>-: a separation dash:</li><li>YYYYYYYYY\
        \ : external identifier of your user's payment account </li></ul>\r\nThe holder\
        \ of the cheque must be identical to that of the payment account to be credited\
        \ <br />"
      operationId: MoneyIns_ChequeInitPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyInChequeInitInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                transaction:
                  receiverAccountId: Pizza56
                  creditAmount: 1500
                  scheduledNumber: null
                  refundAmount: 0.0
                  bankReference: null
                  ChequeSendingAddress_CorporateName: null
                  ChequeSendingAddress_Street: null
                  ChequeSendingAddress_City: null
                  ChequeSendingAddress_PostCode: null
                  id: 677
                  method: 0
                  date: 1749028528
                  commissionAmount: 200
                  comment: "245"
                  status: 0
                  executionDate: 0
                  reference: Dze8778
              schema:
                $ref: '#/components/schemas/MoneyInChequeInitOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Register a Cheque
      tags:
      - MoneyIns | Cheque
      x-codegen-request-body-name: parameters
  /v2/moneyins/paypal/init:
    post:
      description: "Lets you integrate PayPal payments on your platform. The integration\
        \ is implemented as a standard web page redirect to PayPal.com, it enables\
        \ buyers to login to their accounts and make a payment to your organization."
      operationId: MoneyIns_MoneyInPayPalInit
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitPayPalTransactionInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 830236
                redirectionUrl: https://www.sandbox.paypal.com/checkoutnow?token=77D22413X7638172U
                payPalOrderId: 77D22413X7638172U
              schema:
                $ref: '#/components/schemas/InitPayPalTransactionOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Initiate Pay by PayPal
      tags:
      - MoneyIns | PayPal
      x-codegen-request-body-name: input
  /v2/moneyins/sdd/mandate:
    post:
      description: "This method allows you to pre-register a mandate.<br /><ul><li>If\
        \ you register a mandate with electronic signature, the mandate will be pending.\
        \ You need to use the [Generate an Electronic Signature of a Document](https://documentation.lemonway.com/reference/accounts_documentssigninitpost)\
        \ call to sign the mandate. The status will change accordingly.</li><li>If\
        \ you register a mandate with opt-in signature, the mandate will be automatically\
        \ validated. Please refer to the Support Team for this option.</li></ul>"
      operationId: MoneyIns_SddMandatePost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterSddMandateInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                SSDMandate:
                  id: 253
                  status: 0
                  UniqueMandateReference: XXXXXXXXX
              schema:
                $ref: '#/components/schemas/RegisterSddMandateOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Register a SDD Mandate
      tags:
      - MoneyIns | Direct Debits
      x-codegen-request-body-name: parameters
  /v2/moneyins/sofort/init:
    post:
      description: "You will need 2 integration points on your code:\r\n<ul><li>One\
        \ call to Lemonway DirectKit API to init Sofort payment to credit the payment\
        \ account</li><li>One redirection from your website to the return URL by Sofort</li></ul>"
      operationId: MoneyIns_SofortInitPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyInSofortInitInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 589
                actionUrl: https%3A%2F%2Fwww.sofort.com%2Fpayment%2Fgo%2Fa47c876018e0ffa51e462aad0793ac10f71ee9e1
              schema:
                $ref: '#/components/schemas/MoneyInSofortInitOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: (Deprecated) Initialize Sofort Payment
      tags:
      - MoneyIns | Local Payments
      x-codegen-request-body-name: parameters
  /v2/moneyins/card/webinit:
    post:
      description: "**Payment with a New Card**  \r\n1. By calling `POST /moneyins/card/webinit`,\
        \ you receive a MoneyInToken. If you want to register a card for future payments\
        \ set `registerCard=true` and you will also receive a `cardId`    \r\n2. With\
        \ this token, you are able to redirect the end-user on the PSP payment page.\
        \ You have to combine the Token and the Lemonway Webkit URL to get the Payment\
        \ Page URL. You can find the Webkit URL in the onboarding email. For example:\
        \ `https://sandbox-webkit.lemonway.fr/YOUR_COMPANY/dev/ `  \r\n3. After submitting\
        \ the payment, the end-user will be redirected to:  \r\n   - `returnUrl` in\
        \ case of success  \r\n   - `cancelUrl` in case of cancellation   \r\n   -\
        \ `errorUrl` in case of error    \r\n\r\nThese 3 URLs must be public accessible\
        \ so your end-user, and our WebKit server could send requests to them.  \r\
        \n\r\n---\r\n**Payment with a Registered Card (Web)**  \r\nTo use this type\
        \ of payment you have to make at least one transaction and set `registerCard=true`.\
        \ On this first transaction, we will return a `cardId` that is associated\
        \ with the client card. Ensure that you save this `cardId` to use for future\
        \ payment.  \r\n**Note:** To ensure that the Client’s card has been registered,\
        \ call the following method before you initiative payments on a registered\
        \ card: `GetCard`   \r\nPayments on a registered card use the following process:\
        \  \r\n1. You call `MoneyInWebInit` ensuring that you include the `cardId`\
        \ in the body of the request. Refer to **steps 2 and 3** as stated above.\r\
        \n---\r\n**Subscription Payments**   \r\nA prerequisite to setting up a subscription\
        \ is that you have previously made a payment with a card and registered the\
        \ card By calling `POST /moneyins/card/webinit`   \r\n**Note:** When you create\
        \ a recurring payment ensure that the `recurringAvgAmount` is higher than\
        \ `totalAmount`. If a lower amount is used for `recurringAvgAmount` you will\
        \ receive a  directkit error message: 368: `recurringAvgAmount` stating that\
        \ the amount should be greater than the transaction amount.  \r\n**Note:**\
        \ Initial transaction for a subscription can be for a predetermined or an\
        \ undetermined length of time.  \r\nAfter you have registered a card refer\
        \ to `POST /moneyins/card/{cardid}/rebill` to begin setting up a subscription\
        \ or payment by delivery system.  \r\n**Important:** To ensure the likelyhood\
        \ of frictionless payments you must setup payments of equal recurring amounts.\r\
        \n---\r\n**Deferred Payments**   \r\nIf you want to create a deferred Web\
        \ payment, in the request please indicate within `captureDelayedDays`, a number\
        \ between 1 and 6 days to have a guaranteed payment.  \r\nTo validate the\
        \ pre-authorization and capture funds, you need to call `PUT /moneyins/{transactionid}/validate`\
        \ before 6 days. If the capture is a success, then the original transaction\
        \ status switches to Success.  \r\nAvailable on Mercanet v2"
      operationId: MoneyIns_CardWebInitPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyInWebInitInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                webKitToken: 1wGaBwkdOmOxWT0s4t1Z1364815
                id: 3232
                'id ': 3232
                cardId: 34
              schema:
                $ref: '#/components/schemas/MoneyInWebInitOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Initiate a Web Payment
      tags:
      - MoneyIns | Cards
      x-codegen-request-body-name: parameters
  /v2/moneyins/payshop/init:
    post:
      description: "Payment process\r\n<ul><li>Your system will call the Lemonway\
        \ DirectKit API to initialize the credit transaction of a payment account\
        \ and get a payment reference</li><li>Your system gives the payment reference\
        \ to the final customer</li><li>The customer uses the reference to pay in\
        \ a shop</li><li>Your system will be notified after the payment is settled</li></ul>"
      operationId: MoneyIns_PayshopInitPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyInPayshopInitInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                euPagoInit:
                  id: 589
                  reference: "5635208367072"
              schema:
                $ref: '#/components/schemas/MoneyInPayshopInitOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: (Deprecated) Initialize Payshop Payment
      tags:
      - MoneyIns | Local Payments
      x-codegen-request-body-name: parameters
  /v2/moneyins/trustly/init:
    post:
      description: Trustly is a Swedish payment method used in 29 European countries.
        With Trustly you can buy and pay from your bank account.
      operationId: MoneyIns_TrustlyInitPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyInTrustlyInitInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 589
                actionUrl: https://trustly.com/_/orderclient.php?SessionID=eae09003-8fba-4ffa-9f08-b37aa25241a3&OrderID=2057765146&Locale=
              schema:
                $ref: '#/components/schemas/MoneyInTrustlyInitOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: (Deprecated) Initialize Trustly Payment
      tags:
      - MoneyIns | Local Payments
      x-codegen-request-body-name: parameters
  /v2/moneyins/card/register:
    post:
      description: "Register a card and associate it with a Payment Account. The end-user\
        \ does not have to re-enter their card details for future payments.<br /><b>Important:</b>\
        \ Ensure your website login is secured to avoid any security breach that may\
        \ causes unauthorized access (for example, phishing). <br /><b>Note:</b> Lemonway\
        \ does not recommend you use the MoneyIn method from January 2021. You should\
        \ now use POST /moneyins/card/direct/3dini and PUT /moneyins/card/direct/{transactionid}/3dconfirm\
        \ only."
      operationId: MoneyIns_CardRegisterPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterCardInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                card:
                  id: 255
                  maskedNumber: todo
                  isRegistered: false
                  holderName: Peter PAN
              schema:
                $ref: '#/components/schemas/RegisterCardOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: (Deprecated) Register a Card for Direct Payments (PCI-DSS compliant
        only)
      tags:
      - MoneyIns | Cards
      x-codegen-request-body-name: parameters
  /v2/moneyins/paytrail/init:
    post:
      description: "You will need 2 integration points on your code:\r\n<ul><li>One\
        \ call to Lemonway DirectKit API to init PayTrail payment to credit the payment\
        \ account</li><li>One redirection from your website to the return URL by PayTrail</li></ul>"
      operationId: MoneyIns_PayTrailInitPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyInPayTrailInitInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 589
                actionUrl: https://payment.paytrail.com/payment/load/token/9jt1D3SeQYZhirUAKvAgHppxPvJqLGYC1rB7XAj5svkVYeanSydHi7ZTzvMVaRAz
              schema:
                $ref: '#/components/schemas/MoneyInPayTrailInitOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: (Deprecated) Initialize PayTrail Payment
      tags:
      - MoneyIns | Local Payments
      x-codegen-request-body-name: parameters
  /v2/moneyins/mobilePay/init:
    post:
      description: "You will need two integration points on your code:\r\n<ul><li>One\
        \ call to Lemonway DirectKit API to init MobilePay payment to credit the payment\
        \ account</li><li>One redirection from your website to the return URL by MobilePay</li></ul>"
      operationId: MoneyIns_MobilePayInitPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyInMobilePayInitInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 589
                actionUrl: https://quickpay.com/payment/9jt1D3SeQYZhirUAKvAgHppxPvJqLGYC1rB7XAj5svkVYeanSydHi7ZTzvMVaRAz
              schema:
                $ref: '#/components/schemas/MoneyInMobilePayInitOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: (Deprecated) Initialize MobilePay Payment
      tags:
      - MoneyIns | Local Payments
      x-codegen-request-body-name: parameters
  /v2/moneyins/multibanco/init:
    post:
      description: "Payment process:\r\n<ul><li>You call the Lemonway DirectKit API\
        \ to initialize the credit transaction of a payment account and get a payment\
        \ reference</li><li>You give the payment reference to the final customer</li><li>The\
        \ customer uses the reference to pay on an ATM</li><li>The will be notified\
        \ after the payment is settled</li></ul>"
      operationId: MoneyIns_MultibancoInitPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyInMultibancoInitInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                euPagoInit:
                  id: 589
                  reference: "000257.45875687"
              schema:
                $ref: '#/components/schemas/MoneyInMultibancoInitOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Initialize Multibanco Payment
      tags:
      - MoneyIns | Local Payments
      x-codegen-request-body-name: parameters
  /v2/moneyins/card/paymentform:
    post:
      description: " Accept payments by an SMS, email, or document.   \r\n Create\
        \ a form that permits your customers to make card payments by link.     \r\
        \n \r\n- Payment forms are generated and managed by Lemonway.  \r\n- Payment\
        \ forms are publicly accessible, making it possible for anyone to pay with\
        \ a valid link.    \r\n- Payment by bank card is only supported.  \r\n\r\n\
        Payment Scenerios:  \r\n1. **Benificary Wallet `walletReceiver` not specified**\
        \  \r\nYou only specify `walletPayer` and not `walletReceiver` in the body\
        \ parameters.  \r\nThey make a card payment and funds are transfered to the\
        \ `walletPayer` (a designated wallet)\r\n\r\n2. **Payer and Benificary Wallet\
        \ defined**  \r\n\r\n3. **Benificary pecified**  \r\n\r\n **Note:** Deferred\
        \ payment is not supported."
      operationId: MoneyIns_CardPaymentFormPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentFormInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                form:
                  walletIp: 82.26.79.125
                  walletUa: "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36\
                    \ (KHTML, like Gecko) Chrome/48.0.2564.116 Safari/537.3"
                  amountTotRange: 1100-50100
                  amountCom: ""
                  language: fr
                  version: "1.9"
                  style: https://YourCompany.com/public/payment.css
                  atosStyle: https://YourCompany.com/public/atos.css
                  notifUrl: http://login:pass@YourCompany.com/notif/?origine=lemonway&orderId=135
                  options: ""
                  active: true
                  raisonSociale: null
                  id: 579c7def4bb0411da294d9b57c2c1323
                  optId: Order1234
                  accountPayer: "8888"
                  accountReceiver: "9999"
                  comment: Commande numéro 245
                  returnUrl: http://YourCompany.com/ThankYou
                  cancelUrl: http://YourCompany.com/PleaseComeBackLater
                  errorUrl: http://YourCompany.com/Sorry
                  firstNamePayer: Jean
                  lastNamePayer: DUPONT
                  emailPayer: jean.dupont@email.com
              schema:
                $ref: '#/components/schemas/CreatePaymentFormOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Create Payment Form (Pay by Link)
      tags:
      - MoneyIns | Pay by Link
      x-codegen-request-body-name: parameters
  /v2/moneyins/card/direct/3dinit:
    post:
      description: "**Payment with a New Card**  \r\nThis method is more complex that\
        \ non 3-D Secure payment, but 3-D Secure will ensure that your business is\
        \ secure.  \r\nYou will need 3 integration points:  \r\n1. By calling `POST\
        \ /moneyins/card/direct/3dinit`, you receive a Authentication URL and a Transaction\
        \ Id.  If you want to register a card for to use card severval times or subscription\
        \ payments set **registerCard=true.**  \r\n2. With the Authentication URL,\
        \ you are able to redirect the end-user to the ACS (Bank Authentication Server)\
        \ Page.    \r\n3. After 3D Secure Authentication, with the callback ReturnURL.\
        \  \r\n4. You need to then call `POST /moneyins/card/direct/{transactionid}/3dauthenticate`\
        \ to verify the authentication process was done.  \r\n5. If the authentication\
        \ was done then, you then call `PUT /moneyins/card/direct/{transactionid}/3dconfirm`\
        \ specifying the returned Transaction Id to finalize the payment.\r\n---\r\
        \n**Payment with a Registered Card**  \r\n1. Ensure you have a cardId then\
        \ call `POST /moneyins/card/direct/3dinit` specifying the cardID parameter\
        \ (cardId and CVV (optional)). If you want to improve the transaction success\
        \ rate add the CVV code in the parameters.  \r\n2. Refer to **steps 2 - 5**\
        \ as stated above.  \r\n**Note:** You require a cardId to make a transaction\
        \ on a registered card.  This id is displayed when you finalized your first\
        \ payment with the registered card using `PUT /moneyins/card/direct/{transactionid}/3dconfirm`\
        \   \r\nPayments on a registered card use the following process:  \r\nCall\
        \ MoneyIn3DInit ensuring that you include the `cardId` in the body of the\
        \ request. Refer to steps **2 - 5**  as stated above.  \r\n**Note:** To ensure\
        \ that the client’s card has been registered, call the following method before\
        \ you initiative payments on a registered card: `GetCard`\r\n---\r\n**Subscription\
        \ Payments**   \r\nA prerequisite to setting up a subscription is that you\
        \ have previously made a payment with a card and registered the card using\
        \ `POST /moneyins/card/direct/3dinit` \r\n**Note:** When you create a recurring\
        \ payment ensure that the `recurringAvgAmount` is higher than totalAmount.\
        \ If a lower amount is used for `recurringAvgAmount` you will receive a directkit\
        \ error message 368: `recurringAvgAmount` should be greater than the transaction\
        \ amount.  \r\n**Note:** After you have registered a card refer to `POST /moneyins/card/{cardid}/rebill`\
        \ to begin setting up a subscription or payment by delivery system.  \r\n\
        **Important:** To ensure the likelyhood of frictionless payments you must\
        \ setup payments of equal recurring amounts."
      operationId: MoneyIns_Direct3DInitPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyIn3DInitInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                acs:
                  actionUrl: https://myurl.com
                  actionMethod: POST
                  pareqFieldName: PaReq
                  pareqFieldValue: eJxVkdtSwjAQhl+F4QGapPTILJlBYZQZW7XCoNxl2tVWe4C0tfD2JqWIXmW/PWX3X1inEnHxgnErkUOAdS0+cJQls7FLKaMeG3N4mkd44PCNss6qkjODGiaQC6oiGaeibDiI+HCzCrnlu67jAhkQCpSrBWcOZd7EtphNXZ/6QM5uKEWB/
                  termurlFieldName: TermUrl
                  mdFieldName: MD
                  mdFieldValue: 18V64ziCeuvLFKPdne7G
                  mpiResult: null
                transaction:
                  receiverAccountId: Pizza56
                  creditAmount: 1500
                  scheduledNumber: null
                  maskedLabel: XXXX XXXX XXXX 9845
                  refundAmount: 0.0
                  bankReference: null
                  ChequeSendingAddress_CorporateName: null
                  ChequeSendingAddress_Street: null
                  ChequeSendingAddress_City: null
                  ChequeSendingAddress_PostCode: null
                  id: 677
                  method: 0
                  date: 1749028529
                  commissionAmount: 200
                  comment: Order number 2457765AX2
                  status: 0
                  executionDate: 0
                  reference: Dze8778
              schema:
                $ref: '#/components/schemas/MoneyIn3DInitOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Initiate a Direct Payment (PCI-DSS compliant only)
      tags:
      - MoneyIns | Cards
      x-codegen-request-body-name: parameters
  /v2/moneyins/buynowpaylater/init:
    post:
      description: Depending on your activated payment plans this call will let you
        setup a new payment plan.
      operationId: MoneyIns_CreateBnplPayment
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBnplPaymentInput'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateBnplPaymentInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateBnplPaymentInput'
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateBnplPaymentInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateBnplPaymentInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 124
                redirectUrl: https://webkit.lemonway.fr/mb/recette/prod/?moneyintoken=75b12bd8710840969a6f879459dc0e50
              schema:
                $ref: '#/components/schemas/CreateBnplPaymentOutput'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateBnplPaymentOutput'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateBnplPaymentOutput'
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateBnplPaymentOutput'
          description: OK
      summary: Create New Pending Payment
      tags:
      - MoneyIns | BNPL
      x-codegen-request-body-name: createBnplPaymentInput
  /v2/moneyins/bankwire/iban/create:
    post:
      description: This feature enables you to create dedicated (virtual) IBANs. These
        IBANs are linked to a dedicated payment account and give the possibility to
        you to receive wire transfers directly to these accounts. The payment schema
        must be validated prior with Lemonway. This method should be called once you
        are certain a payment will be received. We advise against associating an IBAN
        to a payment account preventively. Please contact your account manager to
        have this function activated.
      operationId: MoneyIns_BankwireIbanCreatePost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIBANInput'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateIBANInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateIBANInput'
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateIBANInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateIBANInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 255
                iban: FR1420041010050500013M02606
                bic: ABCDEFGHIJK
                holder: jean Dupont
                domiciliation: 14 rue de la Beaune 93100 Montreuil France
                status: 5
                maxAvailableIbanPerWallet: 5
                maxAvailableIban: 120
                pdf: RXhlbXBsZSBwZGYgYmFzZTY0Cg==...
                qrCode: RXhlbXBsZSBRUiBDT0RFIGJhc2U2NAo=...
              schema:
                $ref: '#/components/schemas/CreateIBANOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Create Dedicated Virtual IBANs
      tags:
      - MoneyIns | Virtual IBAN
      x-codegen-request-body-name: parameters
  /v2/moneyins/card/{cardid}/rebill:
    post:
      description: "<b>Important:</b> Due to PSD2 requirements for strong authentication,\
        \ rebilling with a registered card <b>for amounts that change on each transaction</b>\
        \ is no longer available. In the short-term, for completely new transactions,\
        \ we kindly ask you to use <b>POST /moneyins/card/webinit</b> and ask your\
        \ clients to re-enter their card details in the payment page. <br /><br />\r\
        \n            Use this method to ask to credit a payment account with a card\
        \ linked to the payment account: <br /><br />\r\n            1. The payment\
        \ account ID to credit <br />\r\n            2. The card ID <br />\r\n   \
        \         3. The amount to credit <br />\r\n            4. A comment explaining\
        \ the rebill <br />\r\n            It is important that you clarify why the\
        \ card was rebilled for security and fraud reasons. Consider the following\
        \ questions:\r\n            Is it a monthly payment for a service?, if so,\
        \ which service?\r\n            What is name of the purchase website?, what\
        \ was ordered?, and what email was used? Ensure that you add all information\
        \ regarding the rebill \r\n            in the provided comment field. <br\
        \ /><br /><b>Important:</b> We may request further information to answer complains\
        \ directly coming \r\n            to our Customer Service from your customers,\
        \ or from Banks,Police,Visa/Mastercard, or from the financial regulator. <br\
        \ /><br /><b>Recurring Payments</b><br /><b>Initiate a first transaction</b><br\
        \ />\r\n               a. If you are using the PSP Payment Page, you need\
        \ to have initiated a Web Payment using <b>POST /moneyins/card/webinit</b>\
        \ with <b>registerCard=true</b>. <b>The amount of the first transaction has\
        \ to be higher than the recurring payments.</b><br />\r\n               b.\
        \ If you are using the Direct Mode (PCI-DSS complient only), you need to have\
        \ registered a Card using <b>POST /moneyins/card/register</b>. <br /><b>Recurring\
        \ payments</b><br />\r\n             You need to call <b>POST /moneyins/card/{cardid}/rebill</b>\
        \ each time you want to make a recurring payment, precising the Card Id returned\
        \ from step 1. <br /><b>Payment Upon Delivery (Web PSP Payment only)</b><br\
        \ />\r\n               a. The day of the purchase: you need to have initiated\
        \ a Web Payment using <b>POST /moneyins/card/webinit</b> with <b>registerCard=true</b>.\
        \ You also need to indicate in captureDelayedDays, a number between 1 and\
        \ 6 days. The amount of the first transaction has to be the same than the\
        \ one captured later. <br />\r\n               b. The day of the service or\
        \ product delivery: you need to call <b>POST /moneyins/card/{cardid}/rebill</b>\
        \ precising the Card Id returned from step 1. <br />"
      operationId: MoneyIns_CardRebill
      parameters:
      - in: path
        name: cardid
        required: true
        schema:
          format: int64
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyInWithCardIdInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                transaction:
                  receiverAccountId: Pizza56
                  creditAmount: 1500
                  scheduledNumber: null
                  card:
                    id: 0
                    is3DS: true
                    country: FRA
                    authorizationNumber: "218571"
                    maskedNumber: XXXX XXXX XXXX 9845
                    isRegistered: false
                    holderName: Peter PAN
                  refundAmount: 0.0
                  bankReference: null
                  ChequeSendingAddress_CorporateName: null
                  ChequeSendingAddress_Street: null
                  ChequeSendingAddress_City: null
                  ChequeSendingAddress_PostCode: null
                  id: 255
                  method: 0
                  date: 1749028529
                  commissionAmount: 200
                  comment: Order number 2457765AX2
                  status: 0
                  executionDate: 0
                  reference: null
              schema:
                $ref: '#/components/schemas/MoneyInWithCardIdOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Charge a Registered Card
      tags:
      - MoneyIns | Cards
      x-codegen-request-body-name: parameters
  /v2/moneyins/paybybank/transfer/init:
    post:
      description: "<b>How does it work?</b>\r\n<br />\r\n<p></p>\r\n            1.\
        \ Call POST v2/moneyins/paybybank/transfer/init, to receive a redirect URL\
        \ and the transaction Id. <br /><p></p>\r\n            2. Redirect the end-user\
        \ to your bank selection page, were they can select their bank from the displayed\
        \ list. <br /><p></p><b>Note:</b> If you specify the bankId in the request\
        \ body, the end-user will be directed to their bank. <br />\r\n          \
        \  For further information on how to obtain bankIds, see: /v2/moneyins/ paybybank/transfer/banks\
        \ \r\n            3. Once the end-user selects their bank they are redirected\
        \ to the bank webpage to enter their credentials.\r\n            <p></p><b>Note:</b>\
        \ If you have previously specified the bankId the end-user only needs to enter\
        \ their bank credentials at this stage. <br /><p></p>\r\n            4. After\
        \ successfully entering their credentials, the end-user will go through Strong\
        \ Customer Authentication (SCA) to confirm their identity (SCA examples include:\
        \ face recognition or mobile Bank App software). Some bank ask to SCA before\
        \ entering credentials.<br /><p></p>\r\n            5. Once successfully authenticated\
        \ the end-user only needs to verify and validate the amount, comments and\
        \ so forth on the bank website.\r\n            <p></p>\r\n            6. After\
        \ submitting the payment, the end-user will be redirected to:\r\n        \
        \     <ul><li>returnUrl in case of success</li><li>cancelUrl in case of cancellation</li><li>errorUrl\
        \ in case of error.</li></ul>\r\n            These 3 URLs must be publicly\
        \ accessible for the end-user. It must also be accessible to our WebKit server\
        \ to send requests to the end-user."
      operationId: MoneyIns_MoneyInTransferInit
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyInTransferInitInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                redirectUrl: https://lemonway.com/citron/prod/?moneyintoken=0b69cab7c3cc4ac9aff3
                id: 123
              schema:
                $ref: '#/components/schemas/MoneyInTransferInitOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Initiate Pay by Bank
      tags:
      - MoneyIns | Pay by Bank
      x-codegen-request-body-name: rawInput
  /v2/moneyins/card/{cardid}/subscription:
    post:
      description: "Use the following steps to ensure a recurring payment can be setup:\
        \  \r\n1. Initiate a first transaction  \r\n   If you are using the **PSP\
        \ Payment** Page, you need to have initiated a Web Payment using `POST /moneyins/card/webinit`\
        \ with **registerCard=true**.     \r\n   If you are using the **Direct Mode**\
        \ (PCI-DSS authorization required), you need to have registered a card using\
        \ `POST /moneyins/card/register`.  \r\n    \r\n2. You then need to initiate\
        \ `POST /moneyins/card/{cardid}/subscription` specifying the Card Id returned\
        \ from the first transaction, and the Subscription Id (a unique reference\
        \ you indicate for this subscription).You will also need to precise the number\
        \ of Recurring Payments you want us to initiate in count. The TotalAmount\
        \ corresponds to the amount of each recurring payment. By default, the payment\
        \ will be processed 15th of the month.  \r\n3. We will create scheduled transactions\
        \ in the Lemonway Dashboard (status 14)   \r\n4. On each payment execution\
        \ date, Lemonway will debit the card and change the pending transaction status\
        \ to success, and then notify you."
      operationId: MoneyIns_CardSubscriptionPost
      parameters:
      - in: path
        name: cardid
        required: true
        schema:
          format: int64
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyInSubscriptionInitInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                transactions:
                  value:
                  - receiverAccountId: Pizza56
                    creditAmount: 1500
                    scheduledNumber: null
                    maskedLabel: XXXX XXXX XXXX 9854
                    card:
                      id: 0
                      is3DS: true
                      country: FRA
                      maskedNumber: "43245"
                      isRegistered: false
                      holderName: Peter PAN
                    refundAmount: 0.0
                    bankReference: null
                    ChequeSendingAddress_CorporateName: null
                    ChequeSendingAddress_Street: null
                    ChequeSendingAddress_City: null
                    ChequeSendingAddress_PostCode: null
                    id: 255
                    method: 0
                    date: 1749028529
                    commissionAmount: 200
                    comment: Order 245
                    status: 16
                    executionDate: 0
                    reference: null
              schema:
                $ref: '#/components/schemas/MoneyInSubscriptionInitOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Initiate Monthly Recurring Payments
      tags:
      - MoneyIns | Cards
      x-codegen-request-body-name: parameters
  /v2/moneyins/paypal/{transactionId}/resume:
    post:
      description: "PayPal's SDK Integration method lets you customize your offering.\
        \ It enables you to define content based on the data that passed. There are\
        \ a number of parameters that can be defined,  \r\nfor example, buyer currency,\
        \ buttons, messages and hosted fields.  \r\n\r\nUse this API to integrate\
        \ PayPal Javascript SDK, in addition you must use [Initiate a PayPal Payment](https://documentation.lemonway.com/reference/moneyins_paypaltransactioninit)\
        \ to fully integrate."
      operationId: MoneyIns_PayPalTransactionResume
      parameters:
      - in: path
        name: transactionId
        required: true
        schema:
          format: int64
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoneyInOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: PayPal Resume
      tags:
      - MoneyIns | PayPal
  /v2/moneyins/bankwire/iban/{ibanid}/disable:
    post:
      description: This functionality enables you to disable dedicated IBANs.
      operationId: MoneyIns_BankwireIbanDisablePost
      parameters:
      - in: path
        name: ibanid
        required: true
        schema:
          format: int64
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableIBANInput'
          text/json:
            schema:
              $ref: '#/components/schemas/DisableIBANInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/DisableIBANInput'
          text/xml:
            schema:
              $ref: '#/components/schemas/DisableIBANInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DisableIBANInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 33612345678
                status: 8
              schema:
                $ref: '#/components/schemas/DisableIBANOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Disable a Dedicated Virtual IBAN
      tags:
      - MoneyIns | Virtual IBAN
      x-codegen-request-body-name: parameters
  /v2/moneyins/card/direct/{transactionid}/3dauthenticate:
    post:
      description: "After initializing a 3-D Secure transaction with <b>POST /moneyins/card/direct/3dinit</b>,\
        \ you can choose not to debit the card, and only check if the user has successfully\
        \ authenticated.<br /><b>This is not a payment.</b><br />\r\nYou can not use\
        \ both <b>POST /moneyins/card/direct/{transactionid}/3dauthenticate</b> and\
        \ <b>PUT /moneyins/card/direct/{transactionid}/3dconfirm</b>\r\n - If you\
        \ only want to check if the user was correctly authenticated use <b>POST /moneyins/card/direct/{transactionid}/3dauthenticate</b>)\r\
        \n - If you want to receive the payment using 3-DS use <b>PUT /moneyins/card/direct/{transactionid}/3dconfirm</b><br\
        \ />\r\nA typical use-case: you want to allow your user to save a card for\
        \ rebills (RegisterCard), but first, you want to make sure that the card belongs\
        \ to the user and that the user can authenticate successfully."
      operationId: MoneyIns_CardDirect3DAuthenticatePost
      parameters:
      - in: path
        name: transactionid
        required: true
        schema:
          format: int64
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyIn3DAuthenticateInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                Operation3DCode: "00"
              schema:
                $ref: '#/components/schemas/MoneyIn3DAuthenticateOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Check Money-In 3D-Secure Status (PCI-DSS compliant only)
      tags:
      - MoneyIns | Cards
      x-codegen-request-body-name: parameters
  /v2/moneyouts/{accountid}/iban:
    get:
      operationId: MoneyOuts_IbanGet
      parameters:
      - description: Account ID
        in: path
        name: accountid
        required: true
        schema:
          type: string
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                ibans:
                - id: 98
                  status: 5
                  iban: 30002014400000156627A61
                  swift: CRLYFRPP
                  holder: Jean Dupont
              schema:
                $ref: '#/components/schemas/AccountIbansOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Get the IBAN Associated with a Payment Account
      tags:
      - MoneyOuts
  /v2/moneyouts:
    get:
      description: Use this call to get and check all Money-Out information.
      operationId: MoneyOuts_MoneyOutGet
      parameters:
      - description: Money-Out ID
        in: query
        name: transactionid
        schema:
          format: int64
          type: integer
      - description: Money-Out Comment
        in: query
        name: transactionComment
        schema:
          maxLength: 140
          minLength: 0
          type: string
      - description: Unique ID Generated by your Server
        in: query
        name: reference
        schema:
          maxLength: 50
          minLength: 0
          type: string
      - description: "Index start from 1, let null to get all"
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: "Default 20, let it null if no pagination"
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                transactions:
                  value:
                  - senderAccountId: "33612345678"
                    debitAmount: 1500
                    IbanId: 0
                    originId: 0
                    id: 255
                    method: 0
                    date: 1749028529
                    commissionAmount: 300
                    comment: Order number 255
                    status: 3
                    executionDate: 0
                    reference: null
              schema:
                $ref: '#/components/schemas/GetMoneyOutTransDetailsOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Search for a Money-Out
      tags:
      - MoneyOuts
    post:
      description: "How does it work?\r\nSelect an IBAN if multiple IBAN exist for\
        \ the wallet. Select an amount, not greater than the balance of the wallet.\
        \ Call the moneout method, and the system performs the fund transfer to the\
        \ IBAN if everything is clear, or returns an error message.\r\n<ul><li>The\
        \ payment account is debited immediately and the money is then received by\
        \ the owner, in their bank account between 1 to 3 days after, depending on\
        \ the interbanking system and on the banks (SEPA is faster).</li><li>You can\
        \ ask us to configure your platform so that your comment is included in the\
        \ bank transfer message so your customer will see it on the bank statement.</li><li><ul><li>The\
        \ full message will be in the following format \"XXXX-YYYY ZZZZ\", where :\
        \ </li><li>XXXX is the name of your environment</li><li>YYYY is the ID of\
        \ the Money-Out operation as you see it in the Dashboard</li><li>ZZZZ is your\
        \ comment.</li></ul></li><li>The full message cannot be longer than 35 characters\
        \ (if longer, it will be cut), and only alphanumeric characters will be allowed(other\
        \ characters will be replaced by spaces before it's sent to the bank).</li></ul>"
      operationId: MoneyOuts_MoneyOutPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyOutInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                transaction:
                  senderAccountId: pizza56
                  debitAmount: 1500
                  IbanId: 0
                  maskedLabel: FR5830002012300000116235A61
                  originId: 0
                  id: 255
                  method: 0
                  date: 1749028529
                  commissionAmount: 100
                  comment: Order number 2457765AX2
                  status: 0
                  executionDate: 0
                  reference: Dze8778
              schema:
                $ref: '#/components/schemas/MoneyOutOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: External Fund Transfer from a Payment Account to a Bank Account
      tags:
      - MoneyOuts
      x-codegen-request-body-name: parameters
  /v2/moneyouts/{transactionid}/cancel:
    put:
      description: The cancel call lets you cancel a Money-Out/SDD.
      operationId: MoneyOuts_CancelPut
      parameters:
      - in: path
        name: transactionid
        required: true
        schema:
          format: int64
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelMoneyOutInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                transaction:
                  senderAccountId: pizza56
                  debitAmount: 1500
                  IbanId: 0
                  originId: 0
                  id: 255
                  method: 0
                  date: 1749028529
                  commissionAmount: 300
                  comment: Order number 255
                  status: 0
                  executionDate: 0
                  reference: null
              schema:
                $ref: '#/components/schemas/CancelMoneyOutOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Money-Out Cancellation
      tags:
      - MoneyOuts
      x-codegen-request-body-name: parameters
  /v2/moneyouts/iban/{IbanId}/unregister:
    put:
      description: The <b>UnregisterIBAN</b> method enables you to disable an IBAN
        from a Payment Account. As a reminder a bank account number (IBAN) is needed
        to process Money-Out. An IBAN is not needed to perform Money-In on a Payment
        Account or Peer to Peer transfers between Payments Accounts.
      operationId: MoneyOuts_IbanUnregisterPut
      parameters:
      - in: path
        name: IbanId
        required: true
        schema:
          format: int64
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnregisterIBANInput'
          text/json:
            schema:
              $ref: '#/components/schemas/UnregisterIBANInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/UnregisterIBANInput'
          text/xml:
            schema:
              $ref: '#/components/schemas/UnregisterIBANInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UnregisterIBANInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 253
              schema:
                $ref: '#/components/schemas/UnregisterIBANOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Disable Bank Information (IBAN) from a Payment Account
      tags:
      - MoneyOuts
      x-codegen-request-body-name: parameters
  /v2/moneyouts/iban:
    post:
      description: "To send Money-Out from the Lemonway payment account to the bank\
        \ account of your Clients, you need to register their bank account details.\
        \ This method lets our system to link an IBAN to a payment account.  \r\n\
        - Bank account details are only needed for Money-Outs, not for Money-Ins or\
        \ P2P.  \r\n- When you link a new bank account (IBAN format or other ones),\
        \ the previous details are still active.  \r\n- Use [IbanUnregisterPut](https://documentation.lemonway.com/reference/moneyouts_ibanunregisterput)\
        \ call to deactivate a bank account from a payment account.  \r\n- If you\
        \ wish to use only one bank account per payment account, please contact support.\
        \  \r\n- An integrated algorithm will validate your IBAN."
      operationId: MoneyOuts_IbanPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterIBANInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                ibanId: 253
                status: 5
              schema:
                $ref: '#/components/schemas/RegisterIBANOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Add an IBAN to a Payment Account for Money-Outs
      tags:
      - MoneyOuts
      x-codegen-request-body-name: parameters
  /v2/moneyouts/iban/extended:
    post:
      description: "You are required to register your client's bank account details\
        \ in order to send Money-Out from a Lemonway payment account.  \r\nWith this\
        \ method, our system links other bank formats to a payment account.  \r\n\r\
        \n**Important:** If your client bank account details are in IBAN format this\
        \ call.  \r\n\r\n- Client bank account details are **only** required for money-outs.\
        \  \r\n- When you link a new bank account (IBAN format or other ones), the\
        \ previous ones are still active.  \r\n- Please use [IbanUnregisterPut](https://documentation.lemonway.com/reference/moneyouts_ibanunregisterput)\
        \ method to deactivate a bank account from a payment account. \r\n- If you\
        \ wish to use only one bank account per payment account, please contact support.\
        \  \r\n            \r\nDepending on bank country code selected or when a USD\
        \ environment is concerned, 3 fields may be required:  \r\n- bankBranchRoutingCode\
        \  \r\n- bankName  \r\n- bankBranchAddress"
      operationId: MoneyOuts_IbanExtendedPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterIBANExtendedInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                ibanId: 253
                status: 5
              schema:
                $ref: '#/components/schemas/RegisterIBANExtendedOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Add Bank Account to a Payment Account for Money-Outs
      tags:
      - MoneyOuts
      x-codegen-request-body-name: parameters
  /v2/p2p:
    get:
      description: Returns a lit of payment transactions between payments accounts
        that match the search fields.
      operationId: P2Ps_P2pGet
      parameters:
      - description: Transaction ID
        in: query
        name: transactionId
        schema:
          format: int64
          type: integer
      - description: Transaction Comment
        in: query
        name: transactionComment
        schema:
          maxLength: 140
          minLength: 0
          type: string
      - description: Unique ID generated by your server
        in: query
        name: reference
        schema:
          maxLength: 36
          minLength: 0
          type: string
      - description: Up to 20 fields of 256 maximum length
        explode: true
        in: query
        name: privateData.value
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Index start from 1, let null to get all"
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: "Default 20, let it null if no pagination"
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                transactions:
                  value:
                  - senderAccountId: "33612345678"
                    receiverAccountId: pizza
                    debitAmount: 1500
                    creditAmount: 1500
                    scheduledDate: 2015/12/31
                    isFee: true
                    feeReference: 2365
                    id: 255
                    method: 0
                    date: 1749028529
                    commissionAmount: 100
                    comment: Order number 2457765AX2
                    status: 0
                    executionDate: 0
                    reference: null
              schema:
                $ref: '#/components/schemas/GetPaymentDetailsOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Search for Transactions between Payments Accounts
      tags:
      - P2Ps
    post:
      description: "This call debits Wallet A and credits Wallet B. Payment accounts\
        \ are internal to Lemonway. You can schedule this payment if you do not want\
        \ the payment to occure immediately.\r\nThe following list corresponds to\
        \ the payment type specified in the response attribute called:    \r\n  \r\
        \n0 Card  \r\n1 Bank transfert (Money-In)  \r\n3 Bank transfert (Money-Out)\
        \  \r\n4 P2P  \r\n13 IDEAL  \r\n14 DirectDebit  \r\n15 Cheque   \r\n19 Multibanco\
        \  \r\n20 Payshop  \r\n21 MB WAY    \r\n35 PayPal  \r\n**Important:** The\
        \ following services have been discontinued: 16 Neosurf, 17 SoFort, 18 PFS\
        \ Physical Card, 20 Payshop, 22 Polish Instant Transfer, 23 PAGARE, 24 MobilePay,26\
        \ WeChat (via PayTend),28 MoneyIn by TPE, 29 Trustly."
      operationId: P2Ps_P2pPost
      parameters:
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendPaymentInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                transaction:
                  senderAccountId: Pizza56
                  receiverAccountId: pizza
                  debitAmount: 1500
                  creditAmount: 1500
                  isFee: false
                  feeReference: 0
                  id: 255
                  method: 0
                  date: 1749028529
                  commissionAmount: 100
                  comment: Order number 2457765AX2
                  status: 0
                  executionDate: 0
                  reference: Dze8778
              schema:
                $ref: '#/components/schemas/SendPaymentOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Payment between Payment Accounts (P2P)
      tags:
      - P2Ps
      x-codegen-request-body-name: parameters
  /v2/refund/{transactionid}:
    put:
      description: "**General Rules:**  \r\n\r\n- A refund can **only** be made to\
        \ the card holder's original used card, or the bank that made the initial\
        \ payment.\r\n- Lemonway reserves the right to retain the payment fee.\r\n\
        - If no refund amount is specified, the total amount is refunded.\r\n- The\
        \ original Client payment account is debited the refund. If insufficient funds\
        \ are in the **Client Wallet**,\r\nthe outstanding refund amount will be debited\
        \ from your **SC Wallet**. An ON-US payment is automatically performed from\
        \ your **SC Wallet** to the **Client Wallet**, prior to the card refund.\r\
        \n- It is possible to cumulate refunds until the total amount is refunded.\r\
        \n\r\n**Card Payments:**\r\n\r\n- Card payment refunds are not available from\
        \ 22:00 and 03:00 (Central European Time - UTC/GMT+1 ).\r\n- Refunds can only\
        \ be made upto 12 months after the initial payment. \r\n \r\n**iDEAL:** Refunds\
        \ are only available upto **99 days** after the initial payment."
      operationId: Refunds_RefundPut
      parameters:
      - in: path
        name: transactionid
        required: true
        schema:
          format: int64
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundMoneyInInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                transaction:
                  status: 0
                  senderAccountId: Pizza56
                  debitAmount: 1500
                  IbanId: 0
                  originId: 0
                  id: 255
                  method: 0
                  date: 1749028529
                  commissionAmount: 100
                  comment: null
                  executionDate: 0
                  reference: null
              schema:
                $ref: '#/components/schemas/RefundMoneyInOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Refund a Money-In
      tags:
      - Refunds
      x-codegen-request-body-name: parameters
  /v2/refundcreate/{transactionId}:
    put:
      operationId: Refunds_RefundCreatePut
      parameters:
      - in: path
        name: transactionId
        required: true
        schema:
          format: int64
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundMoneyInCreateInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                transaction:
                  status: 0
                  senderAccountId: Pizza56
                  debitAmount: 1500
                  IbanId: 0
                  originId: 0
                  id: 255
                  method: 0
                  date: 1749028529
                  commissionAmount: 100
                  comment: null
                  executionDate: 0
                  reference: null
              schema:
                $ref: '#/components/schemas/RefundMoneyInOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Refund a transaction without PSP process
      tags:
      - Refunds
      x-codegen-request-body-name: parameters
  /v2/disputes:
    get:
      operationId: Disputes_DisputesGet
      parameters:
      - description: UTC Unix timestamp
        in: query
        name: updateDate
        required: true
        schema:
          pattern: "^-?\\d{1,12}$"
          type: string
      - description: "Index start from 1, let null to get all"
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: "Default 20, let it null if no pagination"
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Authorization bearer (OAuth 2)
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: Response language accepted by final client (PSU). English by
          default
        in: header
        name: PSU-Accept-Language
        schema:
          type: string
      - description: IP address of the final client (PSU).
        in: header
        name: PSU-IP-Address
        required: true
        schema:
          type: string
      - description: User-agent of the final client (PSU).
        in: header
        name: PSU-User-Agent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                transactions:
                  value:
                  - senderAccountId: Pizza
                    debitAmount: 1500
                    IbanId: 0
                    originId: 90
                    id: 255
                    method: 0
                    date: 1749028529
                    commissionAmount: 1000
                    comment: chargeback
                    status: 0
                    executionDate: 0
                    reference: null
              schema:
                $ref: '#/components/schemas/GetChargebacksOutput'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: InternalServerError
      summary: Get list of disputes from a given date
      tags:
      - Disputes
components:
  schemas:
    AccountDetailsOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        account:
          firstname: firstname
          mobileNumber: mobileNumber
          accountType: 5
          clientTitle: clientTitle
          birth:
            date: date
            city: city
            Country: Country
          lastname: lastname
          isDebtor: true
          internalId: 0
          payerOrBeneficiary: 5
          isblocked: true
          phoneNumber: phoneNumber
          balance: 6
          nationality: nationality
          adresse:
            country: country
            city: city
            street: street
            postCode: postCode
          company:
            websiteUrl: websiteUrl
            name: name
            description: description
            identificationNumber: identificationNumber
          id: id
          email: email
          status: 1
      properties:
        account:
          $ref: '#/components/schemas/AccountDetails'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    AccountDetails:
      example:
        firstname: firstname
        mobileNumber: mobileNumber
        accountType: 5
        clientTitle: clientTitle
        birth:
          date: date
          city: city
          Country: Country
        lastname: lastname
        isDebtor: true
        internalId: 0
        payerOrBeneficiary: 5
        isblocked: true
        phoneNumber: phoneNumber
        balance: 6
        nationality: nationality
        adresse:
          country: country
          city: city
          street: street
          postCode: postCode
        company:
          websiteUrl: websiteUrl
          name: name
          description: description
          identificationNumber: identificationNumber
        id: id
        email: email
        status: 1
      properties:
        id:
          description: Payment Account ID
          type: string
        internalId:
          description: Internal ID given by Lemonway (ID displayed on the Dashboard)
          format: int64
          type: integer
        clientTitle:
          description: Client Title
          type: string
        firstname:
          description: Holder's First Name
          type: string
        lastname:
          description: Holder's Last Name
          type: string
        balance:
          description: Payment Account Balance Amount
          format: int32
          type: integer
        email:
          description: Email
          type: string
        status:
          description: "| Status Code                                            \
            \         | Payment Account Status                                   \
            \      |\r\n|-----------------------------------------------------------------|----------------------------------------------------------------|\r\
            \n| -1                                                              |\
            \ Wallet SC                                                      |\r\n\
            | 2                                                               | Registered,\
            \ not verified: missing document(s)                  |\r\n| 3        \
            \                                                       | Registered,\
            \ not verified: document(s) rejected                 |\r\n| 5        \
            \                                                       | Registered,\
            \ not verified: KYC 1 (status given at registration) |\r\n| 6        \
            \                                                       | Registered and\
            \ verified: KYC 2                                 |\r\n| 7*          \
            \                                                    | Registered and\
            \ verified by previous PSP: KYC 3                 |\r\n| 8           \
            \                                                    | Registered, not\
            \ verified: expired document(s)                  |\r\n| 10           \
            \                                                   | Blocked        \
            \                                                |\r\n| 12           \
            \                                                   | Closed         \
            \                                                |\r\n| 13*          \
            \                                                   | Registered, status\
            \ is being updated from KYC 2 to KYC 3        |\r\n| 14*             \
            \                                                | One-time customer \
            \                                             |\r\n| 15*             \
            \                                                | Special wallet for\
            \ crowdlending                                |\r\n| 16*             \
            \                                                | Technical wallet  \
            \                                             |\r\n| *these status may\
            \ or may not be used depending on your business |                    \
            \                                            |"
          format: int32
          type: integer
        isblocked:
          description: "Indicates if Account is blocked or not:\r\n0: Not blocked\r\
            \n1: Blocked"
          type: boolean
        accountType:
          description: "Indicates Account type:\r\n0: Individual\r\n1: Legal"
          format: int32
          type: integer
        company:
          $ref: '#/components/schemas/Company'
        adresse:
          $ref: '#/components/schemas/Address'
        birth:
          $ref: '#/components/schemas/Birth'
        nationality:
          description: Nationality
          type: string
        phoneNumber:
          description: Phone number with MSISDN format
          type: string
        mobileNumber:
          description: Mobile phone number with MSISDN format
          type: string
        isDebtor:
          description: "For crowdfunding/loan platforms, indicates if the Account\
            \ is created for a debtor \r\n0 or empty: no\r\n1: yes"
          type: boolean
        payerOrBeneficiary:
          description: "Indicates if the payment Account is created for a payer or\
            \ a beneficiary:\r\n* Empty: unknown status (default)\r\n* 1 = Payer\r\
            \n* 2 = Beneficiary"
          format: int32
          type: integer
      type: object
    Error:
      example:
        code: 2
        message: message
        psp:
          message: message
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        psp:
          $ref: '#/components/schemas/PSP'
      type: object
    Company:
      example:
        websiteUrl: websiteUrl
        name: name
        description: description
        identificationNumber: identificationNumber
      properties:
        name:
          description: Company name (at least one alphabethic character is required)
          maxLength: 256
          minLength: 1
          type: string
        description:
          description: Company description
          maxLength: 256
          minLength: 1
          type: string
        websiteUrl:
          description: Website URL
          maxLength: 256
          minLength: 1
          type: string
        identificationNumber:
          description: Company identification number
          maxLength: 256
          minLength: 1
          type: string
      required:
      - description
      - name
      type: object
    Address:
      example:
        country: country
        city: city
        street: street
        postCode: postCode
      properties:
        street:
          description: Client number and street
          maxLength: 256
          minLength: 0
          type: string
        postCode:
          description: Client Postcode/ZIP
          maxLength: 10
          minLength: 0
          type: string
        city:
          description: Client city
          maxLength: 140
          minLength: 0
          type: string
        country:
          description: Client country using ISO 3166-1 alpha-3
          maxLength: 3
          minLength: 3
          type: string
      required:
      - country
      type: object
    Birth:
      example:
        date: date
        city: city
        Country: Country
      properties:
        date:
          description: Client Date of Birth
          pattern: "^[12]\\d{3}\\/(0[1-9]|1[0-2])\\/(0[1-9]|[12]\\d|3[01])$"
          type: string
        city:
          description: Client City of Birth
          maxLength: 140
          minLength: 0
          type: string
        Country:
          description: "Client Country of Birth, using ISO 3166-1 alpha-3. Three-letter\
            \ country code, for example: FRA (France), GBR (United Kingdom of Great\
            \ Britain and Northern Ireland)"
          maxLength: 3
          minLength: 3
          type: string
      required:
      - date
      type: object
    PSP:
      example:
        message: message
      properties:
        message:
          description: Get the Error Message from PSP
          type: string
      type: object
    AccountDocumentsOutput:
      example:
        documents:
        - validityDate: validityDate
          comment: comment
          id: 0
          type: 1
          status: 6
        - validityDate: validityDate
          comment: comment
          id: 0
          type: 1
          status: 6
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        documents:
          description: List of documents that changed since the entry date.
          items:
            $ref: '#/components/schemas/Document'
          type: array
        error:
          $ref: '#/components/schemas/Error'
      type: object
    Document:
      example:
        validityDate: validityDate
        comment: comment
        id: 0
        type: 1
        status: 6
      properties:
        id:
          description: Document ID
          format: int64
          type: integer
        status:
          description: "Document Status<br/>0 = Document put on hold, waiting for\
            \ another document.<br/>1 = Received, need manual validation.<br/>2 =\
            \ Accepted.<br/>3 = Rejected.<br/>4 = Rejected. Unreadable by human (Cropped,\
            \ blur, glare…).<br/>5 = Rejected. Expired (Expiration Date is passed).<br/>6\
            \ = Rejected. Wrong Type (Document not accepted).<br/>7 = Rejected. Wrong\
            \ Name (Name not matching user information).<br/>8 = Rejected. Duplicated\
            \ Document.<br/>"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          format: int32
          type: integer
        type:
          description: Document Type<br/>0 = ID card (both sides in one file).<br/>1
            = Proof of address.<br/>2 = Scan of a proof of IBAN.<br/>3 = Passport
            (European Union).<br/>4 = Passport (outside the European Union).<br/>5
            = Residence permit (both sides in one file).<br/>6 = Other document type.<br/>7
            = Official company registration document (Kbis extract or equivalent).<br/>11
            = Driver licence (both sides in one file).<br/>12 = Status.<br/>13 = Selfie.<br/>14
            = Other document type.<br/>15 = Other document type.<br/>16 = Other document
            type.<br/>17 = Other document type.<br/>18 = Other document type.<br/>19
            = Other document type.<br/>20 = Other document type.<br/>21 = SDD mandate.<br/>
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 19
          - 20
          - 21
          format: int32
          type: integer
        validityDate:
          description: "Document validity date\r\nFormat: dd/mm/yyyy\r\nEmpty if unknown"
          type: string
        comment:
          type: string
      type: object
    GetUltimateBeneficialOwnerOutput:
      example:
        ultimateBeneficialOwners:
        - firstname: firstname
          cityOfBirth: cityOfBirth
          ultimateBeneficialOwnerId: 1
          nationality: nationality
          countryOfBirth: countryOfBirth
          endDate: 6
          dateOfBirth: dateOfBirth
          countryOfResidence: countryOfResidence
          startDate: 0
          lastname: lastname
        - firstname: firstname
          cityOfBirth: cityOfBirth
          ultimateBeneficialOwnerId: 1
          nationality: nationality
          countryOfBirth: countryOfBirth
          endDate: 6
          dateOfBirth: dateOfBirth
          countryOfResidence: countryOfResidence
          startDate: 0
          lastname: lastname
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        ultimateBeneficialOwners:
          items:
            $ref: '#/components/schemas/UltimateBeneficialOwner'
          type: array
        error:
          $ref: '#/components/schemas/Error'
      type: object
    UltimateBeneficialOwner:
      example:
        firstname: firstname
        cityOfBirth: cityOfBirth
        ultimateBeneficialOwnerId: 1
        nationality: nationality
        countryOfBirth: countryOfBirth
        endDate: 6
        dateOfBirth: dateOfBirth
        countryOfResidence: countryOfResidence
        startDate: 0
        lastname: lastname
      properties:
        firstname:
          description: Client First Name
          maxLength: 256
          minLength: 2
          type: string
        lastname:
          description: Client Last Name
          maxLength: 256
          minLength: 2
          type: string
        nationality:
          description: Client Nationality (use ISO 3166-1 alpha-3 format)
          maxLength: 19
          minLength: 0
          type: string
        dateOfBirth:
          description: Client Birthdate
          pattern: "^[12]\\d{3}\\/(0[1-9]|1[0-2])\\/(0[1-9]|[12]\\d|3[01])$"
          type: string
        cityOfBirth:
          description: Client City of Birth
          maxLength: 140
          minLength: 0
          type: string
        countryOfBirth:
          description: Client Country of Birth (use ISO 3166-1 alpha-3 format)
          maxLength: 3
          minLength: 3
          type: string
        countryOfResidence:
          description: Country of Residence (use ISO 3166-1 alpha-3 format)
          maxLength: 19
          minLength: 0
          type: string
        startDate:
          format: int32
          type: integer
        endDate:
          format: int32
          type: integer
        ultimateBeneficialOwnerId:
          description: Ultimate Beneficial Owner ID
          format: int64
          type: integer
      required:
      - countryOfResidence
      - dateOfBirth
      - firstname
      - lastname
      - nationality
      type: object
    BalanceHistoryInput:
      properties:
        atDate:
          description: Request balance at given time in UTC Unix timestamp.
          pattern: "^-?\\d{1,12}$"
          type: string
      type: object
    BalanceHistoryOutput:
      example:
        balance: 0
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        balance:
          description: Payment account balance.
          format: int32
          type: integer
        error:
          $ref: '#/components/schemas/Error'
      type: object
    AccountKycStatusInput:
      properties:
        updateDate:
          description: UTC Unix timestamp
          pattern: "^-?\\d{1,12}$"
          type: string
      required:
      - updateDate
      type: object
    Pagination:
      properties:
        page:
          description: "Index start from 1, let null to get all"
          format: int32
          type: integer
        limit:
          description: "Default 20, let it null if no pagination"
          format: int32
          type: integer
      type: object
    KycStatusOutput:
      example:
        _links:
          next:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          last:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          previous:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          self:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          first:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
        accounts:
        - date: date
          documents:
          - validityDate: validityDate
            comment: comment
            id: 0
            type: 1
            status: 6
          - validityDate: validityDate
            comment: comment
            id: 0
            type: 1
            status: 6
          ibans:
          - iban: iban
            holder: holder
            id: 6
            type: 5
            status: 1
            swift: swift
          - iban: iban
            holder: holder
            id: 6
            type: 5
            status: 1
            swift: swift
          id: id
          sddMandates:
          - IBAN: IBAN
            UniqueMandateReference: UniqueMandateReference
            holder: holder
            id: 5
            BIC: BIC
            status: 2
          - IBAN: IBAN
            UniqueMandateReference: UniqueMandateReference
            holder: holder
            id: 5
            BIC: BIC
            status: 2
          status: 0
        - date: date
          documents:
          - validityDate: validityDate
            comment: comment
            id: 0
            type: 1
            status: 6
          - validityDate: validityDate
            comment: comment
            id: 0
            type: 1
            status: 6
          ibans:
          - iban: iban
            holder: holder
            id: 6
            type: 5
            status: 1
            swift: swift
          - iban: iban
            holder: holder
            id: 6
            type: 5
            status: 1
            swift: swift
          id: id
          sddMandates:
          - IBAN: IBAN
            UniqueMandateReference: UniqueMandateReference
            holder: holder
            id: 5
            BIC: BIC
            status: 2
          - IBAN: IBAN
            UniqueMandateReference: UniqueMandateReference
            holder: holder
            id: 5
            BIC: BIC
            status: 2
          status: 0
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/AccountKycStatus'
          type: array
        _links:
          $ref: '#/components/schemas/Links'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    AccountKycStatus:
      example:
        date: date
        documents:
        - validityDate: validityDate
          comment: comment
          id: 0
          type: 1
          status: 6
        - validityDate: validityDate
          comment: comment
          id: 0
          type: 1
          status: 6
        ibans:
        - iban: iban
          holder: holder
          id: 6
          type: 5
          status: 1
          swift: swift
        - iban: iban
          holder: holder
          id: 6
          type: 5
          status: 1
          swift: swift
        id: id
        sddMandates:
        - IBAN: IBAN
          UniqueMandateReference: UniqueMandateReference
          holder: holder
          id: 5
          BIC: BIC
          status: 2
        - IBAN: IBAN
          UniqueMandateReference: UniqueMandateReference
          holder: holder
          id: 5
          BIC: BIC
          status: 2
        status: 0
      properties:
        id:
          description: Payment account ID
          type: string
        status:
          description: "Payment account status<br/>2 = Registered, KYC incomplete.<br/>3\
            \ = Registered, rejected KYC.<br/>5 = Registered, KYC 1 (status given\
            \ at registration).<br/>6 = Registered, KYC 2.<br/>7 = Registered, KYC\
            \ 3.<br/>8 = Registered, expired KYC.<br/>10 = Blocked.<br/>12 = Closed.<br/>13\
            \ = Registered, status is being updated from KYC 2 to KYC 3.<br/>14 =\
            \ One-time customer.<br/>15 = Special account for crowdlending.<br/>16\
            \ = Technical account.<br/>"
          enum:
          - 2
          - 3
          - 5
          - 6
          - 7
          - 8
          - 10
          - 12
          - 13
          - 14
          - 15
          - 16
          format: int32
          type: integer
        date:
          description: Modification date of the payment account status in Second UTC
          type: string
        documents:
          items:
            $ref: '#/components/schemas/Document'
          type: array
        ibans:
          items:
            $ref: '#/components/schemas/Iban'
          type: array
        sddMandates:
          items:
            $ref: '#/components/schemas/SddMandate'
          type: array
      type: object
    Links:
      example:
        next:
          hreflang: hreflang
          templated: true
          method: method
          profile: profile
          name: name
          href: href
          type: type
          deprecation: deprecation
          title: title
        last:
          hreflang: hreflang
          templated: true
          method: method
          profile: profile
          name: name
          href: href
          type: type
          deprecation: deprecation
          title: title
        previous:
          hreflang: hreflang
          templated: true
          method: method
          profile: profile
          name: name
          href: href
          type: type
          deprecation: deprecation
          title: title
        self:
          hreflang: hreflang
          templated: true
          method: method
          profile: profile
          name: name
          href: href
          type: type
          deprecation: deprecation
          title: title
        first:
          hreflang: hreflang
          templated: true
          method: method
          profile: profile
          name: name
          href: href
          type: type
          deprecation: deprecation
          title: title
      properties:
        first:
          $ref: '#/components/schemas/Link'
        last:
          $ref: '#/components/schemas/Link'
        previous:
          $ref: '#/components/schemas/Link'
        next:
          $ref: '#/components/schemas/Link'
        self:
          $ref: '#/components/schemas/Link'
      type: object
    Iban:
      example:
        iban: iban
        holder: holder
        id: 6
        type: 5
        status: 1
        swift: swift
      properties:
        id:
          description: IBAN ID
          format: int64
          type: integer
        status:
          description: "Only status 5 allows the use of the IBAN for a Money-Out.<br/>1\
            \ = None.<br/>2 = Internal.<br/>3 = Not used.<br/>4 = Waiting to be verified\
            \ by Lemon Way.<br/>5 = Activated.<br/>6 = Rejected by the bank.<br/>7\
            \ = Rejected, no owner.<br/>8 = Deactivated.<br/>9 = Rejected.<br/>"
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          format: int32
          type: integer
        iban:
          description: IBAN saved
          type: string
        swift:
          description: SWIFT BIC code associated with the IBAN
          type: string
        holder:
          description: IBAN Holder
          type: string
        type:
          description: "Indicates if a merchant IBAN or a virtual client IBAN\r\n\
            1: Merchant IBAN\r\n2: IBAN virtual client"
          format: int32
          type: integer
      type: object
    SddMandate:
      example:
        IBAN: IBAN
        UniqueMandateReference: UniqueMandateReference
        holder: holder
        id: 5
        BIC: BIC
        status: 2
      properties:
        id:
          description: Mandate ID
          format: int64
          type: integer
        status:
          description: "Mandate Status<br/>0 = Pending validation.<br/>5 = Validated,\
            \ First SDD to be done.<br/>6 = Enabled.<br/>8 = Disabled.<br/>9 = Rejected.<br/>"
          enum:
          - 0
          - 5
          - 6
          - 8
          - 9
          format: int32
          type: integer
        IBAN:
          description: IBAN associated to the mandate
          type: string
        BIC:
          description: SWIFT code associated to the mandate
          type: string
        holder:
          description: IBAN Holder
          type: string
        UniqueMandateReference:
          description: Unique mandate reference
          type: string
      type: object
    Link:
      example:
        hreflang: hreflang
        templated: true
        method: method
        profile: profile
        name: name
        href: href
        type: type
        deprecation: deprecation
        title: title
      properties:
        href:
          type: string
        templated:
          readOnly: true
          type: boolean
        method:
          type: string
        type:
          type: string
        deprecation:
          type: string
        name:
          type: string
        profile:
          type: string
        title:
          type: string
        hreflang:
          type: string
      type: object
    AccountBalancesInput:
      properties:
        updateDate:
          description: "Date in UTC Seconds\r\nLeave empty to use payment account\
            \ IDs."
          pattern: "^-?\\d{1,12}$"
          type: string
        internalAccountIdStart:
          description: "First payment account internal ID, starting from 12."
          format: int64
          type: integer
        internalAccountIdEnd:
          description: "Last payment account internal ID, starting from 12."
          format: int64
          type: integer
      type: object
    AccountBalanceOutput:
      example:
        _links:
          next:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          last:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          previous:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          self:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          first:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
        accounts:
        - balance: 0
          id: id
          status: 6
        - balance: 0
          id: id
          status: 6
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/AccountBalance'
          type: array
        _links:
          $ref: '#/components/schemas/Links'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    AccountBalance:
      example:
        balance: 0
        id: id
        status: 6
      properties:
        id:
          description: Payment account ID
          type: string
        balance:
          description: Payment account balance
          format: int32
          type: integer
        status:
          description: "Payment account status<br/>2 = Registered, KYC incomplete.<br/>3\
            \ = Registered, rejected KYC.<br/>5 = Registered, KYC 1 (status given\
            \ at registration).<br/>6 = Registered, KYC 2.<br/>7 = Registered, KYC\
            \ 3.<br/>8 = Registered, expired KYC.<br/>10 = Blocked.<br/>12 = Closed.<br/>13\
            \ = Registered, status is being updated from KYC 2 to KYC 3.<br/>14 =\
            \ One-time customer.<br/>15 = Special account for crowdlending.<br/>16\
            \ = Technical account.<br/>"
          enum:
          - 2
          - 3
          - 5
          - 6
          - 7
          - 8
          - 10
          - 12
          - 13
          - 14
          - 15
          - 16
          format: int32
          type: integer
      type: object
    TransactionsHistoryInput:
      properties:
        startDate:
          description: "UTC Unix timestamp\r\nIn order to return transactions initialized\
            \ after `startDate`.\r\nIf the payment account is a **SC Wallet** then\
            \ this value is mandatory."
          pattern: "^-?\\d{1,12}$"
          type: string
        endDate:
          description: "UTC Unix timestamp\r\nIn order to return transactions initialized\
            \ before `endDate`.\r\nIf the payment account is a **SC Wallet** then\
            \ this value is mandatory and the time span can not exceed 1 week."
          pattern: "^-?\\d{1,12}$"
          type: string
        executionDateStart:
          description: "UTC Unix timestamp\r\nIn order to return transactions Executed\
            \ after `endDate`.\r\nIf the payment account is a **SC Wallet** then this\
            \ value is mandatory and the time span can not exceed 1 week."
          pattern: "^-?\\d{1,12}$"
          type: string
        executionDateEnd:
          description: "UTC Unix timestamp\r\nIn order to return transactions Executed\
            \ before `endDate`\r\nIf the payment account is a **SC Wallet** then this\
            \ value is mandatory and the time span can not exceed 1 week."
          pattern: "^-?\\d{1,12}$"
          type: string
      type: object
    AccountKycStatusOutput:
      example:
        _links:
          next:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          last:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          previous:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          self:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          first:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
        transactions:
          value:
          - transactionIn:
              ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
              date: 9
              executionDate: 4
              scheduledDate: scheduledDate
              lemonWayCommission:
                amount: 7
                idp2p: idp2p
              maskedLabel: maskedLabel
              reference: reference
              authorization:
                remainingAmount: 6
                id: 1
                status: 1
              remainingAmount: 1
              bankReference: bankReference
              buyNowPayLaterInfo:
                type: type
                paymentPlanId: 5
                deferredPaymentDate: deferredPaymentDate
                secondInstallmentPaymentDate: secondInstallmentPaymentDate
              id: 5
              receiverAccountId: receiverAccountId
              refundAmount: 1.4658129805029452
              method: 2
              substatus: substatus
              childTransactions:
              - date: 1
                reference: reference
                amount: 5
                executionDate: 9
                comment: comment
                lemonWayCommission:
                  amount: 7
                  idp2p: idp2p
                id: 7
                PSP:
                  message: message
                commissionAmount: 4
                refundAmount: 9.965781217890562
                status: 6
              - date: 1
                reference: reference
                amount: 5
                executionDate: 9
                comment: comment
                lemonWayCommission:
                  amount: 7
                  idp2p: idp2p
                id: 7
                PSP:
                  message: message
                commissionAmount: 4
                refundAmount: 9.965781217890562
                status: 6
              methodDetails: 7
              PSP:
                message: message
              threeDS:
                threeDSResult: threeDSResult
                threeDSModeRequested: threeDSModeRequested
              ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
              ChequeSendingAddress_Street: ChequeSendingAddress_Street
              ChequeSendingAddress_City: ChequeSendingAddress_City
              bankStatus: bankStatus
              scheduledNumber: scheduledNumber
              comment: comment
              creditAmount: 0
              card:
                country: country
                maskedNumber: maskedNumber
                holderName: holderName
                authorizationNumber: authorizationNumber
                is3DS: true
                expiration: expiration
                isRegistered: true
                id: 6
                type: type
              commissionAmount: 3
              status: 2
            transactionOut:
              date: 2
              method: 6
              IbanId: 9
              executionDate: 5
              lemonWayCommission:
                amount: 7
                idp2p: idp2p
              debitAmount: 8
              methodDetails: 1
              PSP:
                message: message
              senderAccountId: senderAccountId
              maskedLabel: maskedLabel
              reference: reference
              originId: 6
              bankStatus: bankStatus
              buyNowPayLaterInfo:
                type: type
                paymentPlanId: 5
                deferredPaymentDate: deferredPaymentDate
                secondInstallmentPaymentDate: secondInstallmentPaymentDate
              comment: comment
              id: 3
              commissionAmount: 6
              status: 6
            transactionP2P:
              isFee: true
              date: 6
              method: 0
              executionDate: 8
              scheduledDate: scheduledDate
              lemonWayCommission:
                amount: 7
                idp2p: idp2p
              debitAmount: 6
              methodDetails: 7
              feeReference: 3
              senderAccountId: senderAccountId
              privateData:
                value:
                - value
                - value
              reference: reference
              comment: comment
              id: 7
              creditAmount: 3
              receiverAccountId: receiverAccountId
              commissionAmount: 0
              status: 4
          - transactionIn:
              ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
              date: 9
              executionDate: 4
              scheduledDate: scheduledDate
              lemonWayCommission:
                amount: 7
                idp2p: idp2p
              maskedLabel: maskedLabel
              reference: reference
              authorization:
                remainingAmount: 6
                id: 1
                status: 1
              remainingAmount: 1
              bankReference: bankReference
              buyNowPayLaterInfo:
                type: type
                paymentPlanId: 5
                deferredPaymentDate: deferredPaymentDate
                secondInstallmentPaymentDate: secondInstallmentPaymentDate
              id: 5
              receiverAccountId: receiverAccountId
              refundAmount: 1.4658129805029452
              method: 2
              substatus: substatus
              childTransactions:
              - date: 1
                reference: reference
                amount: 5
                executionDate: 9
                comment: comment
                lemonWayCommission:
                  amount: 7
                  idp2p: idp2p
                id: 7
                PSP:
                  message: message
                commissionAmount: 4
                refundAmount: 9.965781217890562
                status: 6
              - date: 1
                reference: reference
                amount: 5
                executionDate: 9
                comment: comment
                lemonWayCommission:
                  amount: 7
                  idp2p: idp2p
                id: 7
                PSP:
                  message: message
                commissionAmount: 4
                refundAmount: 9.965781217890562
                status: 6
              methodDetails: 7
              PSP:
                message: message
              threeDS:
                threeDSResult: threeDSResult
                threeDSModeRequested: threeDSModeRequested
              ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
              ChequeSendingAddress_Street: ChequeSendingAddress_Street
              ChequeSendingAddress_City: ChequeSendingAddress_City
              bankStatus: bankStatus
              scheduledNumber: scheduledNumber
              comment: comment
              creditAmount: 0
              card:
                country: country
                maskedNumber: maskedNumber
                holderName: holderName
                authorizationNumber: authorizationNumber
                is3DS: true
                expiration: expiration
                isRegistered: true
                id: 6
                type: type
              commissionAmount: 3
              status: 2
            transactionOut:
              date: 2
              method: 6
              IbanId: 9
              executionDate: 5
              lemonWayCommission:
                amount: 7
                idp2p: idp2p
              debitAmount: 8
              methodDetails: 1
              PSP:
                message: message
              senderAccountId: senderAccountId
              maskedLabel: maskedLabel
              reference: reference
              originId: 6
              bankStatus: bankStatus
              buyNowPayLaterInfo:
                type: type
                paymentPlanId: 5
                deferredPaymentDate: deferredPaymentDate
                secondInstallmentPaymentDate: secondInstallmentPaymentDate
              comment: comment
              id: 3
              commissionAmount: 6
              status: 6
            transactionP2P:
              isFee: true
              date: 6
              method: 0
              executionDate: 8
              scheduledDate: scheduledDate
              lemonWayCommission:
                amount: 7
                idp2p: idp2p
              debitAmount: 6
              methodDetails: 7
              feeReference: 3
              senderAccountId: senderAccountId
              privateData:
                value:
                - value
                - value
              reference: reference
              comment: comment
              id: 7
              creditAmount: 3
              receiverAccountId: receiverAccountId
              commissionAmount: 0
              status: 4
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        transactions:
          $ref: '#/components/schemas/Transactions_TransactionAccount'
        _links:
          $ref: '#/components/schemas/Links'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    Transactions_TransactionAccount:
      example:
        value:
        - transactionIn:
            ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
            date: 9
            executionDate: 4
            scheduledDate: scheduledDate
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            maskedLabel: maskedLabel
            reference: reference
            authorization:
              remainingAmount: 6
              id: 1
              status: 1
            remainingAmount: 1
            bankReference: bankReference
            buyNowPayLaterInfo:
              type: type
              paymentPlanId: 5
              deferredPaymentDate: deferredPaymentDate
              secondInstallmentPaymentDate: secondInstallmentPaymentDate
            id: 5
            receiverAccountId: receiverAccountId
            refundAmount: 1.4658129805029452
            method: 2
            substatus: substatus
            childTransactions:
            - date: 1
              reference: reference
              amount: 5
              executionDate: 9
              comment: comment
              lemonWayCommission:
                amount: 7
                idp2p: idp2p
              id: 7
              PSP:
                message: message
              commissionAmount: 4
              refundAmount: 9.965781217890562
              status: 6
            - date: 1
              reference: reference
              amount: 5
              executionDate: 9
              comment: comment
              lemonWayCommission:
                amount: 7
                idp2p: idp2p
              id: 7
              PSP:
                message: message
              commissionAmount: 4
              refundAmount: 9.965781217890562
              status: 6
            methodDetails: 7
            PSP:
              message: message
            threeDS:
              threeDSResult: threeDSResult
              threeDSModeRequested: threeDSModeRequested
            ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
            ChequeSendingAddress_Street: ChequeSendingAddress_Street
            ChequeSendingAddress_City: ChequeSendingAddress_City
            bankStatus: bankStatus
            scheduledNumber: scheduledNumber
            comment: comment
            creditAmount: 0
            card:
              country: country
              maskedNumber: maskedNumber
              holderName: holderName
              authorizationNumber: authorizationNumber
              is3DS: true
              expiration: expiration
              isRegistered: true
              id: 6
              type: type
            commissionAmount: 3
            status: 2
          transactionOut:
            date: 2
            method: 6
            IbanId: 9
            executionDate: 5
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            debitAmount: 8
            methodDetails: 1
            PSP:
              message: message
            senderAccountId: senderAccountId
            maskedLabel: maskedLabel
            reference: reference
            originId: 6
            bankStatus: bankStatus
            buyNowPayLaterInfo:
              type: type
              paymentPlanId: 5
              deferredPaymentDate: deferredPaymentDate
              secondInstallmentPaymentDate: secondInstallmentPaymentDate
            comment: comment
            id: 3
            commissionAmount: 6
            status: 6
          transactionP2P:
            isFee: true
            date: 6
            method: 0
            executionDate: 8
            scheduledDate: scheduledDate
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            debitAmount: 6
            methodDetails: 7
            feeReference: 3
            senderAccountId: senderAccountId
            privateData:
              value:
              - value
              - value
            reference: reference
            comment: comment
            id: 7
            creditAmount: 3
            receiverAccountId: receiverAccountId
            commissionAmount: 0
            status: 4
        - transactionIn:
            ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
            date: 9
            executionDate: 4
            scheduledDate: scheduledDate
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            maskedLabel: maskedLabel
            reference: reference
            authorization:
              remainingAmount: 6
              id: 1
              status: 1
            remainingAmount: 1
            bankReference: bankReference
            buyNowPayLaterInfo:
              type: type
              paymentPlanId: 5
              deferredPaymentDate: deferredPaymentDate
              secondInstallmentPaymentDate: secondInstallmentPaymentDate
            id: 5
            receiverAccountId: receiverAccountId
            refundAmount: 1.4658129805029452
            method: 2
            substatus: substatus
            childTransactions:
            - date: 1
              reference: reference
              amount: 5
              executionDate: 9
              comment: comment
              lemonWayCommission:
                amount: 7
                idp2p: idp2p
              id: 7
              PSP:
                message: message
              commissionAmount: 4
              refundAmount: 9.965781217890562
              status: 6
            - date: 1
              reference: reference
              amount: 5
              executionDate: 9
              comment: comment
              lemonWayCommission:
                amount: 7
                idp2p: idp2p
              id: 7
              PSP:
                message: message
              commissionAmount: 4
              refundAmount: 9.965781217890562
              status: 6
            methodDetails: 7
            PSP:
              message: message
            threeDS:
              threeDSResult: threeDSResult
              threeDSModeRequested: threeDSModeRequested
            ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
            ChequeSendingAddress_Street: ChequeSendingAddress_Street
            ChequeSendingAddress_City: ChequeSendingAddress_City
            bankStatus: bankStatus
            scheduledNumber: scheduledNumber
            comment: comment
            creditAmount: 0
            card:
              country: country
              maskedNumber: maskedNumber
              holderName: holderName
              authorizationNumber: authorizationNumber
              is3DS: true
              expiration: expiration
              isRegistered: true
              id: 6
              type: type
            commissionAmount: 3
            status: 2
          transactionOut:
            date: 2
            method: 6
            IbanId: 9
            executionDate: 5
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            debitAmount: 8
            methodDetails: 1
            PSP:
              message: message
            senderAccountId: senderAccountId
            maskedLabel: maskedLabel
            reference: reference
            originId: 6
            bankStatus: bankStatus
            buyNowPayLaterInfo:
              type: type
              paymentPlanId: 5
              deferredPaymentDate: deferredPaymentDate
              secondInstallmentPaymentDate: secondInstallmentPaymentDate
            comment: comment
            id: 3
            commissionAmount: 6
            status: 6
          transactionP2P:
            isFee: true
            date: 6
            method: 0
            executionDate: 8
            scheduledDate: scheduledDate
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            debitAmount: 6
            methodDetails: 7
            feeReference: 3
            senderAccountId: senderAccountId
            privateData:
              value:
              - value
              - value
            reference: reference
            comment: comment
            id: 7
            creditAmount: 3
            receiverAccountId: receiverAccountId
            commissionAmount: 0
            status: 4
      properties:
        value:
          items:
            $ref: '#/components/schemas/TransactionAccount'
          type: array
      type: object
    TransactionAccount:
      example:
        transactionIn:
          ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
          date: 9
          executionDate: 4
          scheduledDate: scheduledDate
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          maskedLabel: maskedLabel
          reference: reference
          authorization:
            remainingAmount: 6
            id: 1
            status: 1
          remainingAmount: 1
          bankReference: bankReference
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          id: 5
          receiverAccountId: receiverAccountId
          refundAmount: 1.4658129805029452
          method: 2
          substatus: substatus
          childTransactions:
          - date: 1
            reference: reference
            amount: 5
            executionDate: 9
            comment: comment
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            id: 7
            PSP:
              message: message
            commissionAmount: 4
            refundAmount: 9.965781217890562
            status: 6
          - date: 1
            reference: reference
            amount: 5
            executionDate: 9
            comment: comment
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            id: 7
            PSP:
              message: message
            commissionAmount: 4
            refundAmount: 9.965781217890562
            status: 6
          methodDetails: 7
          PSP:
            message: message
          threeDS:
            threeDSResult: threeDSResult
            threeDSModeRequested: threeDSModeRequested
          ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
          ChequeSendingAddress_Street: ChequeSendingAddress_Street
          ChequeSendingAddress_City: ChequeSendingAddress_City
          bankStatus: bankStatus
          scheduledNumber: scheduledNumber
          comment: comment
          creditAmount: 0
          card:
            country: country
            maskedNumber: maskedNumber
            holderName: holderName
            authorizationNumber: authorizationNumber
            is3DS: true
            expiration: expiration
            isRegistered: true
            id: 6
            type: type
          commissionAmount: 3
          status: 2
        transactionOut:
          date: 2
          method: 6
          IbanId: 9
          executionDate: 5
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          debitAmount: 8
          methodDetails: 1
          PSP:
            message: message
          senderAccountId: senderAccountId
          maskedLabel: maskedLabel
          reference: reference
          originId: 6
          bankStatus: bankStatus
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          comment: comment
          id: 3
          commissionAmount: 6
          status: 6
        transactionP2P:
          isFee: true
          date: 6
          method: 0
          executionDate: 8
          scheduledDate: scheduledDate
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          debitAmount: 6
          methodDetails: 7
          feeReference: 3
          senderAccountId: senderAccountId
          privateData:
            value:
            - value
            - value
          reference: reference
          comment: comment
          id: 7
          creditAmount: 3
          receiverAccountId: receiverAccountId
          commissionAmount: 0
          status: 4
      properties:
        transactionIn:
          $ref: '#/components/schemas/TransactionInDetails'
        transactionOut:
          $ref: '#/components/schemas/TransactionOut'
        transactionP2P:
          $ref: '#/components/schemas/TransactionP2P'
      type: object
    TransactionInDetails:
      example:
        ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
        date: 9
        executionDate: 4
        scheduledDate: scheduledDate
        lemonWayCommission:
          amount: 7
          idp2p: idp2p
        maskedLabel: maskedLabel
        reference: reference
        authorization:
          remainingAmount: 6
          id: 1
          status: 1
        remainingAmount: 1
        bankReference: bankReference
        buyNowPayLaterInfo:
          type: type
          paymentPlanId: 5
          deferredPaymentDate: deferredPaymentDate
          secondInstallmentPaymentDate: secondInstallmentPaymentDate
        id: 5
        receiverAccountId: receiverAccountId
        refundAmount: 1.4658129805029452
        method: 2
        substatus: substatus
        childTransactions:
        - date: 1
          reference: reference
          amount: 5
          executionDate: 9
          comment: comment
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          id: 7
          PSP:
            message: message
          commissionAmount: 4
          refundAmount: 9.965781217890562
          status: 6
        - date: 1
          reference: reference
          amount: 5
          executionDate: 9
          comment: comment
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          id: 7
          PSP:
            message: message
          commissionAmount: 4
          refundAmount: 9.965781217890562
          status: 6
        methodDetails: 7
        PSP:
          message: message
        threeDS:
          threeDSResult: threeDSResult
          threeDSModeRequested: threeDSModeRequested
        ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
        ChequeSendingAddress_Street: ChequeSendingAddress_Street
        ChequeSendingAddress_City: ChequeSendingAddress_City
        bankStatus: bankStatus
        scheduledNumber: scheduledNumber
        comment: comment
        creditAmount: 0
        card:
          country: country
          maskedNumber: maskedNumber
          holderName: holderName
          authorizationNumber: authorizationNumber
          is3DS: true
          expiration: expiration
          isRegistered: true
          id: 6
          type: type
        commissionAmount: 3
        status: 2
      properties:
        receiverAccountId:
          description: Credited Account
          type: string
        creditAmount:
          description: "Credited Amount\r\nAmounts represented in integer (cents)"
          format: int32
          type: integer
        scheduledDate:
          description: ""
          type: string
        scheduledNumber:
          description: ""
          type: string
        maskedLabel:
          type: string
        PSP:
          $ref: '#/components/schemas/PSP'
        card:
          $ref: '#/components/schemas/Card'
        bankStatus:
          type: string
        refundAmount:
          format: double
          type: number
        bankReference:
          description: Bank reference
          type: string
        ChequeSendingAddress_CorporateName:
          description: A specified postal address for the cheque
          type: string
        ChequeSendingAddress_Street:
          description: Cheque sending address street name
          type: string
        ChequeSendingAddress_City:
          description: Cheque sending address city name
          type: string
        ChequeSendingAddress_PostCode:
          description: Cheque sending address post code
          type: string
        threeDS:
          $ref: '#/components/schemas/ThreeDs'
        buyNowPayLaterInfo:
          $ref: '#/components/schemas/BnplInfo'
        id:
          description: Transaction ID
          format: int64
          type: integer
        method:
          description: "Payment Method  \r\n0 Card    \r\n1 Bank transfer (MoneyIn)\
            \     \r\n3 Bank transfer (MoneyOut)     \r\n4 P2P    \r\n13 iDEAL   \
            \ \r\n14 SEPA DirectDebit    \r\n15 Cheque    \r\n19 Multibanco    \r\n\
            21 MBWAY    \r\n30 BNPL  \r\n35 PayPal\r\n\r\n ---\r\n **Important:**\
            \ The following services have been discontinued. \r\n \r\n16 Neosurf \
            \ \r\n17 Sofort  \r\n18 PFS Physical Card  \r\n20 Payshop  \r\n22 Polish\
            \ Instant Transfer  \r\n23 Pagare  \r\n24 MobilePay\r\n25 Paytrail\r\n\
            26 WeChat  \r\n27 P24  \r\n28 MoneyIn by TPE  \r\n29 Trustly"
          format: int32
          type: integer
        methodDetails:
          description: "Payment Method Details\r\n0 Standard\r\n1 Pay By Bank<br/>0\
            \ = STANDARD.<br/>1 = PAY_BY_BANK.<br/>"
          enum:
          - 0
          - 1
          format: int32
          type: integer
        date:
          description: "Transaction initialization date, UTC Unix timestamp"
          format: int32
          type: integer
        commissionAmount:
          description: "Your fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment
          type: string
        status:
          description: "**Money-In**   \r\n  \r\n0: Success  \r\n3: Lemonway Error\
            \  \r\n4: Pending  \r\n6: PSP error  \r\n7: Cancelled  \r\n16: Validation\
            \ pending  \r\n\r\n**Money-Out**  \r\n\r\n**Important:**  For /v2/moneyins/{transactionid}/validate`\
            \ use the status codes:  \r\n\r\n0: Waiting for finalization    \r\n3:\
            \ Success    \r\n4: Lemonway Error    \r\n            \r\n**P2P**\r\n\r\
            \n0: Pending  \r\n3: Success"
          format: int32
          type: integer
        executionDate:
          description: Transaction execution date
          format: int32
          type: integer
        lemonWayCommission:
          $ref: '#/components/schemas/LemonWayCommission'
        reference:
          description: Unique ID generated by your server
          type: string
        remainingAmount:
          format: int32
          type: integer
        substatus:
          description: Is Payment token consumed?
          type: string
        authorization:
          $ref: '#/components/schemas/TransactionCapturedAuthorization'
        childTransactions:
          items:
            $ref: '#/components/schemas/TransactionAuthorizedCapture'
          type: array
      type: object
    TransactionOut:
      example:
        date: 2
        method: 6
        IbanId: 9
        executionDate: 5
        lemonWayCommission:
          amount: 7
          idp2p: idp2p
        debitAmount: 8
        methodDetails: 1
        PSP:
          message: message
        senderAccountId: senderAccountId
        maskedLabel: maskedLabel
        reference: reference
        originId: 6
        bankStatus: bankStatus
        buyNowPayLaterInfo:
          type: type
          paymentPlanId: 5
          deferredPaymentDate: deferredPaymentDate
          secondInstallmentPaymentDate: secondInstallmentPaymentDate
        comment: comment
        id: 3
        commissionAmount: 6
        status: 6
      properties:
        senderAccountId:
          description: Debited Account
          type: string
        debitAmount:
          description: "Debited Amount\r\nAmounts are represented in cents (Euros)"
          format: int32
          type: integer
        IbanId:
          description: IBAN ID
          format: int64
          type: integer
        maskedLabel:
          type: string
        bankStatus:
          type: string
        PSP:
          $ref: '#/components/schemas/PSP'
        originId:
          description: Money-In - ID responsible for the chargeback
          format: int64
          type: integer
        buyNowPayLaterInfo:
          $ref: '#/components/schemas/BnplInfo'
        id:
          description: Transaction ID
          format: int64
          type: integer
        method:
          description: "Payment Method  \r\n0 Card    \r\n1 Bank transfer (MoneyIn)\
            \     \r\n3 Bank transfer (MoneyOut)     \r\n4 P2P    \r\n13 iDEAL   \
            \ \r\n14 SEPA DirectDebit    \r\n15 Cheque    \r\n19 Multibanco    \r\n\
            21 MBWAY    \r\n30 BNPL  \r\n35 PayPal\r\n\r\n ---\r\n **Important:**\
            \ The following services have been discontinued. \r\n \r\n16 Neosurf \
            \ \r\n17 Sofort  \r\n18 PFS Physical Card  \r\n20 Payshop  \r\n22 Polish\
            \ Instant Transfer  \r\n23 Pagare  \r\n24 MobilePay\r\n25 Paytrail\r\n\
            26 WeChat  \r\n27 P24  \r\n28 MoneyIn by TPE  \r\n29 Trustly"
          format: int32
          type: integer
        methodDetails:
          description: "Payment Method Details\r\n0 Standard\r\n1 Pay By Bank<br/>0\
            \ = STANDARD.<br/>1 = PAY_BY_BANK.<br/>"
          enum:
          - 0
          - 1
          format: int32
          type: integer
        date:
          description: "Transaction initialization date, UTC Unix timestamp"
          format: int32
          type: integer
        commissionAmount:
          description: "Your fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment
          type: string
        status:
          description: "**Money-In**   \r\n  \r\n0: Success  \r\n3: Lemonway Error\
            \  \r\n4: Pending  \r\n6: PSP error  \r\n7: Cancelled  \r\n16: Validation\
            \ pending  \r\n\r\n**Money-Out**  \r\n\r\n**Important:**  For /v2/moneyins/{transactionid}/validate`\
            \ use the status codes:  \r\n\r\n0: Waiting for finalization    \r\n3:\
            \ Success    \r\n4: Lemonway Error    \r\n            \r\n**P2P**\r\n\r\
            \n0: Pending  \r\n3: Success"
          format: int32
          type: integer
        executionDate:
          description: Transaction execution date
          format: int32
          type: integer
        lemonWayCommission:
          $ref: '#/components/schemas/LemonWayCommission'
        reference:
          description: Unique ID generated by your server
          type: string
      type: object
    TransactionP2P:
      example:
        isFee: true
        date: 6
        method: 0
        executionDate: 8
        scheduledDate: scheduledDate
        lemonWayCommission:
          amount: 7
          idp2p: idp2p
        debitAmount: 6
        methodDetails: 7
        feeReference: 3
        senderAccountId: senderAccountId
        privateData:
          value:
          - value
          - value
        reference: reference
        comment: comment
        id: 7
        creditAmount: 3
        receiverAccountId: receiverAccountId
        commissionAmount: 0
        status: 4
      properties:
        senderAccountId:
          description: Debited Account
          type: string
        receiverAccountId:
          description: Credited Account
          type: string
        debitAmount:
          description: "Debited Amount\r\nAmounts are represented in cents (Euro)"
          format: int32
          type: integer
        creditAmount:
          description: "Credited Amount\r\nAmounts are represented in cents (Euro)"
          format: int32
          type: integer
        privateData:
          $ref: '#/components/schemas/PrivateData'
        scheduledDate:
          description: Request date for a payment or payment date. UTC unix timestamp
          type: string
        isFee:
          description: Returned 1 for a P2P commission transaction
          type: boolean
        feeReference:
          description: Original transaction ID
          format: int32
          type: integer
        id:
          description: Transaction ID
          format: int64
          type: integer
        method:
          description: "Payment Method  \r\n0 Card    \r\n1 Bank transfer (MoneyIn)\
            \     \r\n3 Bank transfer (MoneyOut)     \r\n4 P2P    \r\n13 iDEAL   \
            \ \r\n14 SEPA DirectDebit    \r\n15 Cheque    \r\n19 Multibanco    \r\n\
            21 MBWAY    \r\n30 BNPL  \r\n35 PayPal\r\n\r\n ---\r\n **Important:**\
            \ The following services have been discontinued. \r\n \r\n16 Neosurf \
            \ \r\n17 Sofort  \r\n18 PFS Physical Card  \r\n20 Payshop  \r\n22 Polish\
            \ Instant Transfer  \r\n23 Pagare  \r\n24 MobilePay\r\n25 Paytrail\r\n\
            26 WeChat  \r\n27 P24  \r\n28 MoneyIn by TPE  \r\n29 Trustly"
          format: int32
          type: integer
        methodDetails:
          description: "Payment Method Details\r\n0 Standard\r\n1 Pay By Bank<br/>0\
            \ = STANDARD.<br/>1 = PAY_BY_BANK.<br/>"
          enum:
          - 0
          - 1
          format: int32
          type: integer
        date:
          description: "Transaction initialization date, UTC Unix timestamp"
          format: int32
          type: integer
        commissionAmount:
          description: "Your fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment
          type: string
        status:
          description: "**Money-In**   \r\n  \r\n0: Success  \r\n3: Lemonway Error\
            \  \r\n4: Pending  \r\n6: PSP error  \r\n7: Cancelled  \r\n16: Validation\
            \ pending  \r\n\r\n**Money-Out**  \r\n\r\n**Important:**  For /v2/moneyins/{transactionid}/validate`\
            \ use the status codes:  \r\n\r\n0: Waiting for finalization    \r\n3:\
            \ Success    \r\n4: Lemonway Error    \r\n            \r\n**P2P**\r\n\r\
            \n0: Pending  \r\n3: Success"
          format: int32
          type: integer
        executionDate:
          description: Transaction execution date
          format: int32
          type: integer
        lemonWayCommission:
          $ref: '#/components/schemas/LemonWayCommission'
        reference:
          description: Unique ID generated by your server
          type: string
      type: object
    Card:
      example:
        country: country
        maskedNumber: maskedNumber
        holderName: holderName
        authorizationNumber: authorizationNumber
        is3DS: true
        expiration: expiration
        isRegistered: true
        id: 6
        type: type
      properties:
        id:
          description: ""
          format: int64
          type: integer
        is3DS:
          description: Card with 3-DS authentication
          type: boolean
        country:
          description: Card issuing country
          type: string
        authorizationNumber:
          description: Authorization number
          type: string
        maskedNumber:
          description: Masked card number
          type: string
        expiration:
          description: Expiration date (if available)
          type: string
        type:
          description: "Card type (example: Visa or Mastercard)"
          type: string
        isRegistered:
          description: Card is registered
          type: boolean
        holderName:
          description: Card's holder name
          type: string
      type: object
    ThreeDs:
      example:
        threeDSResult: threeDSResult
        threeDSModeRequested: threeDSModeRequested
      properties:
        threeDSModeRequested:
          description: "3DS Exemption Request  \r\nPossible value:  \r\n\r\nNO_PREFERENCE:\
            \ The issuing Bank can choose to activate or not 3DS v2."
          type: string
        threeDSResult:
          description: "3DS Authentication Result  \r\nPossible values:  \r\n\r\n\
            - CHALLENGE: 3DS v2 was activated and the card owner was asked to be strongly\
            \ authenticated.  \r\n- FRICTIONLESS: 3DS v2 was not activated.  \r\n\
            - NONE: We could not get the SCA result."
          type: string
      type: object
    BnplInfo:
      example:
        type: type
        paymentPlanId: 5
        deferredPaymentDate: deferredPaymentDate
        secondInstallmentPaymentDate: secondInstallmentPaymentDate
      properties:
        paymentPlanId:
          description: Payment Plan ID
          format: int64
          type: integer
        type:
          description: Payment plan type.
          type: string
        secondInstallmentPaymentDate:
          description: "Second installment payment date.\r\nFormat: yyyy-MM-dd"
          type: string
        deferredPaymentDate:
          description: "Deferred payment date.\r\nFormat: yyyy-MM-dd"
          type: string
      type: object
    LemonWayCommission:
      example:
        amount: 7
        idp2p: idp2p
      properties:
        idp2p:
          type: string
        amount:
          description: "Amounts are represented as integer in cents (Euro)\r\nRepresented\
            \ as an integer in cents (Euro)"
          format: int32
          type: integer
      type: object
    TransactionCapturedAuthorization:
      example:
        remainingAmount: 6
        id: 1
        status: 1
      properties:
        id:
          format: int64
          type: integer
        status:
          format: int32
          type: integer
        remainingAmount:
          format: int32
          type: integer
      type: object
    TransactionAuthorizedCapture:
      example:
        date: 1
        reference: reference
        amount: 5
        executionDate: 9
        comment: comment
        lemonWayCommission:
          amount: 7
          idp2p: idp2p
        id: 7
        PSP:
          message: message
        commissionAmount: 4
        refundAmount: 9.965781217890562
        status: 6
      properties:
        id:
          description: Transaction ID
          format: int64
          type: integer
        date:
          description: "Transaction initialization date, UTC Unix timestamp"
          format: int32
          type: integer
        commissionAmount:
          description: "Your fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment
          type: string
        lemonWayCommission:
          $ref: '#/components/schemas/LemonWayCommission'
        amount:
          description: "Transaction Amount\r\nAmounts represented in integer (cents)"
          format: int32
          type: integer
        refundAmount:
          format: double
          type: number
        executionDate:
          description: Transaction execution date
          format: int32
          type: integer
        status:
          format: int32
          type: integer
        PSP:
          $ref: '#/components/schemas/PSP'
        reference:
          description: Unique ID generated by your server
          type: string
      type: object
    PrivateData:
      description: Data with multiple fields that you can associate to a payment and
        that you can search with GetPaymentDetails.
      example:
        value:
        - value
        - value
      properties:
        value:
          description: Up to 20 fields of 256 maximum length
          items:
            type: string
          type: array
      type: object
    UpdateLegalAccountDetailsInput:
      example:
        company:
          name: Lemonway SAS
          description: "Ecommerce, clothings"
          websiteUrl: www.lemonway.fr
          identificationNumber: 1234567ABCDEF
        email: adresse@domaine.com
        title: M
        firstName: Pierre
        lastName: Dupont
        adresse:
          street: 26 rue de Paris
          postCode: "93100"
          city: Montreuil
          country: FRA
        Birth:
          date: 21/03/1985
          city: Montreuil
          Country: FRA
        phoneNumber: "33672635263"
        mobileNumber: "33672635263"
        isDebtor: true
        nationality: "FRA,USA"
        payerOrBeneficiary: 1
        isCompany: false
      properties:
        company:
          $ref: '#/components/schemas/Company'
        email:
          description: New Email.
          maxLength: 256
          minLength: 6
          pattern: "^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"\
            ]+)*)|(\\\".+\\\"))@((\\[\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\])|(([a-zA-Z\\\
            -0-9]+\\.)+[a-zA-Z]{2,}))$"
          type: string
        title:
          description: Client title
          maxLength: 1
          minLength: 1
          pattern: ^(M|F|J|U)$
          type: string
        firstName:
          description: Client first name
          maxLength: 256
          minLength: 2
          type: string
        lastName:
          description: Client last name
          maxLength: 256
          minLength: 2
          type: string
        adresse:
          $ref: '#/components/schemas/Address'
        Birth:
          $ref: '#/components/schemas/Birth'
        phoneNumber:
          description: MSISDN phone number
          maxLength: 30
          minLength: 6
          pattern: "^\\d{6,30}$"
          type: string
        mobileNumber:
          description: "Mobile phone number with MSISDN format: international number\
            \ with country code without \"00\" neither \"+\".<br /> \r\nThis will\
            \ be used by default when eletronically signing documents."
          maxLength: 30
          minLength: 6
          pattern: "^\\d{6,30}$"
          type: string
        isDebtor:
          description: "For crowdfunding/loan platforms, indicate if the wallet is\
            \ created for a debtor."
          type: boolean
        nationality:
          description: "client nationality, using ISO 3166-1 alpha-3 format.\r\nSeparate\
            \ multiple nationalities with a comma."
          maxLength: 19
          minLength: 0
          type: string
        payerOrBeneficiary:
          description: "Indicates if the payment account is created for a payer or\
            \ a beneficiary:\r\nEmpty: unknown status (default)\r\n1: Payer\r\n2:\
            \ Beneficiary"
          format: int32
          maximum: 2
          minimum: 1
          type: integer
        isCompany:
          description: '**Important:** This object is deprecated and no longer permissible
            in accordance with EU compliance rules.'
          type: boolean
      required:
      - company
      type: object
    UpdateLegalAccountDetailsOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        account:
          lemonwayId: 0
          id: id
          limits:
            amountMoneyInAllowed: 1.4658129805029452
            totalMoneyInAllowed: 6
      properties:
        account:
          $ref: '#/components/schemas/LegalAccount'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    LegalAccount:
      example:
        lemonwayId: 0
        id: id
        limits:
          amountMoneyInAllowed: 1.4658129805029452
          totalMoneyInAllowed: 6
      properties:
        id:
          description: Updated Wallet ID (your choice when you create the Wallet)
          type: string
        lemonwayId:
          description: Lemonway Wallet ID (you can not choose this number). This number
            is also displayed in our Dashboard.
          format: int64
          type: integer
        limits:
          $ref: '#/components/schemas/Limits'
      type: object
    Limits:
      example:
        amountMoneyInAllowed: 1.4658129805029452
        totalMoneyInAllowed: 6
      properties:
        totalMoneyInAllowed:
          description: Total Money-In number allowed for this account
          format: int64
          type: integer
        amountMoneyInAllowed:
          description: Total Money-In amount allowed for this wallet
          format: double
          type: number
      type: object
    AccountBlockedInput:
      example:
        isBlocked: true
        comment: comment
      properties:
        isBlocked:
          type: boolean
        comment:
          maxLength: 256
          minLength: 0
          type: string
      required:
      - isBlocked
      type: object
    AccountBlockedOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        account:
          isBlocked: true
          id: id
      properties:
        account:
          $ref: '#/components/schemas/AccountBlock'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    AccountBlock:
      example:
        isBlocked: true
        id: id
      properties:
        id:
          description: Updated payment account ID
          type: string
        isBlocked:
          description: "Status of the payment account\r\n1: is bocked true\r\n0: is\
            \ blocked false"
          type: boolean
      type: object
    UpdateAccountStatusInput:
      example:
        status: 6
      properties:
        status:
          description: "New payment account status<br/>0 = Unknown.<br/>1 = Not Opened.<br/>2\
            \ = Opened, need more documents.<br/>3 = Opened, document rejected.<br/>5\
            \ = Opened, KYC1.<br/>6 = Opened, KYC2.<br/>7 = Opened, KYC3.<br/>8 =\
            \ Opened, document expired.<br/>9 = Frozen (by backoffice).<br/>10 = Blocked.<br/>11\
            \ = Locked (by Web Service).<br/>12 = Closed.<br/>13 = Pending KYC3.<br/>14\
            \ = One-time customer.<br/>15 = CGE.<br/>16 = Technical Payment Account.<br/>"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          format: int32
          type: integer
      required:
      - status
      type: object
    UpdateAccountStatusOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        account:
          id: id
          status: 0
      properties:
        account:
          $ref: '#/components/schemas/UpdateAccountStatus'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    UpdateAccountStatus:
      example:
        id: id
        status: 0
      properties:
        id:
          description: Updated payment account ID
          type: string
        status:
          description: Status of the payment account
          format: int32
          type: integer
      type: object
    UpdateIndividualAccountDetailsInput:
      example:
        email: adresse@domaine.com
        title: M
        firstName: Pierre
        lastName: Dupont
        adresse:
          street: 26 rue de Paris
          postCode: "93100"
          city: Montreuil
          country: FRA
        Birth:
          date: 21/03/1985
          city: Montreuil
          Country: FRA
        phoneNumber: "33672635263"
        mobileNumber: "33672635263"
        isDebtor: true
        nationality: "FRA,USA"
        payerOrBeneficiary: 1
        isCompany: false
      properties:
        email:
          description: New Email.
          maxLength: 256
          minLength: 6
          pattern: "^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"\
            ]+)*)|(\\\".+\\\"))@((\\[\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\])|(([a-zA-Z\\\
            -0-9]+\\.)+[a-zA-Z]{2,}))$"
          type: string
        title:
          description: Client title
          maxLength: 1
          minLength: 1
          pattern: ^(M|F|J|U)$
          type: string
        firstName:
          description: Client first name
          maxLength: 256
          minLength: 2
          type: string
        lastName:
          description: Client last name
          maxLength: 256
          minLength: 2
          type: string
        adresse:
          $ref: '#/components/schemas/Address'
        Birth:
          $ref: '#/components/schemas/Birth'
        phoneNumber:
          description: MSISDN phone number
          maxLength: 30
          minLength: 6
          pattern: "^\\d{6,30}$"
          type: string
        mobileNumber:
          description: "Mobile phone number with MSISDN format: international number\
            \ with country code without \"00\" neither \"+\".<br /> \r\nThis will\
            \ be used by default when eletronically signing documents."
          maxLength: 30
          minLength: 6
          pattern: "^\\d{6,30}$"
          type: string
        isDebtor:
          description: "For crowdfunding/loan platforms, indicate if the wallet is\
            \ created for a debtor."
          type: boolean
        nationality:
          description: "client nationality, using ISO 3166-1 alpha-3 format.\r\nSeparate\
            \ multiple nationalities with a comma."
          maxLength: 19
          minLength: 0
          type: string
        payerOrBeneficiary:
          description: "Indicates if the payment account is created for a payer or\
            \ a beneficiary:\r\nEmpty: unknown status (default)\r\n1: Payer\r\n2:\
            \ Beneficiary"
          format: int32
          maximum: 2
          minimum: 1
          type: integer
        isCompany:
          description: '**Important:** This object is deprecated and no longer permissible
            in accordance with EU compliance rules.'
          type: boolean
      type: object
    UpdateIndividualAccountDetailsOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        account:
          internalId: 0
          id: id
          limits:
            amountMoneyInAllowed: 1.4658129805029452
            totalMoneyInAllowed: 6
      properties:
        account:
          $ref: '#/components/schemas/IndividualAccount'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    IndividualAccount:
      example:
        internalId: 0
        id: id
        limits:
          amountMoneyInAllowed: 1.4658129805029452
          totalMoneyInAllowed: 6
      properties:
        id:
          description: Payment Account ID
          type: string
        internalId:
          description: Internal ID given by Lemonway (ID displayed on the Lemonway
            Dashboard)
          format: int64
          type: integer
        limits:
          $ref: '#/components/schemas/Limits'
      type: object
    UpdateUltimateBeneficialOwnerInput:
      example:
        firstName: Dupont
        lastName: Pierre
        nationality: FR
        isActive: false
      properties:
        firstName:
          description: Client First Name
          maxLength: 256
          minLength: 2
          type: string
        lastName:
          description: Client Last Name
          maxLength: 256
          minLength: 2
          type: string
        nationality:
          description: Client Nationality (use ISO 3166-1 alpha-3 format)
          maxLength: 19
          minLength: 0
          type: string
        dateOfBirth:
          description: Client Birthdate
          pattern: "^[12]\\d{3}\\/(0[1-9]|1[0-2])\\/(0[1-9]|[12]\\d|3[01])$"
          type: string
        cityOfBirth:
          description: Client City of Birth
          maxLength: 140
          minLength: 0
          type: string
        countryOfBirth:
          description: Client Country of Birth (use ISO 3166-1 alpha-3 format)
          maxLength: 3
          minLength: 3
          type: string
        countryOfResidence:
          description: Country of Residence (use ISO 3166-1 alpha-3 format)
          maxLength: 19
          minLength: 0
          type: string
        isActive:
          description: Indicate if the UBO is active or not
          type: boolean
      required:
      - cityOfBirth
      - countryOfBirth
      - dateOfBirth
      - firstName
      - lastName
      type: object
    UpdateUltimateBeneficialOwnerOutput:
      example:
        ultimateBeneficialOwnerId: 0
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        ultimateBeneficialOwnerId:
          format: int64
          type: integer
        error:
          $ref: '#/components/schemas/Error'
      type: object
    RegisterLegalAccountInput:
      example:
        company:
          name: Lemonway SAS
          description: "Ecommerce, clothings"
          websiteUrl: www.lemonway.fr
          identificationNumber: 123567ABCDEF
        accountId: "33612345678"
        email: adresse@domaine.com
        title: M
        firstName: Pierre
        lastName: Dupont
        adresse:
          street: 26 rue de Paris
          postCode: "93100"
          city: Montreuil
          country: FRA
        birth:
          date: 1985/03/21
          city: Montreuil
          Country: FRA
        nationality: "FRA,USA"
        phoneNumber: "33672635263"
        mobileNumber: "33672635263"
        isDebtor: true
        payerOrBeneficiary: 1
        isOneTimeCustomerAccount: false
        isTechnicalAccount: false
      properties:
        company:
          $ref: '#/components/schemas/Company'
        isUltimateBeneficialOwner:
          description: Indicates if the legal representative is also an Ultimate Beneficial
            owner (i.e. shareholder with &gt;25% of capital or voting rights).
          type: boolean
        accountId:
          description: "Payment account ID that you use to identify the customer.Choose\
            \ your unique number.<br /><b>Note:</b> If you plan to credit payments\
            \ accounts  by fund transfer, please use short alphanumeric payment account\
            \ identifiers (max 20 char.). \r\nYour customers will have to write their\
            \ payment account identifier in the transfer label/comment, a label of\
            \ more that 20 characters could be cut when passing the the banking system."
          maxLength: 100
          minLength: 1
          type: string
        email:
          description: Unique Email
          maxLength: 256
          minLength: 6
          pattern: "^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"\
            ]+)*)|(\\\".+\\\"))@((\\[\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\])|(([a-zA-Z\\\
            -0-9]+\\.)+[a-zA-Z]{2,}))$"
          type: string
        title:
          description: Client title
          maxLength: 1
          minLength: 1
          pattern: ^(M|F|J|U)$
          type: string
        firstName:
          description: Client first name
          maxLength: 256
          minLength: 2
          type: string
        lastName:
          description: Client last name
          maxLength: 256
          minLength: 2
          type: string
        adresse:
          $ref: '#/components/schemas/Address'
        birth:
          $ref: '#/components/schemas/Birth'
        nationality:
          description: "Client nationality, using ISO 3166-1 alpha-3 format\r\nPlease\
            \ separate multiple nationalities with a comma"
          maxLength: 19
          minLength: 0
          type: string
        phoneNumber:
          description: "Phone number with MSISDN format: international number with\
            \ country code without \"00\" neither \"+\"."
          maxLength: 30
          minLength: 6
          pattern: "^\\d{6,30}$"
          type: string
        mobileNumber:
          description: "Mobile phone number with MSISDN format: international number\
            \ with country code without \"00\" neither \"+\". \r\nThis will be used\
            \ by default when eletronically signing documents."
          maxLength: 30
          minLength: 6
          pattern: "^\\d{6,30}$"
          type: string
        isDebtor:
          description: "For crowdfunding/loan platforms, indicates if the wallet is\
            \ created for a debtor."
          type: boolean
        payerOrBeneficiary:
          description: "Indicates if the payment account is created for a Payer or\
            \ a Beneficiary.\r\n1: Payer (default)\r\n2: Beneficiary"
          format: int32
          maximum: 2
          minimum: 1
          type: integer
        isOneTimeCustomerAccount:
          description: "Indicates if the payment account is for a one-time customer.\
            \ \r\nIf yes, the payment account will be created with status 14, allowing\
            \ only one payment. \r\nThe maximum amount will be defined with Lemonway."
          type: boolean
        isTechnicalAccount:
          description: "**Note:** This option is available depending on your contract\r\
            \nTrue, in case this option is enabled in your contract.\r\nOtherwise\
            \ it will be considered a Client Wallet."
          type: boolean
      required:
      - accountId
      - company
      - email
      - firstName
      - lastName
      - nationality
      - payerOrBeneficiary
      type: object
    RegisterLegalAccountOutput:
      example:
        legalAccount:
          lemonwayId: 0
          id: id
          limits:
            amountMoneyInAllowed: 1.4658129805029452
            totalMoneyInAllowed: 6
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        legalAccount:
          $ref: '#/components/schemas/LegalAccount'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    RegisterIndividualAccountInput:
      example:
        accountId: "33612345678"
        email: adresse@domaine.com
        title: M
        firstName: Pierre
        lastName: Dupont
        adresse:
          street: 26 rue de Paris
          postCode: "93100"
          city: Montreuil
          country: FRA
        birth:
          date: 1985/03/21
          city: Montreuil
          Country: FRA
        nationality: "FRA,USA"
        phoneNumber: "33672635263"
        mobileNumber: "33672635263"
        isDebtor: true
        payerOrBeneficiary: 1
        isOneTimeCustomerAccount: false
        isTechnicalAccount: false
      properties:
        accountId:
          description: "Payment account ID that you use to identify the customer.Choose\
            \ your unique number.<br /><b>Note:</b> If you plan to credit payments\
            \ accounts  by fund transfer, please use short alphanumeric payment account\
            \ identifiers (max 20 char.). \r\nYour customers will have to write their\
            \ payment account identifier in the transfer label/comment, a label of\
            \ more that 20 characters could be cut when passing the the banking system."
          maxLength: 100
          minLength: 1
          type: string
        email:
          description: Unique Email
          maxLength: 256
          minLength: 6
          pattern: "^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"\
            ]+)*)|(\\\".+\\\"))@((\\[\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\])|(([a-zA-Z\\\
            -0-9]+\\.)+[a-zA-Z]{2,}))$"
          type: string
        title:
          description: Client title
          maxLength: 1
          minLength: 1
          pattern: ^(M|F|J|U)$
          type: string
        firstName:
          description: Client first name
          maxLength: 256
          minLength: 2
          type: string
        lastName:
          description: Client last name
          maxLength: 256
          minLength: 2
          type: string
        adresse:
          $ref: '#/components/schemas/Address'
        birth:
          $ref: '#/components/schemas/Birth'
        nationality:
          description: "Client nationality, using ISO 3166-1 alpha-3 format\r\nPlease\
            \ separate multiple nationalities with a comma"
          maxLength: 19
          minLength: 0
          type: string
        phoneNumber:
          description: "Phone number with MSISDN format: international number with\
            \ country code without \"00\" neither \"+\"."
          maxLength: 30
          minLength: 6
          pattern: "^\\d{6,30}$"
          type: string
        mobileNumber:
          description: "Mobile phone number with MSISDN format: international number\
            \ with country code without \"00\" neither \"+\". \r\nThis will be used\
            \ by default when eletronically signing documents."
          maxLength: 30
          minLength: 6
          pattern: "^\\d{6,30}$"
          type: string
        isDebtor:
          description: "For crowdfunding/loan platforms, indicates if the wallet is\
            \ created for a debtor."
          type: boolean
        payerOrBeneficiary:
          description: "Indicates if the payment account is created for a Payer or\
            \ a Beneficiary.\r\n1: Payer (default)\r\n2: Beneficiary"
          format: int32
          maximum: 2
          minimum: 1
          type: integer
        isOneTimeCustomerAccount:
          description: "Indicates if the payment account is for a one-time customer.\
            \ \r\nIf yes, the payment account will be created with status 14, allowing\
            \ only one payment. \r\nThe maximum amount will be defined with Lemonway."
          type: boolean
        isTechnicalAccount:
          description: "**Note:** This option is available depending on your contract\r\
            \nTrue, in case this option is enabled in your contract.\r\nOtherwise\
            \ it will be considered a Client Wallet."
          type: boolean
        isUltimateBeneficialOwner:
          description: ""
          type: boolean
      required:
      - accountId
      - email
      - firstName
      - lastName
      - nationality
      - payerOrBeneficiary
      type: object
    RegisterIndividualAccountOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        account:
          internalId: 0
          id: id
          limits:
            amountMoneyInAllowed: 1.4658129805029452
            totalMoneyInAllowed: 6
      properties:
        account:
          $ref: '#/components/schemas/IndividualAccount'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    AccountDetailsBatchInput:
      example:
        accounts:
        - accountid: "42"
          email: myemail@website.com
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/WalletDetailsInput'
          type: array
      required:
      - accounts
      type: object
    WalletDetailsInput:
      properties:
        accountid:
          type: string
        email:
          type: string
      type: object
    AccountDetailsBatchOutput:
      example:
        accounts:
        - firstname: firstname
          mobileNumber: mobileNumber
          accountType: 5
          clientTitle: clientTitle
          birth:
            date: date
            city: city
            Country: Country
          lastname: lastname
          isDebtor: true
          internalId: 0
          payerOrBeneficiary: 5
          isblocked: true
          phoneNumber: phoneNumber
          balance: 6
          nationality: nationality
          adresse:
            country: country
            city: city
            street: street
            postCode: postCode
          company:
            websiteUrl: websiteUrl
            name: name
            description: description
            identificationNumber: identificationNumber
          id: id
          email: email
          status: 1
        - firstname: firstname
          mobileNumber: mobileNumber
          accountType: 5
          clientTitle: clientTitle
          birth:
            date: date
            city: city
            Country: Country
          lastname: lastname
          isDebtor: true
          internalId: 0
          payerOrBeneficiary: 5
          isblocked: true
          phoneNumber: phoneNumber
          balance: 6
          nationality: nationality
          adresse:
            country: country
            city: city
            street: street
            postCode: postCode
          company:
            websiteUrl: websiteUrl
            name: name
            description: description
            identificationNumber: identificationNumber
          id: id
          email: email
          status: 1
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/AccountDetails'
          type: array
        error:
          $ref: '#/components/schemas/Error'
      type: object
    EnrolmentInitInput:
      example:
        Provider: 0
        successUrl: http://lemonway.com/postident/success
        declinedUrl: http://lemonway.com/postident/declined
        couponRequestedUrl: http://lemonway.com/postident/coupon
        reviewPendingUrl: http://lemonway.com/postident/pending
        incompleteUrl: http://lemonway.com/postident/incomplete
      properties:
        Provider:
          description: Identification provider<br/>0 = Deutsche Post POSTIDENT.<br/>
          enum:
          - 0
          format: int32
          type: integer
        successUrl:
          description: Forwarding URL to which in case of a successful identification
            should be forwarded
          maxLength: 255
          minLength: 0
          type: string
        declinedUrl:
          description: Forwarding URL to which in case of an unsuccessful identification
            should be forwarded
          maxLength: 255
          minLength: 0
          type: string
        couponRequestedUrl:
          description: Forwarding URL to forward to when the coupon has been downloaded
          maxLength: 255
          minLength: 0
          type: string
        reviewPendingUrl:
          description: Forwarding URL to forward to when the coupon has been downloaded
          maxLength: 255
          minLength: 0
          type: string
        incompleteUrl:
          description: Forwarding URL to which in case of incomplete identification
            should be forwarded
          maxLength: 255
          minLength: 0
          type: string
      required:
      - Provider
      type: object
    EnrolmentInitOutput:
      example:
        redirecturl: redirecturl
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        redirecturl:
          description: Redirect URL to Deutsche Post PostIdent
          type: string
        error:
          $ref: '#/components/schemas/Error'
      type: object
    UploadDocumentInput:
      example:
        name: CIN_account13.png
        type: 2
        buffer: 
        sddMandateId: 356
      properties:
        name:
          description: Document Name
          type: string
        type:
          description: "Document Type:  \r\n**Note:**  \r\n If you have previously\
            \ uploaded a document in a reserved **slot(0-13)** and need to upload\
            \ another document of the same type, use the slot **Other document(6,\
            \ 14-20)**.<br/>0 = ID card (both sides in one file).<br/>1 = Proof of\
            \ address.<br/>2 = Scan of a proof of IBAN.<br/>3 = Passport (European\
            \ Union).<br/>4 = Passport (outside the European Union).<br/>5 = Residence\
            \ permit (both sides in one file).<br/>6 = Other document type.<br/>7\
            \ = Official company registration document (Kbis extract or equivalent).<br/>11\
            \ = Driver licence (both sides in one file).<br/>12 = Status.<br/>13 =\
            \ Selfie.<br/>14 = Other document type.<br/>15 = Other document type.<br/>16\
            \ = Other document type.<br/>17 = Other document type.<br/>18 = Other\
            \ document type.<br/>19 = Other document type.<br/>20 = Other document\
            \ type.<br/>21 = SDD mandate.<br/>"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 19
          - 20
          - 21
          format: int32
          type: integer
        buffer:
          description: Byte array with the document. Encode in base 64 if necessary.
          type: string
        sddMandateId:
          description: "Lets you upload your signed(with your own signing partner)\
            \ mandate document, to validate a mandate ID you previously created with\
            \ `RegisterSddMandate`."
          format: int64
          type: integer
      required:
      - buffer
      - name
      - type
      type: object
    UploadDocumentOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        uploadDocument:
          substatus: 1
          accountstatus: 5
          id: 0
          status: 6
      properties:
        uploadDocument:
          $ref: '#/components/schemas/UploadDocument'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    UploadDocument:
      example:
        substatus: 1
        accountstatus: 5
        id: 0
        status: 6
      properties:
        id:
          description: Document ID
          format: int64
          type: integer
        status:
          description: "Document Status:<br/>0 = Document put on hold, waiting for\
            \ another document.<br/>1 = Received, need manual validation.<br/>2 =\
            \ Accepted.<br/>3 = Rejected.<br/>4 = Rejected. Unreadable by human (Cropped,\
            \ blur, glare…).<br/>5 = Rejected. Expired (Expiration Date is passed).<br/>6\
            \ = Rejected. Wrong Type (Document not accepted).<br/>7 = Rejected. Wrong\
            \ Name (Name not matching user information).<br/>8 = Rejected. Duplicated\
            \ Document.<br/>"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          format: int32
          type: integer
        substatus:
          description: "Document sub-status. Only when Status = 1:<br/>1 = Document\
            \ type not processable automatically.<br/>2 = Unreadable by computer (Cropped,\
            \ blur, glare…).<br/>3 = Wrong Type.<br/>4 = Wrong Name (Name not matching\
            \ user information).<br/>5 = File too big (File should not be over 4MB\
            \ to be processed automatically).<br/>6 = Automatic Controls Failed.<br/>7\
            \ = Need 2 sides of the document in one file.<br/>8 = Unknown.<br/>"
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          format: int32
          type: integer
        accountstatus:
          description: "Payment account status<br/>2 = Registered, KYC incomplete.<br/>3\
            \ = Registered, rejected KYC.<br/>5 = Registered, KYC 1 (status given\
            \ at registration).<br/>6 = Registered, KYC 2.<br/>7 = Registered, KYC\
            \ 3.<br/>8 = Registered, expired KYC.<br/>10 = Blocked.<br/>12 = Closed.<br/>13\
            \ = Registered, status is being updated from KYC 2 to KYC 3.<br/>14 =\
            \ One-time customer.<br/>15 = Special account for crowdlending.<br/>16\
            \ = Technical account.<br/>"
          enum:
          - 2
          - 3
          - 5
          - 6
          - 7
          - 8
          - 10
          - 12
          - 13
          - 14
          - 15
          - 16
          format: int32
          type: integer
      type: object
    AddUltimateBeneficialOwnerInput:
      example:
        firstName: firstName
        lastName: lastName
        cityOfBirth: cityOfBirth
        nationality: nationality
        countryOfBirth: countryOfBirth
        dateOfBirth: dateOfBirth
        countryOfResidence: countryOfResidence
      properties:
        firstName:
          description: Client First Name
          maxLength: 256
          minLength: 2
          type: string
        lastName:
          description: Client Last Name
          maxLength: 256
          minLength: 2
          type: string
        nationality:
          description: Client Nationality (use ISO 3166-1 alpha-3 format)
          maxLength: 19
          minLength: 0
          type: string
        dateOfBirth:
          description: Client Birthdate
          pattern: "^[12]\\d{3}\\/(0[1-9]|1[0-2])\\/(0[1-9]|[12]\\d|3[01])$"
          type: string
        cityOfBirth:
          description: Client City of Birth
          maxLength: 140
          minLength: 0
          type: string
        countryOfBirth:
          description: Client Country of Birth (use ISO 3166-1 alpha-3 format)
          maxLength: 3
          minLength: 3
          type: string
        countryOfResidence:
          description: Country of Residence (use ISO 3166-1 alpha-3 format)
          maxLength: 19
          minLength: 0
          type: string
      required:
      - cityOfBirth
      - countryOfBirth
      - dateOfBirth
      - firstName
      - lastName
      type: object
    AddUltimateBeneficialOwnerOutput:
      example:
        ultimateBeneficialOwnerId: 0
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        ultimateBeneficialOwnerId:
          format: int64
          type: integer
        error:
          $ref: '#/components/schemas/Error'
      type: object
    SignDocumentInitInput:
      example:
        mobileNumber: "33612345878"
        type: 21
        returnUrl: https://www.yoursite.com/signature_return.php
        errorUrl: https://www.yoursite.com/signature_return.php
      properties:
        mobileNumber:
          description: "Required if no mobile number is already assigned to the payment\
            \ account (using RegisterWallet or UpdateWalletDetails).\r\nFormat must\
            \ be MSISDN : international number with country code, without \"+\" and\
            \ \"00\"."
          pattern: "^\\d{6,30}$"
          type: string
        type:
          description: Use **21** for SDD mandate
          format: int32
          type: integer
        returnUrl:
          description: "Your website will the return URL, called by WEBKIT to terminate\
            \ the operation."
          maxLength: 2000
          minLength: 0
          type: string
        errorUrl:
          description: "You site will return the URL, called by WEBKIT in case of\
            \ an error."
          maxLength: 2000
          minLength: 0
          type: string
      required:
      - errorUrl
      - returnUrl
      - type
      type: object
    SignDocumentInitOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        signDocument: signDocument
      properties:
        signDocument:
          description: "Payment token to use as GET parameter when redirecting your\
            \ user to the WEBKIT.\r\nso even if the user comes back to your error\
            \ page (if the user cancelled for example), \r\nyou can still submit the\
            \ same token to the WEBKIT."
          type: string
        error:
          $ref: '#/components/schemas/Error'
      type: object
    GetCardOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        card:
          country: country
          maskedNumber: maskedNumber
          holderName: holderName
          authorizationNumber: authorizationNumber
          is3DS: true
          expiration: expiration
          isRegistered: true
          id: 6
          type: type
      properties:
        card:
          $ref: '#/components/schemas/Card'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    AccountCardsOutput:
      example:
        cards:
        - country: country
          maskedNumber: maskedNumber
          holderName: holderName
          authorizationNumber: authorizationNumber
          is3DS: true
          expiration: expiration
          isRegistered: true
          id: 6
          type: type
        - country: country
          maskedNumber: maskedNumber
          holderName: holderName
          authorizationNumber: authorizationNumber
          is3DS: true
          expiration: expiration
          isRegistered: true
          id: 6
          type: type
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        cards:
          description: Dispalays a list of documents that have changed since original
            entry date.
          items:
            $ref: '#/components/schemas/Card'
          type: array
        error:
          $ref: '#/components/schemas/Error'
      type: object
    GetVibanCountOutput:
      example:
        activeVibanCount: 0
        remainingVibanCount: 1
        inactiveVibanCount: 6
        error:
          code: 2
          message: message
          psp:
            message: message
        maxVibanThreshold: 5
        maxVibanPerWalletThreshold: 5
      properties:
        activeVibanCount:
          format: int32
          type: integer
        inactiveVibanCount:
          format: int32
          type: integer
        remainingVibanCount:
          format: int32
          type: integer
        maxVibanThreshold:
          format: int32
          type: integer
        maxVibanPerWalletThreshold:
          format: int32
          type: integer
        error:
          $ref: '#/components/schemas/Error'
      type: object
    AccountMandatsOutput:
      example:
        mandates:
        - IBAN: IBAN
          UniqueMandateReference: UniqueMandateReference
          holder: holder
          id: 5
          BIC: BIC
          status: 2
        - IBAN: IBAN
          UniqueMandateReference: UniqueMandateReference
          holder: holder
          id: 5
          BIC: BIC
          status: 2
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        mandates:
          description: List of documents that changed since the entry date.
          items:
            $ref: '#/components/schemas/SddMandate'
          type: array
        error:
          $ref: '#/components/schemas/Error'
      type: object
    GetPaymentPlansOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        paymentPlans:
        - provider: provider
          installments: 1
          description: description
          id: 0
          type: type
          deferredDays: 6
        - provider: provider
          installments: 1
          description: description
          id: 0
          type: type
          deferredDays: 6
      properties:
        paymentPlans:
          description: List of actived BNPL payment plans
          items:
            $ref: '#/components/schemas/PaymentPlan'
          type: array
        error:
          $ref: '#/components/schemas/Error'
      type: object
    PaymentPlan:
      example:
        provider: provider
        installments: 1
        description: description
        id: 0
        type: type
        deferredDays: 6
      properties:
        id:
          description: Payment plan ID.
          format: int64
          type: integer
        provider:
          description: PSP name.
          type: string
        type:
          description: "Payment Plan Type.\r\nex: Installments or deferrerd."
          type: string
        deferredDays:
          description: Number of deferred days.
          format: int32
          type: integer
        installments:
          description: Number of installments.
          format: int32
          type: integer
        description:
          description: "Payment plan description.\r\nex: The marketplace bears the\
            \ fees."
          type: string
      type: object
    GetCompletedPaymentFormOutput:
      example:
        form:
          emailPayer: emailPayer
          created: 6
          firstNamePayer: firstNamePayer
          accountReceiver: accountReceiver
          utcDate: 0
          amountTot: amountTot
          parentId: parentId
          lastNamePayer: lastNamePayer
          errorUrl: errorUrl
          cancelUrl: cancelUrl
          parentComment: parentComment
          accountPayer: accountPayer
          comment: comment
          id: id
          returnUrl: returnUrl
          optId: optId
          status: status
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        form:
          $ref: '#/components/schemas/PaymentFormDetails'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    PaymentFormDetails:
      example:
        emailPayer: emailPayer
        created: 6
        firstNamePayer: firstNamePayer
        accountReceiver: accountReceiver
        utcDate: 0
        amountTot: amountTot
        parentId: parentId
        lastNamePayer: lastNamePayer
        errorUrl: errorUrl
        cancelUrl: cancelUrl
        parentComment: parentComment
        accountPayer: accountPayer
        comment: comment
        id: id
        returnUrl: returnUrl
        optId: optId
        status: status
      properties:
        parentId:
          type: string
        parentComment:
          type: string
        amountTot:
          type: string
        status:
          type: string
        utcDate:
          description: UTC Unix Timestamp
          format: int32
          type: integer
        created:
          description: UTC Unix Timestamp
          format: int32
          type: integer
        id:
          description: Payment Form ID
          type: string
        optId:
          description: Optional identity of the payment form. You should not use special
            character here.
          type: string
        accountPayer:
          description: "Payer Account\r\nIf this field is filled then the money reaches\
            \ this wallet before arriving at the beneficiary wallet (via a transfer\
            \ wallet to wallet)\r\nnote: Don't put the <b>SC Wallet</b> here, it won't\
            \ work. You cannot credit the <b>SC Wallet</b> with a credit card."
          type: string
        accountReceiver:
          description: "Beneficiary Account\r\nif this field is not filled then the\
            \ end-user must to fill its value on the payment form. We recommend you\
            \ to always fill it instead of your end-user.\r\nnote: Don't put the <b>SC\
            \ Wallet</b> here, it won't work. You cannot credit the <b>SC Wallet</b>\
            \ with a credit card."
          type: string
        comment:
          type: string
        returnUrl:
          description: URL redirection after the payment procedure is successfully
            finished
          type: string
        cancelUrl:
          description: URL redirection after the payment procedure is cancelled
          type: string
        errorUrl:
          description: URL redirection after the payment procedure is failed
          type: string
        firstNamePayer:
          description: "Payer's First Name\r\nIf this field is not filled then the\
            \ end-user have to fill it in the payment form."
          type: string
        lastNamePayer:
          description: "Payer's Last Name\r\nIf this field is not filled then the\
            \ end-user have to fill it in the payment form."
          type: string
        emailPayer:
          description: "Payer's Email\r\nIf this field is not filled then the end-user\
            \ have to fill it in the payment form."
          type: string
      type: object
    GetCompletedPaymentFormInput:
      type: object
    MandateGetDocumentOutput:
      description: Output of the MandateGetDocument method
      example:
        document: document
        name: name
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        document:
          description: Document in base64
          type: string
        name:
          description: Document name
          type: string
        error:
          $ref: '#/components/schemas/Error'
      type: object
    GetMoneyInBanksInput:
      properties:
        countryCodes:
          description: "Comma separated string of ISO Alpha-2 country codes.\r\nAvailable\
            \ country codes include:  \r\n- France (FR)   \r\n- Spain (ES)   \r\n\
            - Italy (IT)   \r\n- Germany (DE)   \r\n- Portugal (PT)"
          type: string
      type: object
    GetMoneyInBanksOutput:
      example:
        banks:
          key:
          - parentName: parentName
            bankId: bankId
            countryCode: countryCode
            bankName: bankName
            logoURL: logoURL
            segments:
            - segments
            - segments
          - parentName: parentName
            bankId: bankId
            countryCode: countryCode
            bankName: bankName
            logoURL: logoURL
            segments:
            - segments
            - segments
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        banks:
          additionalProperties:
            items:
              $ref: '#/components/schemas/Bank'
            type: array
          type: object
        error:
          $ref: '#/components/schemas/Error'
      type: object
    Bank:
      example:
        parentName: parentName
        bankId: bankId
        countryCode: countryCode
        bankName: bankName
        logoURL: logoURL
        segments:
        - segments
        - segments
      properties:
        countryCode:
          description: "Country code associated with the payment bank. ISO Alpha-2\
            \ codes accepted: (FR) France, (ES), Spain (DE), (IT) Italy, Germany,\
            \ and (PT) Portugal"
          type: string
        parentName:
          description: "The bank's parent company name. Example: Banque Populaire"
          type: string
        logoURL:
          description: A weblink to the bank's logo
          type: string
        bankName:
          description: "This is the bank name. Example: Banque Populaire Alsace Lorraine"
          type: string
        bankId:
          description: This is the unique `bankId` associated with the bank.
          type: string
        segments:
          description: Personal or Business Acoount
          items:
            type: string
          type: array
      type: object
    GetMoneyInIBANDetailsInput:
      properties:
        updateDate:
          description: UTC Unix Timestamp
          pattern: "^-?\\d{1,12}$"
          type: string
        updateEndDate:
          description: End Date tUTC Unix Timestamp
          pattern: "^-?\\d{1,12}$"
          type: string
      required:
      - updateDate
      - updateEndDate
      type: object
    GetMoneyInIBANDetailsOutput:
      example:
        _links:
          next:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          last:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          previous:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          self:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          first:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
        transactions:
          value:
          - ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
            date: 2
            executionDate: 3
            scheduledDate: scheduledDate
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            maskedLabel: maskedLabel
            reference: reference
            remainingAmount: 2
            bankReference: bankReference
            buyNowPayLaterInfo:
              type: type
              paymentPlanId: 5
              deferredPaymentDate: deferredPaymentDate
              secondInstallmentPaymentDate: secondInstallmentPaymentDate
            id: 1
            receiverAccountId: receiverAccountId
            refundAmount: 6.027456183070403
            method: 5
            substatus: substatus
            methodDetails: 5
            PSP:
              message: message
            threeDS:
              threeDSResult: threeDSResult
              threeDSModeRequested: threeDSModeRequested
            ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
            ChequeSendingAddress_Street: ChequeSendingAddress_Street
            ChequeSendingAddress_City: ChequeSendingAddress_City
            bankStatus: bankStatus
            scheduledNumber: scheduledNumber
            comment: comment
            creditAmount: 0
            card:
              country: country
              maskedNumber: maskedNumber
              holderName: holderName
              authorizationNumber: authorizationNumber
              is3DS: true
              expiration: expiration
              isRegistered: true
              id: 6
              type: type
            commissionAmount: 7
            status: 9
          - ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
            date: 2
            executionDate: 3
            scheduledDate: scheduledDate
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            maskedLabel: maskedLabel
            reference: reference
            remainingAmount: 2
            bankReference: bankReference
            buyNowPayLaterInfo:
              type: type
              paymentPlanId: 5
              deferredPaymentDate: deferredPaymentDate
              secondInstallmentPaymentDate: secondInstallmentPaymentDate
            id: 1
            receiverAccountId: receiverAccountId
            refundAmount: 6.027456183070403
            method: 5
            substatus: substatus
            methodDetails: 5
            PSP:
              message: message
            threeDS:
              threeDSResult: threeDSResult
              threeDSModeRequested: threeDSModeRequested
            ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
            ChequeSendingAddress_Street: ChequeSendingAddress_Street
            ChequeSendingAddress_City: ChequeSendingAddress_City
            bankStatus: bankStatus
            scheduledNumber: scheduledNumber
            comment: comment
            creditAmount: 0
            card:
              country: country
              maskedNumber: maskedNumber
              holderName: holderName
              authorizationNumber: authorizationNumber
              is3DS: true
              expiration: expiration
              isRegistered: true
              id: 6
              type: type
            commissionAmount: 7
            status: 9
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        transactions:
          $ref: '#/components/schemas/Transactions_TransactionIn'
        _links:
          $ref: '#/components/schemas/Links'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    Transactions_TransactionIn:
      example:
        value:
        - ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
          date: 2
          executionDate: 3
          scheduledDate: scheduledDate
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          maskedLabel: maskedLabel
          reference: reference
          remainingAmount: 2
          bankReference: bankReference
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          id: 1
          receiverAccountId: receiverAccountId
          refundAmount: 6.027456183070403
          method: 5
          substatus: substatus
          methodDetails: 5
          PSP:
            message: message
          threeDS:
            threeDSResult: threeDSResult
            threeDSModeRequested: threeDSModeRequested
          ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
          ChequeSendingAddress_Street: ChequeSendingAddress_Street
          ChequeSendingAddress_City: ChequeSendingAddress_City
          bankStatus: bankStatus
          scheduledNumber: scheduledNumber
          comment: comment
          creditAmount: 0
          card:
            country: country
            maskedNumber: maskedNumber
            holderName: holderName
            authorizationNumber: authorizationNumber
            is3DS: true
            expiration: expiration
            isRegistered: true
            id: 6
            type: type
          commissionAmount: 7
          status: 9
        - ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
          date: 2
          executionDate: 3
          scheduledDate: scheduledDate
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          maskedLabel: maskedLabel
          reference: reference
          remainingAmount: 2
          bankReference: bankReference
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          id: 1
          receiverAccountId: receiverAccountId
          refundAmount: 6.027456183070403
          method: 5
          substatus: substatus
          methodDetails: 5
          PSP:
            message: message
          threeDS:
            threeDSResult: threeDSResult
            threeDSModeRequested: threeDSModeRequested
          ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
          ChequeSendingAddress_Street: ChequeSendingAddress_Street
          ChequeSendingAddress_City: ChequeSendingAddress_City
          bankStatus: bankStatus
          scheduledNumber: scheduledNumber
          comment: comment
          creditAmount: 0
          card:
            country: country
            maskedNumber: maskedNumber
            holderName: holderName
            authorizationNumber: authorizationNumber
            is3DS: true
            expiration: expiration
            isRegistered: true
            id: 6
            type: type
          commissionAmount: 7
          status: 9
      properties:
        value:
          items:
            $ref: '#/components/schemas/TransactionIn'
          type: array
      type: object
    TransactionIn:
      example:
        ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
        date: 2
        executionDate: 3
        scheduledDate: scheduledDate
        lemonWayCommission:
          amount: 7
          idp2p: idp2p
        maskedLabel: maskedLabel
        reference: reference
        remainingAmount: 2
        bankReference: bankReference
        buyNowPayLaterInfo:
          type: type
          paymentPlanId: 5
          deferredPaymentDate: deferredPaymentDate
          secondInstallmentPaymentDate: secondInstallmentPaymentDate
        id: 1
        receiverAccountId: receiverAccountId
        refundAmount: 6.027456183070403
        method: 5
        substatus: substatus
        methodDetails: 5
        PSP:
          message: message
        threeDS:
          threeDSResult: threeDSResult
          threeDSModeRequested: threeDSModeRequested
        ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
        ChequeSendingAddress_Street: ChequeSendingAddress_Street
        ChequeSendingAddress_City: ChequeSendingAddress_City
        bankStatus: bankStatus
        scheduledNumber: scheduledNumber
        comment: comment
        creditAmount: 0
        card:
          country: country
          maskedNumber: maskedNumber
          holderName: holderName
          authorizationNumber: authorizationNumber
          is3DS: true
          expiration: expiration
          isRegistered: true
          id: 6
          type: type
        commissionAmount: 7
        status: 9
      properties:
        receiverAccountId:
          description: Credited Account
          type: string
        creditAmount:
          description: "Credited Amount\r\nAmounts represented in integer (cents)"
          format: int32
          type: integer
        scheduledDate:
          description: ""
          type: string
        scheduledNumber:
          description: ""
          type: string
        maskedLabel:
          type: string
        PSP:
          $ref: '#/components/schemas/PSP'
        card:
          $ref: '#/components/schemas/Card'
        bankStatus:
          type: string
        refundAmount:
          format: double
          type: number
        bankReference:
          description: Bank reference
          type: string
        ChequeSendingAddress_CorporateName:
          description: A specified postal address for the cheque
          type: string
        ChequeSendingAddress_Street:
          description: Cheque sending address street name
          type: string
        ChequeSendingAddress_City:
          description: Cheque sending address city name
          type: string
        ChequeSendingAddress_PostCode:
          description: Cheque sending address post code
          type: string
        threeDS:
          $ref: '#/components/schemas/ThreeDs'
        buyNowPayLaterInfo:
          $ref: '#/components/schemas/BnplInfo'
        id:
          description: Transaction ID
          format: int64
          type: integer
        method:
          description: "Payment Method  \r\n0 Card    \r\n1 Bank transfer (MoneyIn)\
            \     \r\n3 Bank transfer (MoneyOut)     \r\n4 P2P    \r\n13 iDEAL   \
            \ \r\n14 SEPA DirectDebit    \r\n15 Cheque    \r\n19 Multibanco    \r\n\
            21 MBWAY    \r\n30 BNPL  \r\n35 PayPal\r\n\r\n ---\r\n **Important:**\
            \ The following services have been discontinued. \r\n \r\n16 Neosurf \
            \ \r\n17 Sofort  \r\n18 PFS Physical Card  \r\n20 Payshop  \r\n22 Polish\
            \ Instant Transfer  \r\n23 Pagare  \r\n24 MobilePay\r\n25 Paytrail\r\n\
            26 WeChat  \r\n27 P24  \r\n28 MoneyIn by TPE  \r\n29 Trustly"
          format: int32
          type: integer
        methodDetails:
          description: "Payment Method Details\r\n0 Standard\r\n1 Pay By Bank<br/>0\
            \ = STANDARD.<br/>1 = PAY_BY_BANK.<br/>"
          enum:
          - 0
          - 1
          format: int32
          type: integer
        date:
          description: "Transaction initialization date, UTC Unix timestamp"
          format: int32
          type: integer
        commissionAmount:
          description: "Your fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment
          type: string
        status:
          description: "**Money-In**   \r\n  \r\n0: Success  \r\n3: Lemonway Error\
            \  \r\n4: Pending  \r\n6: PSP error  \r\n7: Cancelled  \r\n16: Validation\
            \ pending  \r\n\r\n**Money-Out**  \r\n\r\n**Important:**  For /v2/moneyins/{transactionid}/validate`\
            \ use the status codes:  \r\n\r\n0: Waiting for finalization    \r\n3:\
            \ Success    \r\n4: Lemonway Error    \r\n            \r\n**P2P**\r\n\r\
            \n0: Pending  \r\n3: Success"
          format: int32
          type: integer
        executionDate:
          description: Transaction execution date
          format: int32
          type: integer
        lemonWayCommission:
          $ref: '#/components/schemas/LemonWayCommission'
        reference:
          description: Unique ID generated by your server
          type: string
        remainingAmount:
          format: int32
          type: integer
        substatus:
          description: Is Payment token consumed?
          type: string
      type: object
    GetMoneyInSddInput:
      properties:
        reference:
          description: Unique ID Generated by your Server
          maxLength: 50
          minLength: 0
          type: string
        updateDate:
          description: UTC Unix Timestamp
          pattern: "^-?\\d{1,12}$"
          type: string
        UpdateEndDate:
          description: End Date UTC Unix Timestamp
          pattern: "^-?\\d{1,12}$"
          type: string
      type: object
    GetMoneyInSddOutput:
      example:
        _links:
          next:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          last:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          previous:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          self:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          first:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
        transactions:
          value:
          - ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
            date: 2
            executionDate: 3
            scheduledDate: scheduledDate
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            maskedLabel: maskedLabel
            reference: reference
            remainingAmount: 2
            bankReference: bankReference
            buyNowPayLaterInfo:
              type: type
              paymentPlanId: 5
              deferredPaymentDate: deferredPaymentDate
              secondInstallmentPaymentDate: secondInstallmentPaymentDate
            id: 1
            receiverAccountId: receiverAccountId
            refundAmount: 6.027456183070403
            method: 5
            substatus: substatus
            methodDetails: 5
            PSP:
              message: message
            threeDS:
              threeDSResult: threeDSResult
              threeDSModeRequested: threeDSModeRequested
            ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
            ChequeSendingAddress_Street: ChequeSendingAddress_Street
            ChequeSendingAddress_City: ChequeSendingAddress_City
            bankStatus: bankStatus
            scheduledNumber: scheduledNumber
            comment: comment
            creditAmount: 0
            card:
              country: country
              maskedNumber: maskedNumber
              holderName: holderName
              authorizationNumber: authorizationNumber
              is3DS: true
              expiration: expiration
              isRegistered: true
              id: 6
              type: type
            commissionAmount: 7
            status: 9
          - ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
            date: 2
            executionDate: 3
            scheduledDate: scheduledDate
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            maskedLabel: maskedLabel
            reference: reference
            remainingAmount: 2
            bankReference: bankReference
            buyNowPayLaterInfo:
              type: type
              paymentPlanId: 5
              deferredPaymentDate: deferredPaymentDate
              secondInstallmentPaymentDate: secondInstallmentPaymentDate
            id: 1
            receiverAccountId: receiverAccountId
            refundAmount: 6.027456183070403
            method: 5
            substatus: substatus
            methodDetails: 5
            PSP:
              message: message
            threeDS:
              threeDSResult: threeDSResult
              threeDSModeRequested: threeDSModeRequested
            ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
            ChequeSendingAddress_Street: ChequeSendingAddress_Street
            ChequeSendingAddress_City: ChequeSendingAddress_City
            bankStatus: bankStatus
            scheduledNumber: scheduledNumber
            comment: comment
            creditAmount: 0
            card:
              country: country
              maskedNumber: maskedNumber
              holderName: holderName
              authorizationNumber: authorizationNumber
              is3DS: true
              expiration: expiration
              isRegistered: true
              id: 6
              type: type
            commissionAmount: 7
            status: 9
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        transactions:
          $ref: '#/components/schemas/Transactions_TransactionIn'
        _links:
          $ref: '#/components/schemas/Links'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    GetMoneyInChequeDetailsInput:
      properties:
        updateDate:
          pattern: "^-?\\d{1,12}$"
          type: string
        updateEndDate:
          description: End Date UTC Unix Timestamp
          pattern: "^-?\\d{1,12}$"
          type: string
        chequeType:
          description: Cheque Payment (by default) or Pagaré:<br/>15 = Cheque payment.<br/>23
            = Pagaré.<br/>
          enum:
          - 15
          - 23
          format: int32
          type: integer
        reference:
          description: Unique ID generated by your server
          maxLength: 50
          minLength: 0
          type: string
      type: object
    GetMoneyInChequeDetailsOutput:
      example:
        _links:
          next:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          last:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          previous:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          self:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          first:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
        transactions:
          value:
          - ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
            date: 2
            executionDate: 3
            scheduledDate: scheduledDate
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            maskedLabel: maskedLabel
            reference: reference
            remainingAmount: 2
            bankReference: bankReference
            buyNowPayLaterInfo:
              type: type
              paymentPlanId: 5
              deferredPaymentDate: deferredPaymentDate
              secondInstallmentPaymentDate: secondInstallmentPaymentDate
            id: 1
            receiverAccountId: receiverAccountId
            refundAmount: 6.027456183070403
            method: 5
            substatus: substatus
            methodDetails: 5
            PSP:
              message: message
            threeDS:
              threeDSResult: threeDSResult
              threeDSModeRequested: threeDSModeRequested
            ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
            ChequeSendingAddress_Street: ChequeSendingAddress_Street
            ChequeSendingAddress_City: ChequeSendingAddress_City
            bankStatus: bankStatus
            scheduledNumber: scheduledNumber
            comment: comment
            creditAmount: 0
            card:
              country: country
              maskedNumber: maskedNumber
              holderName: holderName
              authorizationNumber: authorizationNumber
              is3DS: true
              expiration: expiration
              isRegistered: true
              id: 6
              type: type
            commissionAmount: 7
            status: 9
          - ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
            date: 2
            executionDate: 3
            scheduledDate: scheduledDate
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            maskedLabel: maskedLabel
            reference: reference
            remainingAmount: 2
            bankReference: bankReference
            buyNowPayLaterInfo:
              type: type
              paymentPlanId: 5
              deferredPaymentDate: deferredPaymentDate
              secondInstallmentPaymentDate: secondInstallmentPaymentDate
            id: 1
            receiverAccountId: receiverAccountId
            refundAmount: 6.027456183070403
            method: 5
            substatus: substatus
            methodDetails: 5
            PSP:
              message: message
            threeDS:
              threeDSResult: threeDSResult
              threeDSModeRequested: threeDSModeRequested
            ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
            ChequeSendingAddress_Street: ChequeSendingAddress_Street
            ChequeSendingAddress_City: ChequeSendingAddress_City
            bankStatus: bankStatus
            scheduledNumber: scheduledNumber
            comment: comment
            creditAmount: 0
            card:
              country: country
              maskedNumber: maskedNumber
              holderName: holderName
              authorizationNumber: authorizationNumber
              is3DS: true
              expiration: expiration
              isRegistered: true
              id: 6
              type: type
            commissionAmount: 7
            status: 9
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        transactions:
          $ref: '#/components/schemas/Transactions_TransactionIn'
        _links:
          $ref: '#/components/schemas/Links'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    GetMoneyInTransDetailsInput:
      properties:
        transactionId:
          description: Money-In ID
          format: int64
          type: integer
        transactionComment:
          description: Money-In Comment
          maxLength: 140
          minLength: 0
          type: string
        TransactionMerchantToken:
          description: Unique ID generated by your server. This ID can be used as
            a reference for a search field when looking for operation details.
          maxLength: 50
          minLength: 0
          type: string
        startDate:
          description: "UTC Unix timestamp, in order to return transactions initialized\
            \ after it"
          pattern: "^-?\\d{1,12}$"
          type: string
        endDate:
          description: "UTC Unix timestamp, in order to return transactions initialized\
            \ before it"
          pattern: "^-?\\d{1,12}$"
          type: string
      type: object
    GetMoneyInTransDetailsOutput:
      example:
        _links:
          next:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          last:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          previous:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          self:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          first:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
        transactions:
          value:
          - ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
            date: 9
            executionDate: 4
            scheduledDate: scheduledDate
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            maskedLabel: maskedLabel
            reference: reference
            authorization:
              remainingAmount: 6
              id: 1
              status: 1
            remainingAmount: 1
            bankReference: bankReference
            buyNowPayLaterInfo:
              type: type
              paymentPlanId: 5
              deferredPaymentDate: deferredPaymentDate
              secondInstallmentPaymentDate: secondInstallmentPaymentDate
            id: 5
            receiverAccountId: receiverAccountId
            refundAmount: 1.4658129805029452
            method: 2
            substatus: substatus
            childTransactions:
            - date: 1
              reference: reference
              amount: 5
              executionDate: 9
              comment: comment
              lemonWayCommission:
                amount: 7
                idp2p: idp2p
              id: 7
              PSP:
                message: message
              commissionAmount: 4
              refundAmount: 9.965781217890562
              status: 6
            - date: 1
              reference: reference
              amount: 5
              executionDate: 9
              comment: comment
              lemonWayCommission:
                amount: 7
                idp2p: idp2p
              id: 7
              PSP:
                message: message
              commissionAmount: 4
              refundAmount: 9.965781217890562
              status: 6
            methodDetails: 7
            PSP:
              message: message
            threeDS:
              threeDSResult: threeDSResult
              threeDSModeRequested: threeDSModeRequested
            ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
            ChequeSendingAddress_Street: ChequeSendingAddress_Street
            ChequeSendingAddress_City: ChequeSendingAddress_City
            bankStatus: bankStatus
            scheduledNumber: scheduledNumber
            comment: comment
            creditAmount: 0
            card:
              country: country
              maskedNumber: maskedNumber
              holderName: holderName
              authorizationNumber: authorizationNumber
              is3DS: true
              expiration: expiration
              isRegistered: true
              id: 6
              type: type
            commissionAmount: 3
            status: 2
          - ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
            date: 9
            executionDate: 4
            scheduledDate: scheduledDate
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            maskedLabel: maskedLabel
            reference: reference
            authorization:
              remainingAmount: 6
              id: 1
              status: 1
            remainingAmount: 1
            bankReference: bankReference
            buyNowPayLaterInfo:
              type: type
              paymentPlanId: 5
              deferredPaymentDate: deferredPaymentDate
              secondInstallmentPaymentDate: secondInstallmentPaymentDate
            id: 5
            receiverAccountId: receiverAccountId
            refundAmount: 1.4658129805029452
            method: 2
            substatus: substatus
            childTransactions:
            - date: 1
              reference: reference
              amount: 5
              executionDate: 9
              comment: comment
              lemonWayCommission:
                amount: 7
                idp2p: idp2p
              id: 7
              PSP:
                message: message
              commissionAmount: 4
              refundAmount: 9.965781217890562
              status: 6
            - date: 1
              reference: reference
              amount: 5
              executionDate: 9
              comment: comment
              lemonWayCommission:
                amount: 7
                idp2p: idp2p
              id: 7
              PSP:
                message: message
              commissionAmount: 4
              refundAmount: 9.965781217890562
              status: 6
            methodDetails: 7
            PSP:
              message: message
            threeDS:
              threeDSResult: threeDSResult
              threeDSModeRequested: threeDSModeRequested
            ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
            ChequeSendingAddress_Street: ChequeSendingAddress_Street
            ChequeSendingAddress_City: ChequeSendingAddress_City
            bankStatus: bankStatus
            scheduledNumber: scheduledNumber
            comment: comment
            creditAmount: 0
            card:
              country: country
              maskedNumber: maskedNumber
              holderName: holderName
              authorizationNumber: authorizationNumber
              is3DS: true
              expiration: expiration
              isRegistered: true
              id: 6
              type: type
            commissionAmount: 3
            status: 2
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        transactions:
          $ref: '#/components/schemas/Transactions_TransactionInDetails'
        _links:
          $ref: '#/components/schemas/Links'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    Transactions_TransactionInDetails:
      example:
        value:
        - ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
          date: 9
          executionDate: 4
          scheduledDate: scheduledDate
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          maskedLabel: maskedLabel
          reference: reference
          authorization:
            remainingAmount: 6
            id: 1
            status: 1
          remainingAmount: 1
          bankReference: bankReference
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          id: 5
          receiverAccountId: receiverAccountId
          refundAmount: 1.4658129805029452
          method: 2
          substatus: substatus
          childTransactions:
          - date: 1
            reference: reference
            amount: 5
            executionDate: 9
            comment: comment
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            id: 7
            PSP:
              message: message
            commissionAmount: 4
            refundAmount: 9.965781217890562
            status: 6
          - date: 1
            reference: reference
            amount: 5
            executionDate: 9
            comment: comment
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            id: 7
            PSP:
              message: message
            commissionAmount: 4
            refundAmount: 9.965781217890562
            status: 6
          methodDetails: 7
          PSP:
            message: message
          threeDS:
            threeDSResult: threeDSResult
            threeDSModeRequested: threeDSModeRequested
          ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
          ChequeSendingAddress_Street: ChequeSendingAddress_Street
          ChequeSendingAddress_City: ChequeSendingAddress_City
          bankStatus: bankStatus
          scheduledNumber: scheduledNumber
          comment: comment
          creditAmount: 0
          card:
            country: country
            maskedNumber: maskedNumber
            holderName: holderName
            authorizationNumber: authorizationNumber
            is3DS: true
            expiration: expiration
            isRegistered: true
            id: 6
            type: type
          commissionAmount: 3
          status: 2
        - ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
          date: 9
          executionDate: 4
          scheduledDate: scheduledDate
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          maskedLabel: maskedLabel
          reference: reference
          authorization:
            remainingAmount: 6
            id: 1
            status: 1
          remainingAmount: 1
          bankReference: bankReference
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          id: 5
          receiverAccountId: receiverAccountId
          refundAmount: 1.4658129805029452
          method: 2
          substatus: substatus
          childTransactions:
          - date: 1
            reference: reference
            amount: 5
            executionDate: 9
            comment: comment
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            id: 7
            PSP:
              message: message
            commissionAmount: 4
            refundAmount: 9.965781217890562
            status: 6
          - date: 1
            reference: reference
            amount: 5
            executionDate: 9
            comment: comment
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            id: 7
            PSP:
              message: message
            commissionAmount: 4
            refundAmount: 9.965781217890562
            status: 6
          methodDetails: 7
          PSP:
            message: message
          threeDS:
            threeDSResult: threeDSResult
            threeDSModeRequested: threeDSModeRequested
          ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
          ChequeSendingAddress_Street: ChequeSendingAddress_Street
          ChequeSendingAddress_City: ChequeSendingAddress_City
          bankStatus: bankStatus
          scheduledNumber: scheduledNumber
          comment: comment
          creditAmount: 0
          card:
            country: country
            maskedNumber: maskedNumber
            holderName: holderName
            authorizationNumber: authorizationNumber
            is3DS: true
            expiration: expiration
            isRegistered: true
            id: 6
            type: type
          commissionAmount: 3
          status: 2
      properties:
        value:
          items:
            $ref: '#/components/schemas/TransactionInDetails'
          type: array
      type: object
    CancelMoneyInInput:
      example:
        account: Pizza75
      properties:
        account:
          description: Payment Account ID
          maxLength: 256
          minLength: 0
          type: string
      required:
      - account
      type: object
    CancelMoneyInOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        transaction:
          ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
          date: 2
          executionDate: 3
          scheduledDate: scheduledDate
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          maskedLabel: maskedLabel
          reference: reference
          remainingAmount: 2
          bankReference: bankReference
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          id: 1
          receiverAccountId: receiverAccountId
          refundAmount: 6.027456183070403
          method: 5
          substatus: substatus
          methodDetails: 5
          PSP:
            message: message
          threeDS:
            threeDSResult: threeDSResult
            threeDSModeRequested: threeDSModeRequested
          ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
          ChequeSendingAddress_Street: ChequeSendingAddress_Street
          ChequeSendingAddress_City: ChequeSendingAddress_City
          bankStatus: bankStatus
          scheduledNumber: scheduledNumber
          comment: comment
          creditAmount: 0
          card:
            country: country
            maskedNumber: maskedNumber
            holderName: holderName
            authorizationNumber: authorizationNumber
            is3DS: true
            expiration: expiration
            isRegistered: true
            id: 6
            type: type
          commissionAmount: 7
          status: 9
      properties:
        transaction:
          $ref: '#/components/schemas/TransactionIn'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    UnregisterCardInput:
      example:
        wallet: "33612345678"
      properties:
        wallet:
          description: Payment Account ID
          maxLength: 256
          minLength: 0
          type: string
      required:
      - wallet
      type: object
    UnregisterCardOutput:
      example:
        cardId: 0
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        cardId:
          description: ID Card
          format: int64
          type: integer
        error:
          $ref: '#/components/schemas/Error'
      type: object
    MoneyInValidateInput:
      example:
        totalAmount: 1500
        commissionAmount: 200
      properties:
        totalAmount:
          description: "Amount to Debit\r\nAmounts are displayed as an integer in\
            \ cents (Euro)"
          format: int32
          type: integer
        commissionAmount:
          description: "Your fee\r\nAmounts are displayed as an integer in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        reference:
          description: "Unique ID of the call, generated by your server. This ID can\
            \ be used as a search field when looking for operation details"
          maxLength: 50
          minLength: 0
          type: string
        specialConfig:
          description: Leave empty
          type: string
      required:
      - totalAmount
      type: object
    MoneyInValidateOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        transaction:
          ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
          date: 2
          executionDate: 3
          scheduledDate: scheduledDate
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          maskedLabel: maskedLabel
          reference: reference
          authorization:
            remainingAmount: 6
            id: 1
            status: 1
          remainingAmount: 2
          bankReference: bankReference
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          id: 1
          receiverAccountId: receiverAccountId
          refundAmount: 6.027456183070403
          method: 5
          substatus: substatus
          methodDetails: 5
          PSP:
            message: message
          threeDS:
            threeDSResult: threeDSResult
            threeDSModeRequested: threeDSModeRequested
          ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
          ChequeSendingAddress_Street: ChequeSendingAddress_Street
          ChequeSendingAddress_City: ChequeSendingAddress_City
          bankStatus: bankStatus
          scheduledNumber: scheduledNumber
          comment: comment
          creditAmount: 0
          card:
            country: country
            maskedNumber: maskedNumber
            holderName: holderName
            authorizationNumber: authorizationNumber
            is3DS: true
            expiration: expiration
            isRegistered: true
            id: 6
            type: type
          commissionAmount: 7
          status: 9
      properties:
        transaction:
          $ref: '#/components/schemas/TransactionCaptured'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    TransactionCaptured:
      example:
        ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
        date: 2
        executionDate: 3
        scheduledDate: scheduledDate
        lemonWayCommission:
          amount: 7
          idp2p: idp2p
        maskedLabel: maskedLabel
        reference: reference
        authorization:
          remainingAmount: 6
          id: 1
          status: 1
        remainingAmount: 2
        bankReference: bankReference
        buyNowPayLaterInfo:
          type: type
          paymentPlanId: 5
          deferredPaymentDate: deferredPaymentDate
          secondInstallmentPaymentDate: secondInstallmentPaymentDate
        id: 1
        receiverAccountId: receiverAccountId
        refundAmount: 6.027456183070403
        method: 5
        substatus: substatus
        methodDetails: 5
        PSP:
          message: message
        threeDS:
          threeDSResult: threeDSResult
          threeDSModeRequested: threeDSModeRequested
        ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
        ChequeSendingAddress_Street: ChequeSendingAddress_Street
        ChequeSendingAddress_City: ChequeSendingAddress_City
        bankStatus: bankStatus
        scheduledNumber: scheduledNumber
        comment: comment
        creditAmount: 0
        card:
          country: country
          maskedNumber: maskedNumber
          holderName: holderName
          authorizationNumber: authorizationNumber
          is3DS: true
          expiration: expiration
          isRegistered: true
          id: 6
          type: type
        commissionAmount: 7
        status: 9
      properties:
        receiverAccountId:
          description: Credited Account
          type: string
        creditAmount:
          description: "Credited Amount\r\nAmounts represented in integer (cents)"
          format: int32
          type: integer
        scheduledDate:
          description: ""
          type: string
        scheduledNumber:
          description: ""
          type: string
        maskedLabel:
          type: string
        PSP:
          $ref: '#/components/schemas/PSP'
        card:
          $ref: '#/components/schemas/Card'
        bankStatus:
          type: string
        refundAmount:
          format: double
          type: number
        bankReference:
          description: Bank reference
          type: string
        ChequeSendingAddress_CorporateName:
          description: A specified postal address for the cheque
          type: string
        ChequeSendingAddress_Street:
          description: Cheque sending address street name
          type: string
        ChequeSendingAddress_City:
          description: Cheque sending address city name
          type: string
        ChequeSendingAddress_PostCode:
          description: Cheque sending address post code
          type: string
        threeDS:
          $ref: '#/components/schemas/ThreeDs'
        buyNowPayLaterInfo:
          $ref: '#/components/schemas/BnplInfo'
        id:
          description: Transaction ID
          format: int64
          type: integer
        method:
          description: "Payment Method  \r\n0 Card    \r\n1 Bank transfer (MoneyIn)\
            \     \r\n3 Bank transfer (MoneyOut)     \r\n4 P2P    \r\n13 iDEAL   \
            \ \r\n14 SEPA DirectDebit    \r\n15 Cheque    \r\n19 Multibanco    \r\n\
            21 MBWAY    \r\n30 BNPL  \r\n35 PayPal\r\n\r\n ---\r\n **Important:**\
            \ The following services have been discontinued. \r\n \r\n16 Neosurf \
            \ \r\n17 Sofort  \r\n18 PFS Physical Card  \r\n20 Payshop  \r\n22 Polish\
            \ Instant Transfer  \r\n23 Pagare  \r\n24 MobilePay\r\n25 Paytrail\r\n\
            26 WeChat  \r\n27 P24  \r\n28 MoneyIn by TPE  \r\n29 Trustly"
          format: int32
          type: integer
        methodDetails:
          description: "Payment Method Details\r\n0 Standard\r\n1 Pay By Bank<br/>0\
            \ = STANDARD.<br/>1 = PAY_BY_BANK.<br/>"
          enum:
          - 0
          - 1
          format: int32
          type: integer
        date:
          description: "Transaction initialization date, UTC Unix timestamp"
          format: int32
          type: integer
        commissionAmount:
          description: "Your fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment
          type: string
        status:
          description: "**Money-In**   \r\n  \r\n0: Success  \r\n3: Lemonway Error\
            \  \r\n4: Pending  \r\n6: PSP error  \r\n7: Cancelled  \r\n16: Validation\
            \ pending  \r\n\r\n**Money-Out**  \r\n\r\n**Important:**  For /v2/moneyins/{transactionid}/validate`\
            \ use the status codes:  \r\n\r\n0: Waiting for finalization    \r\n3:\
            \ Success    \r\n4: Lemonway Error    \r\n            \r\n**P2P**\r\n\r\
            \n0: Pending  \r\n3: Success"
          format: int32
          type: integer
        executionDate:
          description: Transaction execution date
          format: int32
          type: integer
        lemonWayCommission:
          $ref: '#/components/schemas/LemonWayCommission'
        reference:
          description: Unique ID generated by your server
          type: string
        remainingAmount:
          format: int32
          type: integer
        substatus:
          description: Is Payment token consumed?
          type: string
        authorization:
          $ref: '#/components/schemas/TransactionCapturedAuthorization'
      type: object
    DisablePaymentFormOutput:
      example:
        message: message
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        message:
          type: string
        error:
          $ref: '#/components/schemas/Error'
      type: object
    DisablePaymentFormInput:
      type: object
    MoneyInIDealConfirmOutput:
      example:
        transactions:
          ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
          date: 2
          executionDate: 3
          scheduledDate: scheduledDate
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          maskedLabel: maskedLabel
          reference: reference
          remainingAmount: 2
          bankReference: bankReference
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          id: 1
          receiverAccountId: receiverAccountId
          refundAmount: 6.027456183070403
          method: 5
          substatus: substatus
          methodDetails: 5
          PSP:
            message: message
          threeDS:
            threeDSResult: threeDSResult
            threeDSModeRequested: threeDSModeRequested
          ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
          ChequeSendingAddress_Street: ChequeSendingAddress_Street
          ChequeSendingAddress_City: ChequeSendingAddress_City
          bankStatus: bankStatus
          scheduledNumber: scheduledNumber
          comment: comment
          creditAmount: 0
          card:
            country: country
            maskedNumber: maskedNumber
            holderName: holderName
            authorizationNumber: authorizationNumber
            is3DS: true
            expiration: expiration
            isRegistered: true
            id: 6
            type: type
          commissionAmount: 7
          status: 9
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        transactions:
          $ref: '#/components/schemas/TransactionIn'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    MoneyInIDealConfirmInput:
      type: object
    UnregisterSddMandateInput:
      example:
        account: "33612345678"
      properties:
        account:
          description: Payment Account ID
          maxLength: 256
          minLength: 0
          type: string
      required:
      - account
      type: object
    UnregisterSddMandateOutput:
      example:
        SDDMandate:
          IBAN: IBAN
          UniqueMandateReference: UniqueMandateReference
          holder: holder
          id: 5
          BIC: BIC
          status: 2
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        SDDMandate:
          $ref: '#/components/schemas/SddMandate'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    MoneyIn3DConfirmInput:
      example:
        card:
          cardType: 1
          cardNumber: "4716202982346875"
          cardCode: "123"
          cardDate: 07/2027
        md: 1Ok9dCP55UUkWfdJwEid
        pares: eJxVkdtSwjAQhl+lwwM0SY+EWTKDgsKMICIgXGbaV
      properties:
        isPreAuth:
          description: "**Mercanet only**\r\nIndicates if the request is delayed and\
            \ will require validation.\r\n1. If true, payment will only be pre-authorized,\
            \ you will have to call the `MoneyInValidate` method within 6 days or\
            \ [delayedDays] in order to request the debit card.\r\n2. If empty, the\
            \ default behavior is no delay and no validation is necessary (unless\
            \ stated otherwise in your contract).\r\n3. If false, the card will be\
            \ debited without delay and without validation necessary."
          type: boolean
        delayedDays:
          description: "**Mercanet only**\r\nIf `isPreAuth` is not true, this will\
            \ be ignored. \r\nPlease use with caution, if delayedDays &gt; 6, it is\
            \ possible that the payment will be denied when you try to validate it,\
            \ because a new authorization will be made."
          format: int32
          type: integer
        card:
          $ref: '#/components/schemas/CardInfo'
        md:
          description: MD Data Returned by 3-D Secure Site
          type: string
        pares:
          description: Pares Data Returned by 3-D Secure Authentication Website
          type: string
        specialConfig:
          description: Leave Empty
          type: string
      type: object
    CardInfo:
      properties:
        cardType:
          description: Card Type<br/>0 = CB.<br/>1 = Visa.<br/>2 = Mastercard.<br/>
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        cardNumber:
          description: Card Number
          maxLength: 19
          minLength: 13
          type: string
        cardCode:
          description: CVV Code
          maxLength: 3
          minLength: 3
          type: string
        cardDate:
          description: Card Expiration Date
          pattern: "^(0[1-9]|1[0-2])\\/([12]\\d{3})$"
          type: string
      required:
      - cardCode
      - cardDate
      - cardNumber
      - cardType
      type: object
    MoneyIn3DConfirmOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        transaction:
          ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
          date: 2
          executionDate: 3
          scheduledDate: scheduledDate
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          maskedLabel: maskedLabel
          reference: reference
          remainingAmount: 2
          bankReference: bankReference
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          id: 1
          receiverAccountId: receiverAccountId
          refundAmount: 6.027456183070403
          method: 5
          substatus: substatus
          methodDetails: 5
          PSP:
            message: message
          threeDS:
            threeDSResult: threeDSResult
            threeDSModeRequested: threeDSModeRequested
          ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
          ChequeSendingAddress_Street: ChequeSendingAddress_Street
          ChequeSendingAddress_City: ChequeSendingAddress_City
          bankStatus: bankStatus
          scheduledNumber: scheduledNumber
          comment: comment
          creditAmount: 0
          card:
            country: country
            maskedNumber: maskedNumber
            holderName: holderName
            authorizationNumber: authorizationNumber
            is3DS: true
            expiration: expiration
            isRegistered: true
            id: 6
            type: type
          commissionAmount: 7
          status: 9
      properties:
        transaction:
          $ref: '#/components/schemas/TransactionIn'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    MoneyInSddInitInput:
      example:
        sddMandateId: 356
        collectionDate: 2025/07/07
        reference: Dze8778
        accountId: "33612345678"
        totalAmount: 1500
        commissionAmount: 100
        comment: Order number 2457765AX2
        autoCommission: false
      properties:
        sddMandateId:
          description: Mandate ID
          format: int64
          type: integer
        collectionDate:
          description: "Debit date of the bank account, must be later than the default\
            \ date.\r\nLeave empty in order to use the default date: current date\
            \ + 1 working days before 10:30 AM or current date + 2 working days after."
          pattern: "^[12]\\d{3}\\/(0[1-9]|1[0-2])\\/(0[1-9]|[12]\\d|3[01])$"
          type: string
        reference:
          description: "Unique ID of the call, generated by your server. This ID can\
            \ be used as a search field when looking for operation details"
          maxLength: 50
          minLength: 0
          type: string
        accountId:
          description: Payment Account ID to Credit
          maxLength: 256
          minLength: 0
          type: string
        totalAmount:
          description: "Amount to Debit\r\nAmounts are given as integer numbers in\
            \ cents"
          format: int32
          type: integer
        commissionAmount:
          description: "Your Fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        autoCommission:
          description: "If true:\r\n1. [amountCom] will be ignored and will be replaced\
            \ with Lemonway's fee  \r\n2. You will not receive any fee"
          type: boolean
      required:
      - accountId
      - sddMandateId
      type: object
    MoneyInSddInitOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        transaction:
          ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
          date: 2
          executionDate: 3
          scheduledDate: scheduledDate
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          maskedLabel: maskedLabel
          reference: reference
          remainingAmount: 2
          bankReference: bankReference
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          id: 1
          receiverAccountId: receiverAccountId
          refundAmount: 6.027456183070403
          method: 5
          substatus: substatus
          methodDetails: 5
          PSP:
            message: message
          threeDS:
            threeDSResult: threeDSResult
            threeDSModeRequested: threeDSModeRequested
          ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
          ChequeSendingAddress_Street: ChequeSendingAddress_Street
          ChequeSendingAddress_City: ChequeSendingAddress_City
          bankStatus: bankStatus
          scheduledNumber: scheduledNumber
          comment: comment
          creditAmount: 0
          card:
            country: country
            maskedNumber: maskedNumber
            holderName: holderName
            authorizationNumber: authorizationNumber
            is3DS: true
            expiration: expiration
            isRegistered: true
            id: 6
            type: type
          commissionAmount: 7
          status: 9
      properties:
        transaction:
          $ref: '#/components/schemas/TransactionIn'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    MoneyInIDealInitInput:
      example:
        returnUrl: https://www.yoursite.com/payment_return.php/?id=367GBD
        issuerId: "161"
        reference: Dze8778
        accountId: "33612345678"
        totalAmount: 1500
        commissionAmount: 100
        comment: Order number 2457765AX2
        autoCommission: false
      properties:
        returnUrl:
          description: "Your sites return URL, called to terminate the operation and\
            \ on which the callback will be sent, with data in POST parameters.\r\n\
            This URL must contain a unique ID so you know which operation is related\
            \ to the return."
          type: string
        issuerId:
          description: "ID of iDEAL Issuer Resource:\r\n1. 21 for Rabobank\r\n2. 31\
            \ for ABN Amro\r\n3. 721 for ING\r\n4. 751 for SNS Bank\r\n5. 161 for\
            \ Van Lanschot Bankiers\r\n6. 511 for Triodos Bank\r\n7. 761 for ASN Bank\r\
            \n8. 771 for RegioBank\r\n9. 801 for Knab Bank\r\n10. BUNQNL2A pour Bunk\
            \ Bank"
          maxLength: 10
          minLength: 0
          type: string
        reference:
          description: "Unique ID of the call, generated by your server. This ID can\
            \ be used as a search field when looking for operation details"
          maxLength: 50
          minLength: 0
          type: string
        accountId:
          description: Payment Account ID to Credit
          maxLength: 256
          minLength: 0
          type: string
        totalAmount:
          description: "Amount to Debit\r\nAmounts are given as integer numbers in\
            \ cents"
          format: int32
          type: integer
        commissionAmount:
          description: "Your Fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        autoCommission:
          description: "If true:\r\n1. [amountCom] will be ignored and will be replaced\
            \ with Lemonway's fee  \r\n2. You will not receive any fee"
          type: boolean
      required:
      - accountId
      - issuerId
      - returnUrl
      type: object
    MoneyInIDealInitOutput:
      example:
        actionUrl: actionUrl
        id: 0
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        id:
          description: Transaction ID. You will this this value to confirm the transaction
          format: int64
          type: integer
        actionUrl:
          description: Redirected URL for the client on the iDeal page payment
          type: string
        error:
          $ref: '#/components/schemas/Error'
      type: object
    MoneyInMbwayInitInput:
      example:
        phone: "513212744"
        returnUrl: https://www.yoursite.com/payment_return.php/?id=367GBD
        reference: Dze8778
        accountId: "33612345678"
        totalAmount: 1500
        commissionAmount: 100
        comment: Order number 2457765AX2
        autoCommission: false
      properties:
        phone:
          description: "Phone\r\nFinal Client Phone Numbers"
          type: string
        returnUrl:
          description: "Your site returns the URL, called to terminate the operation\
            \ and on which the callback will be sent, with data in POST parameters.\r\
            \nThis URL must contain a unique ID so you know which operation is related\
            \ to the return."
          type: string
        reference:
          description: "Unique ID of the call, generated by your server. This ID can\
            \ be used as a search field when looking for operation details"
          maxLength: 50
          minLength: 0
          type: string
        accountId:
          description: Payment Account ID to Credit
          maxLength: 256
          minLength: 0
          type: string
        totalAmount:
          description: "Amount to Debit\r\nAmounts are given as integer numbers in\
            \ cents"
          format: int32
          type: integer
        commissionAmount:
          description: "Your Fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        autoCommission:
          description: "If true:\r\n1. [amountCom] will be ignored and will be replaced\
            \ with Lemonway's fee  \r\n2. You will not receive any fee"
          type: boolean
      required:
      - accountId
      - phone
      - returnUrl
      type: object
    MoneyInMbwayInitOutput:
      example:
        euPagoInit:
          reference: reference
          id: 0
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        euPagoInit:
          $ref: '#/components/schemas/EuPagoInit'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    EuPagoInit:
      example:
        reference: reference
        id: 0
      properties:
        id:
          description: Transaction ID. You require this ID to confirm the transaction
          format: int64
          type: integer
        reference:
          description: "References in Format: <b>entitades.referencias</b>"
          type: string
      type: object
    MoneyInCreateInput:
      example:
        accountId: accountId
        totalAmount: 6
        ServiceProvider: ServiceProvider
        comment: comment
        autoCommission: true
        card:
          cardDate: cardDate
          cardCountry: cardCountry
          cardType: 0
          cardHolder: cardHolder
          cardNumber: cardNumber
        transaction:
          reference: reference
          dateTime: dateTime
          authorisationId: authorisationId
          merchantId: merchantId
          order: order
        commissionAmount: 1
      properties:
        card:
          $ref: '#/components/schemas/CardInfoExtended'
        transaction:
          $ref: '#/components/schemas/TransactionInfo'
        ServiceProvider:
          description: Service Provider
          type: string
        accountId:
          description: Payment Account ID to Credit
          maxLength: 256
          minLength: 0
          type: string
        totalAmount:
          description: "Amount to Debit\r\nAmounts are given as integer numbers in\
            \ cents"
          format: int32
          type: integer
        commissionAmount:
          description: "Your Fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        autoCommission:
          description: "If true:\r\n1. [amountCom] will be ignored and will be replaced\
            \ with Lemonway's fee  \r\n2. You will not receive any fee"
          type: boolean
      required:
      - accountId
      - card
      - transaction
      type: object
    CardInfoExtended:
      example:
        cardDate: cardDate
        cardCountry: cardCountry
        cardType: 0
        cardHolder: cardHolder
        cardNumber: cardNumber
      properties:
        cardHolder:
          description: Card Holder
          maxLength: 64
          minLength: 2
          type: string
        cardType:
          description: Card Type<br/>0 = CB.<br/>1 = Visa.<br/>2 = Mastercard.<br/>
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        cardNumber:
          description: Masked Card Number
          maxLength: 19
          minLength: 8
          type: string
        cardDate:
          description: Card Expiration Date
          pattern: "^(0[1-9]|1[0-2])\\/([12]\\d{3})$"
          type: string
        cardCountry:
          description: Card Country
          maxLength: 3
          minLength: 3
          type: string
      required:
      - cardDate
      - cardNumber
      - cardType
      type: object
    TransactionInfo:
      example:
        reference: reference
        dateTime: dateTime
        authorisationId: authorisationId
        merchantId: merchantId
        order: order
      properties:
        reference:
          description: Transaction Reference Sent to the PSP
          maxLength: 64
          minLength: 6
          type: string
        order:
          description: Merchant Order ID
          maxLength: 64
          minLength: 6
          type: string
        dateTime:
          description: Transaction DateTime (UTC Unix timestamp)
          pattern: "^-?\\d{1,12}$"
          type: string
        merchantId:
          description: Merchant ID Sent to PSP
          maxLength: 64
          minLength: 6
          type: string
        authorisationId:
          description: Transaction Authorisation ID Received from PSP
          maxLength: 64
          minLength: 4
          type: string
      required:
      - authorisationId
      - dateTime
      - merchantId
      - order
      - reference
      type: object
    MoneyInOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        transaction:
          ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
          date: 2
          executionDate: 3
          scheduledDate: scheduledDate
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          maskedLabel: maskedLabel
          reference: reference
          remainingAmount: 2
          bankReference: bankReference
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          id: 1
          receiverAccountId: receiverAccountId
          refundAmount: 6.027456183070403
          method: 5
          substatus: substatus
          methodDetails: 5
          PSP:
            message: message
          threeDS:
            threeDSResult: threeDSResult
            threeDSModeRequested: threeDSModeRequested
          ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
          ChequeSendingAddress_Street: ChequeSendingAddress_Street
          ChequeSendingAddress_City: ChequeSendingAddress_City
          bankStatus: bankStatus
          scheduledNumber: scheduledNumber
          comment: comment
          creditAmount: 0
          card:
            country: country
            maskedNumber: maskedNumber
            holderName: holderName
            authorizationNumber: authorizationNumber
            is3DS: true
            expiration: expiration
            isRegistered: true
            id: 6
            type: type
          commissionAmount: 7
          status: 9
      properties:
        transaction:
          $ref: '#/components/schemas/TransactionIn'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    MoneyInInput:
      example:
        card:
          cardType: 1
          cardNumber: "4716202982346875"
          cardCode: "123"
          cardDate: 07/2027
        reference: Dze8778
        accountId: "33612345678"
        totalAmount: 1500
        commissionAmount: 100
        comment: Order number 2457765AX2
        autoCommission: false
      properties:
        card:
          $ref: '#/components/schemas/CardInfo'
        isPreAuth:
          description: "**Mercanet Only**\r\nIndicates if the request is delayed and\
            \ will require validation.\r\n1. If true, payment will only be pre-authorized,\
            \ you will have to call `MoneyInValidate` within 6 days or [delayedDays]\
            \ in order to request the card debit.\r\n2. If empty, the default behavior\
            \ is no delay and no validation necessary (unless stated otherwise in\
            \ your contract).\r\n3. If false, the card will be debited without delay\
            \ and without validation necessary."
          type: boolean
        delayedDays:
          description: "**Mercanet Only**\r\nIf isPreAuth is not true, this will be\
            \ ignored. \r\nPlease use with caution, if delayedDays &gt; 6, it is possible\
            \ that the payment will be denied when you try to validate it, because\
            \ a new authorization will be made."
          format: int32
          type: integer
        specialConfig:
          description: Leave Empty
          type: string
        reference:
          description: "Unique ID of the call, generated by your server. This ID can\
            \ be used as a search field when looking for operation details"
          maxLength: 50
          minLength: 0
          type: string
        accountId:
          description: Payment Account ID to Credit
          maxLength: 256
          minLength: 0
          type: string
        totalAmount:
          description: "Amount to Debit\r\nAmounts are given as integer numbers in\
            \ cents"
          format: int32
          type: integer
        commissionAmount:
          description: "Your Fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        autoCommission:
          description: "If true:\r\n1. [amountCom] will be ignored and will be replaced\
            \ with Lemonway's fee  \r\n2. You will not receive any fee"
          type: boolean
      required:
      - accountId
      - card
      type: object
    MoneyInChequeInitInput:
      example:
        chequeType: 15
        ChequeNumber: "1067924"
        BankIdentifier: "092008206908"
        InternalIdentifier: "065041500251"
        RLMC: 46
        CheckFnci: false
        reference: Dze8778
        accountId: "33612345678"
        totalAmount: 1500
        commissionAmount: 100
        comment: Order number 2457765AX2
        autoCommission: false
      properties:
        transferId:
          description: Leave Empty
          maxLength: 8
          minLength: 0
          type: string
        partner:
          description: Leave empty
          maxLength: 256
          minLength: 0
          type: string
        chequeType:
          description: Cheque payment (by default) or Pagaré:<br/>15 = Cheque payment.<br/>23
            = Pagaré.<br/>
          enum:
          - 15
          - 23
          format: int32
          type: integer
        ChequeNumber:
          description: The seven-digit number at the bottom left-hand corner of the
            cheque.
          maxLength: 7
          minLength: 0
          type: string
        BankIdentifier:
          description: Zone Interbancaire (ZIB). The twelve-digit number used to identify
            the cheque holder’s bank.
          maxLength: 12
          minLength: 0
          type: string
        InternalIdentifier:
          description: Zone Interne (ZIN). The twelve-digit number used to identify
            the cheque holder’s account.
          maxLength: 12
          minLength: 0
          type: string
        RLMC:
          description: La Clé de Recomposition de la Ligne Magnétique du Chèque. These
            2 numbers help identify a potential counterfeit cheque. (only France)
          format: int32
          type: integer
        CheckFnci:
          description: Fichier National des Chèques Irréguliers de la Banque de France.
            This FNCI check allows to make a verification on the cheque information.
            (only France) Please contact our support for this feature.
          type: boolean
        reference:
          description: "Unique ID of the call, generated by your server. This ID can\
            \ be used as a search field when looking for operation details"
          maxLength: 50
          minLength: 0
          type: string
        accountId:
          description: Payment Account ID to Credit
          maxLength: 256
          minLength: 0
          type: string
        totalAmount:
          description: "Amount to Debit\r\nAmounts are given as integer numbers in\
            \ cents"
          format: int32
          type: integer
        commissionAmount:
          description: "Your Fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        autoCommission:
          description: "If true:\r\n1. [amountCom] will be ignored and will be replaced\
            \ with Lemonway's fee  \r\n2. You will not receive any fee"
          type: boolean
      required:
      - accountId
      type: object
    MoneyInChequeInitOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        transaction:
          ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
          date: 2
          executionDate: 3
          scheduledDate: scheduledDate
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          maskedLabel: maskedLabel
          reference: reference
          remainingAmount: 2
          bankReference: bankReference
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          id: 1
          receiverAccountId: receiverAccountId
          refundAmount: 6.027456183070403
          method: 5
          substatus: substatus
          methodDetails: 5
          PSP:
            message: message
          threeDS:
            threeDSResult: threeDSResult
            threeDSModeRequested: threeDSModeRequested
          ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
          ChequeSendingAddress_Street: ChequeSendingAddress_Street
          ChequeSendingAddress_City: ChequeSendingAddress_City
          bankStatus: bankStatus
          scheduledNumber: scheduledNumber
          comment: comment
          creditAmount: 0
          card:
            country: country
            maskedNumber: maskedNumber
            holderName: holderName
            authorizationNumber: authorizationNumber
            is3DS: true
            expiration: expiration
            isRegistered: true
            id: 6
            type: type
          commissionAmount: 7
          status: 9
      properties:
        transaction:
          $ref: '#/components/schemas/TransactionIn'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    InitPayPalTransactionInput:
      description: Init PayPal transaction input
      example:
        redirections:
          errorUrl: errorUrl
          cancelUrl: cancelUrl
          returnUrl: returnUrl
        delivery:
          address:
            country: country
            city: city
            street: street
            postCode: postCode
            state: state
          receiver:
            fullName: fullName
        riskData:
          key: riskData
        items:
        - quantity: 890262545
          description: description
          unitAmount: 1586191969
          merchantAccountId: merchantAccountId
          type: 1
          taxAmount: 220040988
        - quantity: 890262545
          description: description
          unitAmount: 1586191969
          merchantAccountId: merchantAccountId
          type: 1
          taxAmount: 220040988
        transaction:
          reference: reference
          accountId: accountId
          totalAmount: 0
          isPreAuth: true
          comment: comment
          captureMode: 1
          autoCommission: true
          commissionAmount: 6
        amountBreakdown:
          insurance: 1997469940
          totalItems: 1280358508
          totalItemTaxes: 1210617418
          shipping: 494379917
          discount: 435321354
          handling: 1516424369
          shippingDiscount: 776546568
      properties:
        redirections:
          $ref: '#/components/schemas/Redirections'
        transaction:
          $ref: '#/components/schemas/Transaction'
        amountBreakdown:
          $ref: '#/components/schemas/AmountBreakdown'
        delivery:
          $ref: '#/components/schemas/Delivery'
        items:
          description: Items
          items:
            $ref: '#/components/schemas/PurchaseItem'
          type: array
        riskData:
          additionalProperties:
            type: string
          description: Risk data
          type: object
      required:
      - items
      - redirections
      - transaction
      type: object
    Redirections:
      description: Redirection urls
      example:
        errorUrl: errorUrl
        cancelUrl: cancelUrl
        returnUrl: returnUrl
      properties:
        returnUrl:
          description: Return URL
          maxLength: 2048
          minLength: 0
          type: string
        errorUrl:
          description: Error URl
          maxLength: 2048
          minLength: 0
          type: string
        cancelUrl:
          description: Cancel URL
          maxLength: 2048
          minLength: 0
          type: string
      required:
      - cancelUrl
      - errorUrl
      - returnUrl
      type: object
    Transaction:
      description: Transcation
      example:
        reference: reference
        accountId: accountId
        totalAmount: 0
        isPreAuth: true
        comment: comment
        captureMode: 1
        autoCommission: true
        commissionAmount: 6
      properties:
        reference:
          description: Reference
          type: string
        accountId:
          description: Account Id
          type: string
        totalAmount:
          description: Total Amount
          format: int32
          type: integer
        commissionAmount:
          description: Commission Amount
          format: int32
          type: integer
        comment:
          description: Comment
          type: string
        autoCommission:
          description: Auto Commission
          type: boolean
        isPreAuth:
          type: boolean
        captureMode:
          description: "Specifies the capture mode for the payment:\r\nAutomatic results\
            \ in a Capture type, and Manual results in an Authorize type.<br/>1 =\
            \ Automatic.<br/>2 = Manual.<br/>"
          enum:
          - 1
          - 2
          format: int32
          type: integer
      required:
      - accountId
      - commissionAmount
      - reference
      - totalAmount
      type: object
    AmountBreakdown:
      description: The amount breakdown.
      example:
        insurance: 1997469940
        totalItems: 1280358508
        totalItemTaxes: 1210617418
        shipping: 494379917
        discount: 435321354
        handling: 1516424369
        shippingDiscount: 776546568
      properties:
        totalItems:
          description: The subtotal for all items.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        totalItemTaxes:
          description: The total tax for all items.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        shipping:
          description: The shipping fee for all items.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        handling:
          description: The handling fee for all items.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        insurance:
          description: The insurance fee for all items.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        shippingDiscount:
          description: The shipping discount for all items.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        discount:
          description: The discount for all items.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      type: object
    Delivery:
      description: Delivery
      example:
        address:
          country: country
          city: city
          street: street
          postCode: postCode
          state: state
        receiver:
          fullName: fullName
      properties:
        receiver:
          $ref: '#/components/schemas/Receiver'
        address:
          $ref: '#/components/schemas/PaypalDeliveryAddress'
      required:
      - address
      - receiver
      type: object
    PurchaseItem:
      description: Item
      example:
        quantity: 890262545
        description: description
        unitAmount: 1586191969
        merchantAccountId: merchantAccountId
        type: 1
        taxAmount: 220040988
      properties:
        merchantAccountId:
          description: Merchant account id
          type: string
        description:
          description: Description
          maxLength: 127
          minLength: 0
          type: string
        quantity:
          description: Quantity
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        unitAmount:
          description: Unit amount
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        type:
          description: Type<br/>1 = Physical.<br/>2 = Digital.<br/>
          enum:
          - 1
          - 2
          format: int32
          type: integer
        taxAmount:
          description: Tax amount
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      required:
      - description
      - merchantAccountId
      - quantity
      - type
      - unitAmount
      type: object
    Receiver:
      description: Receiver
      example:
        fullName: fullName
      properties:
        fullName:
          description: Full name
          maxLength: 255
          minLength: 0
          type: string
      required:
      - fullName
      type: object
    PaypalDeliveryAddress:
      description: Address
      example:
        country: country
        city: city
        street: street
        postCode: postCode
        state: state
      properties:
        country:
          description: ISO 3166-1 alpha-2
          maxLength: 2
          minLength: 2
          type: string
        city:
          description: City
          maxLength: 140
          minLength: 0
          type: string
        street:
          description: Number and street
          maxLength: 256
          minLength: 0
          type: string
        postCode:
          description: Postcode/ZIP
          maxLength: 10
          minLength: 0
          type: string
        state:
          description: Postcode/ZIP
          maxLength: 255
          minLength: 0
          type: string
      required:
      - city
      - country
      - postCode
      - street
      type: object
    CancellationToken:
      properties:
        IsCancellationRequested:
          readOnly: true
          type: boolean
        CanBeCanceled:
          readOnly: true
          type: boolean
        WaitHandle:
          $ref: '#/components/schemas/WaitHandle'
      type: object
    WaitHandle:
      properties:
        Handle:
          properties: {}
          type: object
        SafeWaitHandle:
          $ref: '#/components/schemas/SafeWaitHandle'
      type: object
    SafeWaitHandle:
      properties:
        IsInvalid:
          readOnly: true
          type: boolean
        IsClosed:
          readOnly: true
          type: boolean
      type: object
    InitPayPalTransactionOutput:
      description: Init PayPal transaction Output
      example:
        payPalOrderId: payPalOrderId
        id: 0
        error:
          code: 2
          message: message
          psp:
            message: message
        redirectionUrl: redirectionUrl
      properties:
        id:
          description: Money-in Id
          format: int64
          type: integer
        redirectionUrl:
          description: Redirection Url
          type: string
        payPalOrderId:
          description: PayPal Order Id
          type: string
        error:
          $ref: '#/components/schemas/Error'
      required:
      - id
      - payPalOrderId
      - redirectionUrl
      type: object
    RegisterSddMandateInput:
      example:
        wallet: "33612345678"
        holder: Jean Dupont
        bic: ABCDEFGHIJK
        iban: FR1420041010050500013M02606
        isB2B: true
        isRecurring: true
        street: 26 rue de Paris
        postCode: "93100"
        city: Montreuil
        country: FRANCE
        mandateLanguage: es
        rum: "123456"
      properties:
        wallet:
          description: Payment Account ID
          maxLength: 256
          minLength: 0
          type: string
        holder:
          description: IBAN Holder
          maxLength: 100
          minLength: 0
          type: string
        bic:
          description: BIC Code (SWIFT)
          maxLength: 11
          minLength: 0
          type: string
        iban:
          description: IBAN
          maxLength: 34
          minLength: 15
          type: string
        isB2B:
          description: Indicates if the mandate is a SEPA business to business direct
            debit
          type: boolean
        isRecurring:
          description: "1. If true, mandate is for recurring payments\r\n2. If false,\
            \ mandate is for one payment only"
          type: boolean
        street:
          description: "Client Number and Street\r\nMandatory if you plan to electronically\
            \ sign the mandate"
          maxLength: 256
          minLength: 0
          type: string
        postCode:
          description: "Client Postal Code/ZIP\r\nMandatory if you plan to electronically\
            \ sign the mandate"
          maxLength: 10
          minLength: 0
          type: string
        city:
          description: "Client City\r\nMandatory if you plan to electronically sign\
            \ the mandate"
          maxLength: 256
          minLength: 0
          type: string
        country:
          description: "Client Country\r\nMandatory if you plan to electronically\
            \ sign the mandate."
          maxLength: 256
          minLength: 0
          type: string
        mandateLanguage:
          description: "Language of the automatically generated mandate(for electronic\
            \ signature).\r\nCurrently, the available languages are: fr, en, de, es,\
            \ it.\r\nIf you need another, please contact us. \r\n\"fr\" is used by\
            \ default if no language is requested."
          maxLength: 2
          minLength: 2
          type: string
        rum:
          description: Unique Mandate Reference Number (UMR)
          type: string
      required:
      - bic
      - holder
      - iban
      - isRecurring
      - wallet
      type: object
    RegisterSddMandateOutput:
      example:
        SSDMandate:
          IBAN: IBAN
          UniqueMandateReference: UniqueMandateReference
          holder: holder
          id: 5
          BIC: BIC
          status: 2
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        SSDMandate:
          $ref: '#/components/schemas/SddMandate'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    MoneyInSofortInitInput:
      example:
        returnUrl: https://www.yoursite.com/payment_return.php/?id=367GBD
        reference: Dze8778
        accountId: "33612345678"
        totalAmount: 1500
        commissionAmount: 100
        comment: Order number 2457765AX2
        autoCommission: false
      properties:
        returnUrl:
          description: "Your site returns the URL, called to terminate the operation\
            \ and on which the callback will be sent, with data in POST parameters.\r\
            \nThis URL must contain a unique ID so you know which operation is related\
            \ to the return."
          type: string
        reference:
          description: "Unique ID of the call, generated by your server. This ID can\
            \ be used as a search field when looking for operation details"
          maxLength: 50
          minLength: 0
          type: string
        accountId:
          description: Payment Account ID to Credit
          maxLength: 256
          minLength: 0
          type: string
        totalAmount:
          description: "Amount to Debit\r\nAmounts are given as integer numbers in\
            \ cents"
          format: int32
          type: integer
        commissionAmount:
          description: "Your Fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        autoCommission:
          description: "If true:\r\n1. [amountCom] will be ignored and will be replaced\
            \ with Lemonway's fee  \r\n2. You will not receive any fee"
          type: boolean
      required:
      - accountId
      - returnUrl
      type: object
    MoneyInSofortInitOutput:
      example:
        actionUrl: actionUrl
        id: 0
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        id:
          description: Transaction ID. You will this this value to confirm the transaction
          format: int64
          type: integer
        actionUrl:
          description: Redirected URL for the client on the iDeal page payment
          type: string
        error:
          $ref: '#/components/schemas/Error'
      type: object
    MoneyInWebInitInput:
      example:
        returnUrl: https://www.yoursite.com/thankyou.php
        errorUrl: https://www.yoursite.com/oops.php
        cancelUrl: https://www.yoursite.com/seeYouNextTime.php
        registerCard: false
        captureDelayedDays: 6
        moneyInNature: 0
        riskAnalysis:
          billingAddress:
            city: Paris
            country: FRA
            addressAdditional1: 5 Avenue Anatole France
            addressAdditional2: Etage 2
            zipCode: "75007"
          holder:
            firstName: Eiffel
            lastName: Tower
            email: eiffel@tower.fr
            phone: +33100000000
            mobile: +33600000000
            workPhone: +33100000000
          deliveryAddress:
            city: Paris
            Country: FRA
            addressAdditional1: 5 Avenue Anatole France
            addressAdditional2: Etage 2
            zipCode: "75007"
          deliveryAdditionalInfo:
            contact:
              email: eiffel@tower.fr
            numberOfItemsBasket: "100"
            addressDeliveryBillingMatchIndicator: "true"
            deliveryAddressCreationDate: 2021/05/24
            estimatedDeliveryDelay: "3"
            deliveryMode: Overseas shipping
          customerAccountInfo:
            customerAccountId: "1234"
            numberOfPurchase180Days: "10"
            numberOfTransactionYear: "1000"
            customerAccountCreationDate: 2021/05/20
            numberOfAttemptsAddCard24Hours: "10"
            suspiciousActivityIndicator: "false"
            numberOfTransaction24Hours: "1"
            customerAccountChangeDate: 2021/05/21
            passwordChangeDate: 2021/05/20
            addPaymentMeanDate: 2021/05/24
          authentication:
            merchantCustomerAuthentMethod: FEDERATEDID
            merchantCustomerAuthentDateTime: 2021/05/24 06:00:00
        recurringAvgAmount: 0
        paymentPattern: One_shot
        reference: Dze8778
        accountId: "33612345678"
        totalAmount: 1500
        commissionAmount: 100
        comment: Order number 2457765AX2
        autoCommission: false
      properties:
        returnUrl:
          description: Your site URL called by WebKit to terminate the operation.
          type: string
        errorUrl:
          description: "Your site return URL, called by WebKit in case of an error."
          type: string
        cancelUrl:
          description: "Your site return URL, called by WebKit in case of a cancellation."
          type: string
        registerCard:
          description: Save the card and returns an ID for future payments.
          type: boolean
        captureDelayedDays:
          description: "Indicate the number of days of the deferred payment. Between\
            \ 0 and 6 days to have a guaranteed payment. \r\nOnly usable with isPreAuth\
            \ = 0-6"
          format: int32
          type: integer
        label:
          description: Indicates the name of the shop on the payment page.
          type: string
        cardId:
          description: Indicates the CardId
          type: string
        moneyInNature:
          description: Indicates the nature of activity for this Money-In:<br/>0 =
            Activity 1.<br/>1 = Activity 2.<br/>
          enum:
          - 0
          - 1
          format: int32
          type: integer
        threeDS:
          $ref: '#/components/schemas/ThreeDs'
        riskAnalysis:
          $ref: '#/components/schemas/RiskAnalysis'
        recurringAvgAmount:
          description: "Average amount of future recurring payments to cover recurring\
            \ payments with variable amounts.  \r\n**Note:** Only if the amount is\
            \ higher than the amount of the first transaction."
          format: int32
          type: integer
        paymentPattern:
          description: "**Recurring**: If a payment follows a recurring amount or\
            \ **One_shot**: when there is no future recurring payments."
          type: string
        reference:
          description: "Unique ID of the call, generated by your server. This ID can\
            \ be used as a search field when looking for operation details"
          maxLength: 50
          minLength: 0
          type: string
        accountId:
          description: Payment Account ID to Credit
          maxLength: 256
          minLength: 0
          type: string
        totalAmount:
          description: "Amount to Debit\r\nAmounts are given as integer numbers in\
            \ cents"
          format: int32
          type: integer
        commissionAmount:
          description: "Your Fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        autoCommission:
          description: "If true:\r\n1. [amountCom] will be ignored and will be replaced\
            \ with Lemonway's fee  \r\n2. You will not receive any fee"
          type: boolean
      required:
      - accountId
      - cancelUrl
      - errorUrl
      - returnUrl
      type: object
    ThreeDs:
      properties:
        challengeMode:
          description: "If you would like to enforce 3D Secure for your client then\
            \ use the challenge mode. Possible values are: \r\n- No_preference (default\
            \ value). The card holder's bank will decide whether or not to challange\r\
            \n- Force_threeDS"
          type: string
      type: object
    RiskAnalysis:
      properties:
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
        holder:
          $ref: '#/components/schemas/Holder'
        deliveryAddress:
          $ref: '#/components/schemas/DeliveryAddress'
        deliveryAdditionalInfo:
          $ref: '#/components/schemas/DeliveryAdditionalInfo'
        customerAccountInfo:
          $ref: '#/components/schemas/CustomerAccountInfo'
        authentication:
          $ref: '#/components/schemas/Authentication'
      type: object
    BillingAddress:
      properties:
        city:
          description: Client city
          type: string
        country:
          description: Client country using ISO 3166-1 alpha-3
          type: string
        addressAdditional1:
          description: Client number and street
          type: string
        addressAdditional2:
          description: Client number and street
          type: string
        addressAdditional3:
          description: Client number and street
          type: string
        zipCode:
          description: Client Post Code/ZIP
          type: string
        state:
          description: Client State
          type: string
      type: object
    Holder:
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        mobile:
          type: string
        workPhone:
          type: string
      type: object
    DeliveryAddress:
      properties:
        city:
          description: Client City
          type: string
        Country:
          description: Client country using ISO 3166-1 alpha-3
          type: string
        addressAdditional1:
          description: Client Number and Street
          type: string
        addressAdditional2:
          description: Client Number and Street
          type: string
        addressAdditional3:
          description: Client Number and Street
          type: string
        zipCode:
          description: Client Postal Code/ZIP
          type: string
        state:
          description: Client State
          type: string
      type: object
    DeliveryAdditionalInfo:
      properties:
        contact:
          $ref: '#/components/schemas/Contact'
        numberOfItemsBasket:
          description: Total quantity of all products in the basket
          type: string
        addressDeliveryBillingMatchIndicator:
          description: Specifies whether the delivery and the billing addresses are
            the same
          type: string
        deliveryAddressCreationDate:
          description: The date on which the last delivery address used by the merchant's
            account was reported in the transaction
          type: string
        estimatedDeliveryDelay:
          description: Estimated Delivery Delay (in days) by the Merchant
          type: string
        deliveryMode:
          description: Delivery Method (Postal Office or Amazon box and so on)
          type: string
      type: object
    CustomerAccountInfo:
      properties:
        customerAccountId:
          description: Additional information about the account optionally provided
            by the 3-D Secure Requestor
          type: string
        numberOfPurchase180Days:
          description: The number of customer transactions made over the last six
            months (last 180 days)
          type: string
        numberOfTransactionYear:
          description: Number of accepted or abandoned transactions in the last year
            on the customer account
          type: string
        customerAccountCreationDate:
          description: "The customer account creation date. Format: YYYY/MM/DD"
          type: string
        numberOfAttemptsAddCard24Hours:
          description: The number of add card attempts in 24 hours
          type: string
        suspiciousActivityIndicator:
          description: "Specifies whether a suspicious activity is detected on customer\
            \ account. Possible values: true or false."
          type: string
        numberOfTransaction24Hours:
          description: Number of abandoned or successful transactions in the last
            24 hours on the customer account
          type: string
        customerAccountChangeDate:
          description: "Last date the customer account was changed. Format: YYYY/MM/DD"
          type: string
        passwordChangeDate:
          description: "Date of last change of password of the customer account. Format:\
            \ YYYY/MM/DD"
          type: string
        addPaymentMeanDate:
          description: "Date of last added form of payment made to account. For example\
            \ a new card registered to the account. Format: YYYY/MM/DD"
          type: string
      type: object
    Authentication:
      properties:
        merchantCustomerAuthentMethod:
          description: "Possible Authentication Methods: <br />\r\n- NOAUTHENT = 1\
            \ - No authentication of the customer by the merchant                \
            \                                     \r\n- OWNCREDENTIAL = 2 - Customer\
            \ authentication by the merchant using his own system                \
            \                          \r\n- FEDERATEDID = 3 - Customer authentication\
            \ by the merchant using an identifier federated(facebook, ...) (e.g.Facebook)\
            \  \r\n- ISSUERID = 4 - Customer authentication by the merchant using\
            \ information of the issuer's payment mean                \r\n- THIRDPARTY\
            \ = 5 - Customer authentication by the merchant using a third system \
            \                                         \r\n- FIDO = 6 - Customer authentication\
            \ by the merchant with FIDO(Fast IDentity Online) system"
          type: string
        merchantCustomerAuthentDateTime:
          description: ISO8601 date time format
          type: string
      type: object
    Contact:
      properties:
        email:
          type: string
      type: object
    MoneyInWebInitOutput:
      example:
        webKitToken: webKitToken
        'id ': 6
        cardId: 1
        id: 0
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        webKitToken:
          description: Payment Token to Pass to WebKit URL using GET
          type: string
        id:
          description: Transaction ID
          format: int32
          type: integer
        'id ':
          description: OBSOLETE Transaction ID
          format: int32
          type: integer
        cardId:
          format: int32
          type: integer
        error:
          $ref: '#/components/schemas/Error'
      type: object
    MoneyInPayshopInitInput:
      example:
        returnUrl: https://www.yoursite.com/payment_return.php/?id=367GBD
        reference: Dze8778
        accountId: "33612345678"
        totalAmount: 1500
        commissionAmount: 100
        comment: Order number 2457765AX2
        autoCommission: false
      properties:
        returnUrl:
          description: "Your site returns the URL, called to terminate the operation\
            \ and on which the callback will be sent, with data in POST parameters.\r\
            \nThis URL must contain a unique ID so you know which operation is related\
            \ to the return."
          type: string
        reference:
          description: "Unique ID of the call, generated by your server. This ID can\
            \ be used as a search field when looking for operation details"
          maxLength: 50
          minLength: 0
          type: string
        accountId:
          description: Payment Account ID to Credit
          maxLength: 256
          minLength: 0
          type: string
        totalAmount:
          description: "Amount to Debit\r\nAmounts are given as integer numbers in\
            \ cents"
          format: int32
          type: integer
        commissionAmount:
          description: "Your Fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        autoCommission:
          description: "If true:\r\n1. [amountCom] will be ignored and will be replaced\
            \ with Lemonway's fee  \r\n2. You will not receive any fee"
          type: boolean
      required:
      - accountId
      - returnUrl
      type: object
    MoneyInPayshopInitOutput:
      example:
        euPagoInit:
          reference: reference
          id: 0
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        euPagoInit:
          $ref: '#/components/schemas/EuPagoInit'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    MoneyInTrustlyInitInput:
      example:
        finalCustomerEmail: wade.winston@email.com
        finalCustomerFirstName: Wade
        finalCustomerLastName: Winston
        returnUrl: https://www.yoursite.com/payment_return.php/?id=367GBD
        reference: Dze8778
        accountId: "33612345678"
        totalAmount: 1500
        commissionAmount: 100
        comment: Order number 2457765AX2
        autoCommission: false
      properties:
        finalCustomerEmail:
          description: End user email
          pattern: "^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"\
            ]+)*)|(\\\".+\\\"))@((\\[\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\])|(([a-zA-Z\\\
            -0-9]+\\.)+[a-zA-Z]{2,}))$"
          type: string
        finalCustomerFirstName:
          description: End user first name
          type: string
        finalCustomerLastName:
          description: End user last name
          type: string
        returnUrl:
          description: "Your site returns the URL, called to terminate the operation\
            \ and on which the callback will be sent, with data in POST parameters.\r\
            \nThis URL must contain a unique ID so you know which operation is related\
            \ to the return."
          type: string
        reference:
          description: "Unique ID of the call, generated by your server. This ID can\
            \ be used as a search field when looking for operation details"
          maxLength: 50
          minLength: 0
          type: string
        accountId:
          description: Payment Account ID to Credit
          maxLength: 256
          minLength: 0
          type: string
        totalAmount:
          description: "Amount to Debit\r\nAmounts are given as integer numbers in\
            \ cents"
          format: int32
          type: integer
        commissionAmount:
          description: "Your Fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        autoCommission:
          description: "If true:\r\n1. [amountCom] will be ignored and will be replaced\
            \ with Lemonway's fee  \r\n2. You will not receive any fee"
          type: boolean
      required:
      - accountId
      - finalCustomerEmail
      - finalCustomerFirstName
      - finalCustomerLastName
      - returnUrl
      type: object
    MoneyInTrustlyInitOutput:
      example:
        actionUrl: actionUrl
        id: 0
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        id:
          description: Transaction ID. You will this this value to confirm the transaction
          format: int64
          type: integer
        actionUrl:
          description: Redirected URL for the client on the iDeal page payment
          type: string
        error:
          $ref: '#/components/schemas/Error'
      type: object
    RegisterCardInput:
      example:
        accountId: "33612345678"
        card:
          cardType: 1
          cardNumber: "4716202982346875"
          cardCode: "123"
          cardDate: 07/2027
      properties:
        accountId:
          description: Payment Account ID
          maxLength: 256
          minLength: 0
          type: string
        card:
          $ref: '#/components/schemas/CardInfo'
        specialConfiguration:
          description: Leave Empty
          type: string
      required:
      - accountId
      - card
      type: object
    RegisterCardOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        card:
          country: country
          maskedNumber: maskedNumber
          holderName: holderName
          authorizationNumber: authorizationNumber
          is3DS: true
          expiration: expiration
          isRegistered: true
          id: 6
          type: type
      properties:
        card:
          $ref: '#/components/schemas/Card'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    MoneyInPayTrailInitInput:
      example:
        returnUrl: https://www.yoursite.com/payment_return.php/?id=367GBD
        reference: Dze8778
        accountId: "33612345678"
        totalAmount: 1500
        commissionAmount: 100
        comment: Order number 2457765AX2
        autoCommission: false
      properties:
        returnUrl:
          description: "Your site returns the URL, called to terminate the operation\
            \ and on which the callback will be sent, with data in POST parameters.\r\
            \nThis URL must contain a unique ID so you know which operation is related\
            \ to the return."
          type: string
        reference:
          description: "Unique ID of the call, generated by your server. This ID can\
            \ be used as a search field when looking for operation details"
          maxLength: 50
          minLength: 0
          type: string
        accountId:
          description: Payment Account ID to Credit
          maxLength: 256
          minLength: 0
          type: string
        totalAmount:
          description: "Amount to Debit\r\nAmounts are given as integer numbers in\
            \ cents"
          format: int32
          type: integer
        commissionAmount:
          description: "Your Fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        autoCommission:
          description: "If true:\r\n1. [amountCom] will be ignored and will be replaced\
            \ with Lemonway's fee  \r\n2. You will not receive any fee"
          type: boolean
      required:
      - accountId
      - returnUrl
      type: object
    MoneyInPayTrailInitOutput:
      example:
        actionUrl: actionUrl
        id: 0
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        id:
          description: Transaction ID. You will this this value to confirm the transaction
          format: int64
          type: integer
        actionUrl:
          description: Redirected URL for the client on the iDeal page payment
          type: string
        error:
          $ref: '#/components/schemas/Error'
      type: object
    MoneyInMobilePayInitInput:
      example:
        returnUrl: https://www.yoursite.com/payment_return.php/?id=367GBD
        reference: Dze8778
        accountId: "33612345678"
        totalAmount: 1500
        commissionAmount: 100
        comment: Order number 2457765AX2
        autoCommission: false
      properties:
        returnUrl:
          description: "Your site returns the URL, called to terminate the operation\
            \ and on which the callback will be sent, with data in POST parameters.\r\
            \nThis URL must contain a unique ID so you know which operation is related\
            \ to the return."
          type: string
        reference:
          description: "Unique ID of the call, generated by your server. This ID can\
            \ be used as a search field when looking for operation details"
          maxLength: 50
          minLength: 0
          type: string
        accountId:
          description: Payment Account ID to Credit
          maxLength: 256
          minLength: 0
          type: string
        totalAmount:
          description: "Amount to Debit\r\nAmounts are given as integer numbers in\
            \ cents"
          format: int32
          type: integer
        commissionAmount:
          description: "Your Fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        autoCommission:
          description: "If true:\r\n1. [amountCom] will be ignored and will be replaced\
            \ with Lemonway's fee  \r\n2. You will not receive any fee"
          type: boolean
      required:
      - accountId
      - returnUrl
      type: object
    MoneyInMobilePayInitOutput:
      example:
        actionUrl: actionUrl
        id: 0
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        id:
          description: Transaction ID. You will this this value to confirm the transaction
          format: int64
          type: integer
        actionUrl:
          description: Redirected URL for the client on the iDeal page payment
          type: string
        error:
          $ref: '#/components/schemas/Error'
      type: object
    MoneyInMultibancoInitInput:
      example:
        returnUrl: https://www.yoursite.com/payment_return.php/?id=367GBD
        reference: Dze8778
        accountId: "33612345678"
        totalAmount: 1500
        commissionAmount: 100
        comment: Order number 2457765AX2
        autoCommission: false
      properties:
        startDate:
          pattern: "^[12]\\d{3}\\/(0[1-9]|1[0-2])\\/(0[1-9]|[12]\\d|3[01])$"
          type: string
        endDate:
          pattern: "^[12]\\d{3}\\/(0[1-9]|1[0-2])\\/(0[1-9]|[12]\\d|3[01])$"
          type: string
        returnUrl:
          description: "Your site returns the URL, called to terminate the operation\
            \ and on which the callback will be sent, with data in POST parameters.\r\
            \nThis URL must contain a unique ID so you know which operation is related\
            \ to the return."
          type: string
        reference:
          description: "Unique ID of the call, generated by your server. This ID can\
            \ be used as a search field when looking for operation details"
          maxLength: 50
          minLength: 0
          type: string
        accountId:
          description: Payment Account ID to Credit
          maxLength: 256
          minLength: 0
          type: string
        totalAmount:
          description: "Amount to Debit\r\nAmounts are given as integer numbers in\
            \ cents"
          format: int32
          type: integer
        commissionAmount:
          description: "Your Fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        autoCommission:
          description: "If true:\r\n1. [amountCom] will be ignored and will be replaced\
            \ with Lemonway's fee  \r\n2. You will not receive any fee"
          type: boolean
      required:
      - accountId
      - returnUrl
      type: object
    MoneyInMultibancoInitOutput:
      example:
        euPagoInit:
          reference: reference
          id: 0
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        euPagoInit:
          $ref: '#/components/schemas/EuPagoInit'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    CreatePaymentFormInput:
      example:
        optId: Order1234
        walletPayer: "8888"
        walletReceiver: "9999"
        totalAmount: 500-1000
        commissionAmount: 100
        comment: Commande numéro 245
        returnUrl: http://YourCompany.com/ThankYou
        cancelUrl: http://YourCompany.com/PleaseComeBackLater
        errorUrl: http://YourCompany.com/Sorry
        firstNamePayer: Jean
        lastNamePayer: DUPONT
        emailPayer: jean.dupont@email.com
        style: https://sandbox-webkit.lemonway.fr/demo/dev/payment-page/css/main.css
        atosStyle: https://YourCompany.com/public/atos.css
        notifUrl: http://login:pass@YourCompany.com/notif/?origine=lemonway&orderId=135
      properties:
        optId:
          description: "To cross-reference a buyer with a payment, use `optId` to\
            \ help associate them with one another.   \r\n**Note:** Do not use special\
            \ characters in this field, for example: #, @, and !."
          maxLength: 60
          minLength: 0
          type: string
        walletPayer:
          description: "Associated with the **Payer Wallet**.  \r\nIf this field is\
            \ filled then the money reaches this wallet before arriving at the beneficiary\
            \ wallet (via a transfer wallet to wallet).\r\n**Important:** Don't put\
            \ the <b>SC Wallet</b> here, it won't work. You cannot debit the <b>SC\
            \ Wallet</b> with a credit card."
          maxLength: 100
          minLength: 0
          type: string
        walletReceiver:
          description: "Beneficiary Wallet. If this field is not complete, then the\
            \ end-user must to fill its value on the payment form. \r\n<b>We recommend\
            \ you complete the form instead of your end-user</b>\r\nDon't put the\
            \ <b>SC Wallet</b> here, it won't work. You cannot credit the <b>SC Wallet</b>\
            \ with a credit card."
          maxLength: 100
          minLength: 0
          type: string
        totalAmount:
          description: "Amount or a range of the amount to be debited.\r\n1. If this\
            \ field is configured with an interval (eg, 15.30-500.26) then the final\
            \ customer will have to enter an appropriate amount in the form.\r\n2.\
            \ If this field is not filled then the end-user can enter any amount to\
            \ the form.\r\n3. If this field is filled with a precise value (eg 15.60),\
            \ then the end-user has no choice in the amount field of the form.\r\n\
            Amounts are given as integer numbers in cents.\r\nNote: If you enter a\
            \ fixed amount"
          type: string
        commissionAmount:
          description: "Your Fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        returnUrl:
          description: URL redirection after the payment procedure is successfully
            finished
          maxLength: 255
          minLength: 0
          type: string
        cancelUrl:
          description: URL redirection after the payment procedure is cancelled
          maxLength: 255
          minLength: 0
          type: string
        errorUrl:
          description: URL edirection after the payment procedure is failed
          maxLength: 255
          minLength: 0
          type: string
        firstNamePayer:
          description: "Payer's First Name\r\nIf this field is not filled then the\
            \ end-user have to fill it in the payment form"
          maxLength: 255
          minLength: 0
          type: string
        lastNamePayer:
          description: "Payer's Last Name\r\nIf this field is not filled then the\
            \ end-user have to fill it in the payment form"
          maxLength: 255
          minLength: 0
          type: string
        emailPayer:
          description: "Payer's Email\r\nIf this field is not filled then the end-user\
            \ have to fill it in the payment form"
          maxLength: 255
          minLength: 0
          pattern: "^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"\
            ]+)*)|(\\\".+\\\"))@((\\[\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\])|(([a-zA-Z\\\
            -0-9]+\\.)+[a-zA-Z]{2,}))$"
          type: string
        style:
          description: "Link to a custom CSS Stylesheet\r\nThe stylesheet should be\
            \ publicly accessible via **HTTPS*"
          maxLength: 255
          minLength: 0
          type: string
        atosStyle:
          maxLength: 255
          minLength: 0
          type: string
        notifUrl:
          description: "At the end of the payment procedure, an HTTP POST message\
            \ containing the payment status (PAID, ERROR, CANCEL) is sent to this\
            \ address. \r\nIt is possible that the same notification might be sent\
            \ several times."
          maxLength: 255
          minLength: 0
          type: string
        options:
          description: Reserved for a future version
          maxLength: 255
          minLength: 0
          type: string
      type: object
    CreatePaymentFormOutput:
      example:
        form:
          notifUrl: notifUrl
          emailPayer: emailPayer
          amountCom: amountCom
          firstNamePayer: firstNamePayer
          active: true
          language: language
          accountReceiver: accountReceiver
          version: version
          lastNamePayer: lastNamePayer
          walletUa: walletUa
          errorUrl: errorUrl
          cancelUrl: cancelUrl
          raisonSociale: raisonSociale
          walletIp: walletIp
          atosStyle: atosStyle
          amountTotRange: amountTotRange
          options: options
          style: style
          accountPayer: accountPayer
          comment: comment
          id: id
          returnUrl: returnUrl
          optId: optId
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        form:
          $ref: '#/components/schemas/PaymentForm'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    PaymentForm:
      example:
        notifUrl: notifUrl
        emailPayer: emailPayer
        amountCom: amountCom
        firstNamePayer: firstNamePayer
        active: true
        language: language
        accountReceiver: accountReceiver
        version: version
        lastNamePayer: lastNamePayer
        walletUa: walletUa
        errorUrl: errorUrl
        cancelUrl: cancelUrl
        raisonSociale: raisonSociale
        walletIp: walletIp
        atosStyle: atosStyle
        amountTotRange: amountTotRange
        options: options
        style: style
        accountPayer: accountPayer
        comment: comment
        id: id
        returnUrl: returnUrl
        optId: optId
      properties:
        walletIp:
          type: string
        walletUa:
          type: string
        amountTotRange:
          type: string
        amountCom:
          type: string
        language:
          type: string
        version:
          type: string
        style:
          type: string
        atosStyle:
          description: "Mercanet v1 only: Link to a custom Mercanet CSS Stylesheet.\r\
            \nThe stylesheet should be publicly accessible via HTTPS"
          type: string
        notifUrl:
          type: string
        options:
          description: Reserved for future version
          type: string
        active:
          type: boolean
        raisonSociale:
          type: string
        id:
          description: Payment Form ID
          type: string
        optId:
          description: Optional identity of the payment form. You should not use special
            character here.
          type: string
        accountPayer:
          description: "Payer Account\r\nIf this field is filled then the money reaches\
            \ this wallet before arriving at the beneficiary wallet (via a transfer\
            \ wallet to wallet)\r\nnote: Don't put the <b>SC Wallet</b> here, it won't\
            \ work. You cannot credit the <b>SC Wallet</b> with a credit card."
          type: string
        accountReceiver:
          description: "Beneficiary Account\r\nif this field is not filled then the\
            \ end-user must to fill its value on the payment form. We recommend you\
            \ to always fill it instead of your end-user.\r\nnote: Don't put the <b>SC\
            \ Wallet</b> here, it won't work. You cannot credit the <b>SC Wallet</b>\
            \ with a credit card."
          type: string
        comment:
          type: string
        returnUrl:
          description: URL redirection after the payment procedure is successfully
            finished
          type: string
        cancelUrl:
          description: URL redirection after the payment procedure is cancelled
          type: string
        errorUrl:
          description: URL redirection after the payment procedure is failed
          type: string
        firstNamePayer:
          description: "Payer's First Name\r\nIf this field is not filled then the\
            \ end-user have to fill it in the payment form."
          type: string
        lastNamePayer:
          description: "Payer's Last Name\r\nIf this field is not filled then the\
            \ end-user have to fill it in the payment form."
          type: string
        emailPayer:
          description: "Payer's Email\r\nIf this field is not filled then the end-user\
            \ have to fill it in the payment form."
          type: string
      type: object
    MoneyIn3DInitInput:
      example:
        card:
          cardType: 1
          cardNumber: "4716202982346875"
          cardCode: "123"
          cardDate: 07/2027
        returnUrl: https://www.mysite.com/payment/?id=356
        registerCard: false
        reference: Dze8778
        accountId: "33612345678"
        totalAmount: 1500
        commissionAmount: 100
        comment: Order number 2457765AX2
        autoCommission: false
      properties:
        card:
          $ref: '#/components/schemas/CardInfo'
        returnUrl:
          description: "Return URL of the 3-D Secure website. Your client will be\
            \ redirected on this URL, which should be your website URL."
          type: string
        cardId:
          format: int64
          type: integer
        registerCard:
          type: boolean
        threeDS:
          $ref: '#/components/schemas/ThreeDs'
        riskAnalysis:
          $ref: '#/components/schemas/RiskAnalysis'
        recurringAvgAmount:
          description: Average amount of future recurring payments to cover recurring
            payments with variable amounts. **Note:** Only if the amount is higher
            than the amount of the first transaction. cover recurring payments with
            variable amounts. **Note:** Only if the amount is higher than the amount
            of the first transaction.
          format: int32
          type: integer
        paymentPattern:
          description: "**Recurring**: If a payment follows a recurring amount or\
            \ **One_shot**: when there is no future recurring payments."
          type: string
        reference:
          description: "Unique ID of the call, generated by your server. This ID can\
            \ be used as a search field when looking for operation details"
          maxLength: 50
          minLength: 0
          type: string
        accountId:
          description: Payment Account ID to Credit
          maxLength: 256
          minLength: 0
          type: string
        totalAmount:
          description: "Amount to Debit\r\nAmounts are given as integer numbers in\
            \ cents"
          format: int32
          type: integer
        commissionAmount:
          description: "Your Fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        autoCommission:
          description: "If true:\r\n1. [amountCom] will be ignored and will be replaced\
            \ with Lemonway's fee  \r\n2. You will not receive any fee"
          type: boolean
      required:
      - accountId
      type: object
    MoneyIn3DInitOutput:
      example:
        acs:
          termurlFieldName: termurlFieldName
          pareqFieldValue: pareqFieldValue
          actionMethod: actionMethod
          mpiResult: mpiResult
          mdFieldName: mdFieldName
          actionUrl: actionUrl
          mdFieldValue: mdFieldValue
          pareqFieldName: pareqFieldName
        error:
          code: 2
          message: message
          psp:
            message: message
        transaction:
          ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
          date: 2
          executionDate: 3
          scheduledDate: scheduledDate
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          maskedLabel: maskedLabel
          reference: reference
          remainingAmount: 2
          bankReference: bankReference
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          id: 1
          receiverAccountId: receiverAccountId
          refundAmount: 6.027456183070403
          method: 5
          substatus: substatus
          methodDetails: 5
          PSP:
            message: message
          threeDS:
            threeDSResult: threeDSResult
            threeDSModeRequested: threeDSModeRequested
          ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
          ChequeSendingAddress_Street: ChequeSendingAddress_Street
          ChequeSendingAddress_City: ChequeSendingAddress_City
          bankStatus: bankStatus
          scheduledNumber: scheduledNumber
          comment: comment
          creditAmount: 0
          card:
            country: country
            maskedNumber: maskedNumber
            holderName: holderName
            authorizationNumber: authorizationNumber
            is3DS: true
            expiration: expiration
            isRegistered: true
            id: 6
            type: type
          commissionAmount: 7
          status: 9
      properties:
        acs:
          $ref: '#/components/schemas/ACS'
        transaction:
          $ref: '#/components/schemas/TransactionIn'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    ACS:
      example:
        termurlFieldName: termurlFieldName
        pareqFieldValue: pareqFieldValue
        actionMethod: actionMethod
        mpiResult: mpiResult
        mdFieldName: mdFieldName
        actionUrl: actionUrl
        mdFieldValue: mdFieldValue
        pareqFieldName: pareqFieldName
      properties:
        actionUrl:
          type: string
        actionMethod:
          type: string
        pareqFieldName:
          type: string
        pareqFieldValue:
          type: string
        termurlFieldName:
          type: string
        mdFieldName:
          type: string
        mdFieldValue:
          type: string
        mpiResult:
          type: string
      type: object
    CreateBnplPaymentInput:
      example:
        paymentPlanId: 1
        delivery:
          deliveryMode: DeliveryToCustomerAddress
          expressDelivery: true
          deliveryAddress:
            street: 8 rue du sentier
            city: Paris
            postCode: "75003"
            country: FRA
        items:
        - type: PhysicalGood
          description: Zesty
          reference: Lemon
          quantity: 1
          unitAmount: 200
          merchantAccountId: fc516a3d-3bca-438b-af45-0f4a6c7ec804
        - type: PhysicalGood
          description: Pressé
          reference: Citron
          quantity: 2
          unitAmount: 400
          merchantAccountId: 57d495c7-b432-449f-9e58-85ebb4477087
        customer:
          accountId: AC4531686
          civility: Mr
          firstName: Lemon
          lastName: Way
          birthDate: 1970-01-01
          mobileNumber: "0784177684"
          email: lemon@way.com
          billingAddress:
            street: 8 rue du sentier
            city: Paris
            postCode: "75003"
            country: FRA
        returnUrl: https://www.yoursite.com/thankyou.php
        errorUrl: https://www.yoursite.com/oops.php
        cancelUrl: https://www.yoursite.com/seeYouNextTime.php
        reference: Dze8778
        accountId: "33612345678"
        totalAmount: 220
        commissionAmount: 1
        comment: Order number 2457765AX2
        autoCommission: false
      properties:
        paymentPlanId:
          description: Payment Plan ID
          format: int64
          type: integer
        captureMode:
          description: "Defines if the payment should be captured right away or if\
            \ the capture should be deferred.\r\nPossible values: `Automatic` and\
            \ `Manual`. Default is set to 'Automatic'."
          type: string
        delivery:
          $ref: '#/components/schemas/BnplDelivery'
        items:
          description: "Possible values:  \r\n`PhysicalGood`  \r\n`Discount`  \r\n\
            `ShippingFee`  \r\n`DigitalGood`  \r\n`ExternalPayment`  \r\n`Insurance`"
          items:
            $ref: '#/components/schemas/BnplPurchaseItem'
          type: array
        customer:
          $ref: '#/components/schemas/Customer'
        returnUrl:
          description: Return success url
          type: string
        errorUrl:
          description: Return error url
          type: string
        cancelUrl:
          description: Return cancel url
          type: string
        reference:
          description: "Unique ID of the call, generated by your server. This ID can\
            \ be used as a search field when looking for operation details"
          maxLength: 50
          minLength: 0
          type: string
        accountId:
          description: Payment Account ID to Credit
          maxLength: 256
          minLength: 0
          type: string
        totalAmount:
          description: "Amount to Debit\r\nAmounts are given as integer numbers in\
            \ cents"
          format: int32
          type: integer
        commissionAmount:
          description: "Your Fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        autoCommission:
          description: "If true:\r\n1. [amountCom] will be ignored and will be replaced\
            \ with Lemonway's fee  \r\n2. You will not receive any fee"
          type: boolean
      required:
      - accountId
      - cancelUrl
      - customer
      - delivery
      - errorUrl
      - items
      - paymentPlanId
      - returnUrl
      type: object
    BnplDelivery:
      properties:
        deliveryMode:
          description: "Possible values:   \r\n`CollectionOfTheGoodsInTheMerchantStore`\r\
            \n`CollectionInAThirdPartyPoint`\r\n`DeliveryToCustomerAddress`"
          type: string
        expressDelivery:
          type: boolean
        deliveryAddress:
          $ref: '#/components/schemas/BnplAddress'
        deliveryPointName:
          description: "Pickup name or recipient name.\r\nMandatory only if DeliveryMode\
            \ is not \"DeliveryToCustomerAddress\"."
          type: string
      required:
      - deliveryAddress
      - deliveryMode
      - expressDelivery
      type: object
    BnplPurchaseItem:
      properties:
        type:
          type: string
        description:
          type: string
        reference:
          type: string
        quantity:
          format: int32
          type: integer
        unitAmount:
          format: int32
          type: integer
        merchantAccountId:
          type: string
      required:
      - description
      - merchantAccountId
      - quantity
      - reference
      - type
      - unitAmount
      type: object
    Customer:
      properties:
        accountId:
          description: Client account Id.
          type: string
        civility:
          description: "Client civility.  \r\nPossible values: `Mr` and `Ms`"
          type: string
        firstName:
          description: Client first name.
          type: string
        lastName:
          description: Client last name.
          type: string
        birthDate:
          description: Client birth date.
          type: string
        mobileNumber:
          description: Client phone number.
          type: string
        email:
          description: Client email.
          type: string
        taxIdentificationNumber:
          description: Client tax identification number.
          type: string
        billingAddress:
          $ref: '#/components/schemas/BnplAddress'
      required:
      - accountId
      - billingAddress
      - civility
      - email
      - firstName
      - lastName
      - mobileNumber
      type: object
    BnplAddress:
      properties:
        street:
          description: ""
          type: string
        city:
          description: ""
          type: string
        postCode:
          description: ""
          type: string
        country:
          description: ""
          type: string
      required:
      - city
      - country
      - postCode
      - street
      type: object
    CreateBnplPaymentOutput:
      example:
        redirectUrl: redirectUrl
        id: 0
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        id:
          description: Transaction ID.
          format: int64
          type: integer
        redirectUrl:
          description: Payment page URL.
          type: string
        error:
          $ref: '#/components/schemas/Error'
      type: object
    CreateIBANInput:
      example:
        wallet: "33612345678"
        country: FR
        generatePDFAndQrCode: true
        pdfLanguage: en
      properties:
        wallet:
          description: Payment Account ID.
          maxLength: 256
          minLength: 0
          type: string
        country:
          description: "ISO2 code of the country from which the IBAN must be generated\r\
            \nWe currently serve 4 countries:\r\n<ul><li>BE: Belgium (BNP Fortis)</li><li>ES:\
            \ BNP Paribas Sucursal en España</li><li>FR: France (BNP Paribas)</li><li>IT:\
            \ Italy (BNL)</li></ul>"
          maxLength: 2
          minLength: 0
          type: string
        generatePDFAndQrCode:
          description: "If activated, this function will return a PDF document describing\
            \ the virtual IBAN, along with a <a href=\"https://www.europeanpaymentscouncil.eu/document-library/guidance-documents/quick-response-code-guidelines-enable-data-capture-initiation\"\
            \ target=\"_blank\">standard EPC QR-Code</a> image. Please store these\
            \ documents in your datawarehouse, as they are not accessible through\
            \ Lemonway's API after the virtual IBAN has been generated."
          type: boolean
        pdfLanguage:
          description: "ISO 639-1 language code for the PDF document. The supported\
            \ languages are:\r\n<ul><li>en: English</li><li>es: Spanish</li><li>fr:\
            \ French</li><li>it: Italian</li></ul>\r\nThis field is ignored if generatePDFAndQrCode\
            \ is false."
          maxLength: 2
          minLength: 0
          type: string
      required:
      - country
      - wallet
      type: object
    CreateIBANOutput:
      example:
        pdf: pdf
        qrCode: qrCode
        iban: iban
        domiciliation: domiciliation
        holder: holder
        id: 0
        error:
          code: 2
          message: message
          psp:
            message: message
        bic: bic
        maxAvailableIbanPerWallet: 1
        status: 6
        maxAvailableIban: 5
      properties:
        id:
          description: IBAN ID
          format: int64
          type: integer
        iban:
          description: IBAN
          type: string
        bic:
          description: BIC/SWIFT Code
          type: string
        holder:
          description: "IBAN Owner: First Name, Last Name, or Enterprise Name"
          type: string
        domiciliation:
          description: Domiciliation
          type: string
        status:
          description: IBAN Status
          format: int32
          type: integer
        maxAvailableIbanPerWallet:
          description: IBAN left that can be generated for this wallet
          format: int32
          type: integer
        maxAvailableIban:
          description: IBAN left that can be generated in total
          format: int32
          type: integer
        pdf:
          description: PDF in base64
          type: string
        qrCode:
          description: QR Code PNG in base64
          type: string
        error:
          $ref: '#/components/schemas/Error'
      type: object
    MoneyInWithCardIdInput:
      example:
        reference: Dze8778
        accountId: "33612345678"
        totalAmount: 1500
        commissionAmount: 100
        comment: Order number 2457765AX2
        autoCommission: false
      properties:
        isPreAuth:
          description: "Indicates if the request is delayed and will require validation.\r\
            \n1. If empty, the default behavior is no delay and no validation necessary\
            \ (unless stated otherwise in your contract).\r\n2. If true, the payment\
            \ is pre-authorized. You will have to call `MoneyInValidate` within **delayDays**\
            \ time lapse (From J to J+delayDays).\r\n3. If false, debit is immediately\
            \ effective"
          type: boolean
        delayedDays:
          description: "Indicate the number of days of the deferred payment, between\
            \ **0 and 6** days to have a guaranteed payment. \r\nOnly usable with\
            \ isPreAuth = 1"
          format: int32
          type: integer
        specialConfig:
          description: Leave empty
          type: string
        reference:
          description: "Unique ID of the call, generated by your server. This ID can\
            \ be used as a search field when looking for operation details"
          maxLength: 50
          minLength: 0
          type: string
        accountId:
          description: Payment Account ID to Credit
          maxLength: 256
          minLength: 0
          type: string
        totalAmount:
          description: "Amount to Debit\r\nAmounts are given as integer numbers in\
            \ cents"
          format: int32
          type: integer
        commissionAmount:
          description: "Your Fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        autoCommission:
          description: "If true:\r\n1. [amountCom] will be ignored and will be replaced\
            \ with Lemonway's fee  \r\n2. You will not receive any fee"
          type: boolean
      required:
      - accountId
      type: object
    MoneyInWithCardIdOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        transaction:
          ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
          date: 2
          executionDate: 3
          scheduledDate: scheduledDate
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          maskedLabel: maskedLabel
          reference: reference
          remainingAmount: 2
          bankReference: bankReference
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          id: 1
          receiverAccountId: receiverAccountId
          refundAmount: 6.027456183070403
          method: 5
          substatus: substatus
          methodDetails: 5
          PSP:
            message: message
          threeDS:
            threeDSResult: threeDSResult
            threeDSModeRequested: threeDSModeRequested
          ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
          ChequeSendingAddress_Street: ChequeSendingAddress_Street
          ChequeSendingAddress_City: ChequeSendingAddress_City
          bankStatus: bankStatus
          scheduledNumber: scheduledNumber
          comment: comment
          creditAmount: 0
          card:
            country: country
            maskedNumber: maskedNumber
            holderName: holderName
            authorizationNumber: authorizationNumber
            is3DS: true
            expiration: expiration
            isRegistered: true
            id: 6
            type: type
          commissionAmount: 7
          status: 9
      properties:
        transaction:
          $ref: '#/components/schemas/TransactionIn'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    MoneyInTransferInitInput:
      example:
        returnUrl: https://fr.wikipedia.org/wiki/OK
        cancelUrl: https://fr.wikipedia.org/wiki/Cancel
        errorUrl: https://fr.wikipedia.org/wiki/Error
        countryCode: FR
        bankId: the-bank-id
        reference: Dze8778
        accountId: "1234"
        totalAmount: 10000
        commissionAmount: 100
        comment: Comment the transaction request
        autoCommission: false
      properties:
        returnUrl:
          description: returnUrl in case of success
          type: string
        cancelUrl:
          description: cancelUrl in case of cancellation
          type: string
        errorUrl:
          description: errorUrl in case of error
          type: string
        countryCode:
          description: "The country code associated with the payment bank. ISO Alpha-2\
            \ codes accepted: (FR) France, (ES) Spain, (IT) Italy, (DE) Germany, and\
            \ (PT) Portugal"
          type: string
        bankId:
          description: "If you use the bankId in the call, the end-user will be redirected\
            \ to their bank. They will not have to select a bank from a list provided.\
            \ To get a comprehensive list of `bankIds` call the `GET v2/moneyins/paybybank/transfer/banks`\
            \ specifying the ISO Alpha-2 Country Code for example FR for France."
          type: string
        reference:
          description: "Unique ID of the call, generated by your server. This ID can\
            \ be used as a search field when looking for operation details"
          maxLength: 50
          minLength: 0
          type: string
        accountId:
          description: Payment Account ID to Credit
          maxLength: 256
          minLength: 0
          type: string
        totalAmount:
          description: "Amount to Debit\r\nAmounts are given as integer numbers in\
            \ cents"
          format: int32
          type: integer
        commissionAmount:
          description: "Your Fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        autoCommission:
          description: "If true:\r\n1. [amountCom] will be ignored and will be replaced\
            \ with Lemonway's fee  \r\n2. You will not receive any fee"
          type: boolean
      required:
      - accountId
      - cancelUrl
      - countryCode
      - errorUrl
      - returnUrl
      type: object
    MoneyInTransferInitOutput:
      example:
        redirectUrl: redirectUrl
        id: 0
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        redirectUrl:
          type: string
        id:
          format: int64
          type: integer
        error:
          $ref: '#/components/schemas/Error'
      type: object
    MoneyInSubscriptionInitInput:
      example:
        subscriptionId: 0023T400
        Count: 4
        accountId: "33612345678"
        totalAmount: 1500
        commissionAmount: 100
        comment: Order number 2457765AX2
        autoCommission: false
      properties:
        subscriptionId:
          description: Subscription ID
          maxLength: 24
          minLength: 0
          type: string
        Count:
          description: Number of operations to be performed on this subscription
          format: int32
          type: integer
        accountId:
          description: Payment Account ID to Credit
          maxLength: 256
          minLength: 0
          type: string
        totalAmount:
          description: "Amount to Debit\r\nAmounts are given as integer numbers in\
            \ cents"
          format: int32
          type: integer
        commissionAmount:
          description: "Your Fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment Regarding the Transaction
          maxLength: 140
          minLength: 0
          type: string
        autoCommission:
          description: "If true:\r\n1. [amountCom] will be ignored and will be replaced\
            \ with Lemonway's fee  \r\n2. You will not receive any fee"
          type: boolean
      required:
      - Count
      - accountId
      - subscriptionId
      type: object
    MoneyInSubscriptionInitOutput:
      example:
        transactions:
          value:
          - ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
            date: 2
            executionDate: 3
            scheduledDate: scheduledDate
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            maskedLabel: maskedLabel
            reference: reference
            remainingAmount: 2
            bankReference: bankReference
            buyNowPayLaterInfo:
              type: type
              paymentPlanId: 5
              deferredPaymentDate: deferredPaymentDate
              secondInstallmentPaymentDate: secondInstallmentPaymentDate
            id: 1
            receiverAccountId: receiverAccountId
            refundAmount: 6.027456183070403
            method: 5
            substatus: substatus
            methodDetails: 5
            PSP:
              message: message
            threeDS:
              threeDSResult: threeDSResult
              threeDSModeRequested: threeDSModeRequested
            ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
            ChequeSendingAddress_Street: ChequeSendingAddress_Street
            ChequeSendingAddress_City: ChequeSendingAddress_City
            bankStatus: bankStatus
            scheduledNumber: scheduledNumber
            comment: comment
            creditAmount: 0
            card:
              country: country
              maskedNumber: maskedNumber
              holderName: holderName
              authorizationNumber: authorizationNumber
              is3DS: true
              expiration: expiration
              isRegistered: true
              id: 6
              type: type
            commissionAmount: 7
            status: 9
          - ChequeSendingAddress_CorporateName: ChequeSendingAddress_CorporateName
            date: 2
            executionDate: 3
            scheduledDate: scheduledDate
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            maskedLabel: maskedLabel
            reference: reference
            remainingAmount: 2
            bankReference: bankReference
            buyNowPayLaterInfo:
              type: type
              paymentPlanId: 5
              deferredPaymentDate: deferredPaymentDate
              secondInstallmentPaymentDate: secondInstallmentPaymentDate
            id: 1
            receiverAccountId: receiverAccountId
            refundAmount: 6.027456183070403
            method: 5
            substatus: substatus
            methodDetails: 5
            PSP:
              message: message
            threeDS:
              threeDSResult: threeDSResult
              threeDSModeRequested: threeDSModeRequested
            ChequeSendingAddress_PostCode: ChequeSendingAddress_PostCode
            ChequeSendingAddress_Street: ChequeSendingAddress_Street
            ChequeSendingAddress_City: ChequeSendingAddress_City
            bankStatus: bankStatus
            scheduledNumber: scheduledNumber
            comment: comment
            creditAmount: 0
            card:
              country: country
              maskedNumber: maskedNumber
              holderName: holderName
              authorizationNumber: authorizationNumber
              is3DS: true
              expiration: expiration
              isRegistered: true
              id: 6
              type: type
            commissionAmount: 7
            status: 9
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        transactions:
          $ref: '#/components/schemas/Transactions_TransactionIn'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    DisableIBANInput:
      example:
        wallet: "33612345678"
      properties:
        wallet:
          description: Payment Account ID
          maxLength: 256
          minLength: 0
          type: string
      required:
      - wallet
      type: object
    DisableIBANOutput:
      example:
        id: 0
        error:
          code: 2
          message: message
          psp:
            message: message
        status: 6
      properties:
        id:
          description: IBAN ID
          format: int64
          type: integer
        status:
          description: IBAN Status
          format: int32
          type: integer
        error:
          $ref: '#/components/schemas/Error'
      type: object
    MoneyIn3DAuthenticateInput:
      example:
        card:
          cardType: 1
          cardNumber: "4716202982346875"
          cardCode: "123"
          cardDate: 07/2027
        md: 1Ok9dCP55UUkWfdJwEid
        pares: eJxVkdtSwjAQhl+lwwM0SY+EWTKDgsKMICIgXGbaV
      properties:
        card:
          $ref: '#/components/schemas/CardInfo'
        md:
          description: MD Data Returned by 3-D Secure Site
          type: string
        pares:
          description: Pares Data Returned by 3-D Secure Authentication Website
          type: string
        specialConfig:
          description: Leave Empty
          type: string
      type: object
    MoneyIn3DAuthenticateOutput:
      example:
        Operation3DCode: Operation3DCode
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        Operation3DCode:
          description: "Mercanet return code:\r\n00: Authenticated owner\r\n55: Owner\
            \ not authenticated\r\n62: Owner By-pass on ACS"
          type: string
        error:
          $ref: '#/components/schemas/Error'
      type: object
    AccountIbansOutput:
      example:
        ibans:
        - iban: iban
          holder: holder
          id: 6
          type: 5
          status: 1
          swift: swift
        - iban: iban
          holder: holder
          id: 6
          type: 5
          status: 1
          swift: swift
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        ibans:
          description: List of documents that changed since the entry date.
          items:
            $ref: '#/components/schemas/Iban'
          type: array
        error:
          $ref: '#/components/schemas/Error'
      type: object
    GetMoneyOutTransDetailsInput:
      properties:
        transactionid:
          description: Money-Out ID
          format: int64
          type: integer
        transactionComment:
          description: Money-Out Comment
          maxLength: 140
          minLength: 0
          type: string
        reference:
          description: Unique ID Generated by your Server
          maxLength: 50
          minLength: 0
          type: string
      type: object
    GetMoneyOutTransDetailsOutput:
      example:
        _links:
          next:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          last:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          previous:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          self:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          first:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
        transactions:
          value:
          - date: 2
            method: 6
            IbanId: 9
            executionDate: 5
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            debitAmount: 8
            methodDetails: 1
            PSP:
              message: message
            senderAccountId: senderAccountId
            maskedLabel: maskedLabel
            reference: reference
            originId: 6
            bankStatus: bankStatus
            buyNowPayLaterInfo:
              type: type
              paymentPlanId: 5
              deferredPaymentDate: deferredPaymentDate
              secondInstallmentPaymentDate: secondInstallmentPaymentDate
            comment: comment
            id: 3
            commissionAmount: 6
            status: 6
          - date: 2
            method: 6
            IbanId: 9
            executionDate: 5
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            debitAmount: 8
            methodDetails: 1
            PSP:
              message: message
            senderAccountId: senderAccountId
            maskedLabel: maskedLabel
            reference: reference
            originId: 6
            bankStatus: bankStatus
            buyNowPayLaterInfo:
              type: type
              paymentPlanId: 5
              deferredPaymentDate: deferredPaymentDate
              secondInstallmentPaymentDate: secondInstallmentPaymentDate
            comment: comment
            id: 3
            commissionAmount: 6
            status: 6
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        transactions:
          $ref: '#/components/schemas/Transactions_TransactionOut'
        _links:
          $ref: '#/components/schemas/Links'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    Transactions_TransactionOut:
      example:
        value:
        - date: 2
          method: 6
          IbanId: 9
          executionDate: 5
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          debitAmount: 8
          methodDetails: 1
          PSP:
            message: message
          senderAccountId: senderAccountId
          maskedLabel: maskedLabel
          reference: reference
          originId: 6
          bankStatus: bankStatus
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          comment: comment
          id: 3
          commissionAmount: 6
          status: 6
        - date: 2
          method: 6
          IbanId: 9
          executionDate: 5
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          debitAmount: 8
          methodDetails: 1
          PSP:
            message: message
          senderAccountId: senderAccountId
          maskedLabel: maskedLabel
          reference: reference
          originId: 6
          bankStatus: bankStatus
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          comment: comment
          id: 3
          commissionAmount: 6
          status: 6
      properties:
        value:
          items:
            $ref: '#/components/schemas/TransactionOut'
          type: array
      type: object
    MoneyOutInput:
      example:
        accountId: "33612345678"
        ibanId: 253
        totalAmount: 1500
        commissionAmount: 300
        comment: Order number 2457765AX2
        autoCommission: false
        reference: Dze8778
      properties:
        accountId:
          description: Payment Account ID to be debited
          maxLength: 256
          minLength: 0
          type: string
        ibanId:
          description: "IBAN ID\r\nIf no IBAN is specified, the last verified(validated)\
            \ IBAN will be used."
          format: int64
          type: integer
        totalAmount:
          description: "Total amount to debit from the Wallet\r\nThe client will receive\
            \ on his bank account[totalAmount] minus[commissionAmount].\r\nAmounts\
            \ are given as integer numbers in cents"
          format: int32
          type: integer
        commissionAmount:
          description: "Your fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Payment Comment
          maxLength: 140
          minLength: 0
          type: string
        autoCommission:
          description: "This should be set to No (0) for most sites\r\nIf true:\r\n\
            1. [amountCom] will be ignored and will be replaced with Lemonway's fee.\r\
            \n2. You will not receive any fee."
          type: boolean
        reference:
          description: "Unique ID of the call, generated by your server. This ID can\
            \ be used as a search field when looking for operation details"
          maxLength: 50
          minLength: 0
          type: string
      required:
      - accountId
      - autoCommission
      type: object
    MoneyOutOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        transaction:
          date: 2
          method: 6
          IbanId: 9
          executionDate: 5
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          debitAmount: 8
          methodDetails: 1
          PSP:
            message: message
          senderAccountId: senderAccountId
          maskedLabel: maskedLabel
          reference: reference
          originId: 6
          bankStatus: bankStatus
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          comment: comment
          id: 3
          commissionAmount: 6
          status: 6
      properties:
        transaction:
          $ref: '#/components/schemas/TransactionOut'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    CancelMoneyOutInput:
      example:
        accountId: Pizza75
      properties:
        accountId:
          description: Payment Account ID
          maxLength: 256
          minLength: 1
          type: string
      type: object
    CancelMoneyOutOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        transaction:
          date: 2
          method: 6
          IbanId: 9
          executionDate: 5
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          debitAmount: 8
          methodDetails: 1
          PSP:
            message: message
          senderAccountId: senderAccountId
          maskedLabel: maskedLabel
          reference: reference
          originId: 6
          bankStatus: bankStatus
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          comment: comment
          id: 3
          commissionAmount: 6
          status: 6
      properties:
        transaction:
          $ref: '#/components/schemas/TransactionOut'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    UnregisterIBANInput:
      example:
        wallet: "33612345678"
      properties:
        wallet:
          description: Payment Account ID
          maxLength: 256
          minLength: 0
          type: string
      required:
      - wallet
      type: object
    UnregisterIBANOutput:
      example:
        id: 0
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        id:
          format: int64
          type: integer
        error:
          $ref: '#/components/schemas/Error'
      type: object
    RegisterIBANInput:
      example:
        accountId: "33612345678"
        holder: Jean Dupont
        bic: ABCDEFGHIJK
        iban: FR1420041010050500013M02606
        domiciliation1: SOMEBANK MONTREUIL
        domiciliation2: 56 rue de Lays
        comment: Previous bank account closed
      properties:
        accountId:
          description: Payment Account ID
          maxLength: 256
          minLength: 0
          type: string
        holder:
          description: "Registered Bank Account Owner: First and Last name, or Company\
            \ Name"
          maxLength: 256
          minLength: 0
          type: string
        bic:
          description: "BIC/SWIFT Codes are arranged like this : AAAABBCCDDD\r\nAAAA\
            \ : 4 char for bank code\r\nBB : 2 char for country code\r\nCC : 2 char\
            \ for location code\r\nDDD : 3 char for branch code"
          maxLength: 11
          minLength: 8
          type: string
        iban:
          description: IBAN
          maxLength: 34
          minLength: 15
          type: string
        domiciliation1:
          description: Bank Address Line 1
          maxLength: 256
          minLength: 1
          type: string
        domiciliation2:
          description: Bank Address Line 2
          maxLength: 256
          minLength: 1
          type: string
        comment:
          description: Reason for new IBAN if another IBAN is already linked to the
            Payment Account
          maxLength: 512
          minLength: 1
          type: string
      required:
      - accountId
      - holder
      - iban
      type: object
    RegisterIBANOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        ibanId: 0
        status: 6
      properties:
        ibanId:
          description: IBAN ID
          format: int64
          type: integer
        status:
          description: "IBAN Status<br/>1 = None.<br/>2 = Internal.<br/>3 = Not used.<br/>4\
            \ = Waiting to be verified by Lemon Way.<br/>5 = Activated.<br/>6 = Rejected\
            \ by the bank.<br/>7 = Rejected, no owner.<br/>8 = Deactivated.<br/>9\
            \ = Rejected.<br/>"
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          format: int32
          type: integer
        error:
          $ref: '#/components/schemas/Error'
      type: object
    RegisterIBANExtendedInput:
      example:
        wallet: "33612345678"
        accountType: 1
        holderName: Jean Dupont
        accountNumber: FR1420041010050500013M02606
        holderCountry: US
        bicCode: "0002029205"
        bankName: CHBFSFCU
        bankCountry: US
        intermediaryBicCode: IRVTDEFX
        intermediaryBankName: Bank OF NEW YORK MELLON
        intermediaryBankCountry: DE
        comment: Previous bank account closed
      properties:
        wallet:
          description: Payment Account ID
          maxLength: 256
          minLength: 0
          type: string
        accountType:
          description: "Account Type, by default Other<br/>0 = Other.<br/>1 = IBAN.<br/>2\
            \ = BBAN/RIB.<br/>"
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        holderName:
          description: "The registered bank account owner: First and Last name, or\
            \ Company Name"
          maxLength: 256
          minLength: 0
          type: string
        accountNumber:
          description: Account Number. The format depends on the account type.
          maxLength: 34
          minLength: 0
          type: string
        holderCountry:
          description: "Country of the beneficiary. Two-letter country code (ISO alpha-2)\
            \ for example, France=<b>FR</b>"
          maxLength: 2
          minLength: 2
          type: string
        bicCode:
          description: "BIC/SWIFT codes are arranged like this: AAAABBCCDDD\r\nAAAA:\
            \ 4 character for bank code\r\nBB: 2 char for country code\r\nCC: 2 char\
            \ for location code\r\nDDD: 3 char for branch code"
          maxLength: 11
          minLength: 8
          type: string
        bankName:
          description: "Bank Name. This field is mandatory in the following circumstances:\r\
            \n<ul><li>If the currency is USD</li><li>If the selected bank country\
            \ code requires this field</li></ul>"
          maxLength: 140
          minLength: 0
          type: string
        bankCountry:
          description: "Country of the Bank. Two-letter country code (ISO alpha-2)\
            \ for example, France=<b>FR</b>"
          maxLength: 2
          minLength: 2
          type: string
        bankBranchCode:
          description: "Bank Branch Code (Sort Code in the United Kingdom). It is\
            \ mandatory for the examples below:\r\n<ul><li>If the selected bank country\
            \ code requires this field.</li></ul>"
          maxLength: 255
          minLength: 0
          type: string
        bankBranchAddress:
          $ref: '#/components/schemas/BankBranchAddress'
        intermediaryBicCode:
          description: BIC/SWIFT Code of the Intermediary Bank.
          maxLength: 11
          minLength: 0
          type: string
        intermediaryBankName:
          description: Intermediary Bank Name
          maxLength: 140
          minLength: 0
          type: string
        intermediaryBankCountry:
          description: "Bank Country Code of the Intermediary Bank. Two-letter country\
            \ code (ISO alpha-2) for example, France=<b>FR</b>"
          maxLength: 2
          minLength: 2
          type: string
        comment:
          description: Reason for new Bank Account details if another one is already
            linked to the Payment Account.
          maxLength: 512
          minLength: 1
          type: string
      required:
      - accountNumber
      - bankCountry
      - holderName
      - wallet
      type: object
    BankBranchAddress:
      properties:
        Street:
          description: Number and Street
          maxLength: 128
          minLength: 0
          type: string
        ZipCode:
          description: Postal or Zip Code
          maxLength: 16
          minLength: 0
          type: string
        City:
          description: City
          maxLength: 128
          minLength: 0
          type: string
      required:
      - City
      - Street
      - ZipCode
      type: object
    RegisterIBANExtendedOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        ibanId: 0
        status: 6
      properties:
        ibanId:
          description: IBAN ID
          format: int64
          type: integer
        status:
          description: "IBAN Status<br/>1 = None.<br/>2 = Internal.<br/>3 = Not used.<br/>4\
            \ = Waiting to be verified by Lemon Way.<br/>5 = Activated.<br/>6 = Rejected\
            \ by the bank.<br/>7 = Rejected, no owner.<br/>8 = Deactivated.<br/>9\
            \ = Rejected.<br/>"
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          format: int32
          type: integer
        error:
          $ref: '#/components/schemas/Error'
      type: object
    GetPaymentDetailsInput:
      description: ""
      properties:
        transactionId:
          description: Transaction ID
          format: int64
          type: integer
        transactionComment:
          description: Transaction Comment
          maxLength: 140
          minLength: 0
          type: string
        reference:
          description: Unique ID generated by your server
          maxLength: 36
          minLength: 0
          type: string
        privateData:
          $ref: '#/components/schemas/PrivateData'
      type: object
    GetPaymentDetailsOutput:
      example:
        _links:
          next:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          last:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          previous:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          self:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          first:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
        transactions:
          value:
          - isFee: true
            date: 6
            method: 0
            executionDate: 8
            scheduledDate: scheduledDate
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            debitAmount: 6
            methodDetails: 7
            feeReference: 3
            senderAccountId: senderAccountId
            privateData:
              value:
              - value
              - value
            reference: reference
            comment: comment
            id: 7
            creditAmount: 3
            receiverAccountId: receiverAccountId
            commissionAmount: 0
            status: 4
          - isFee: true
            date: 6
            method: 0
            executionDate: 8
            scheduledDate: scheduledDate
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            debitAmount: 6
            methodDetails: 7
            feeReference: 3
            senderAccountId: senderAccountId
            privateData:
              value:
              - value
              - value
            reference: reference
            comment: comment
            id: 7
            creditAmount: 3
            receiverAccountId: receiverAccountId
            commissionAmount: 0
            status: 4
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        transactions:
          $ref: '#/components/schemas/Transactions_TransactionP2P'
        _links:
          $ref: '#/components/schemas/Links'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    Transactions_TransactionP2P:
      example:
        value:
        - isFee: true
          date: 6
          method: 0
          executionDate: 8
          scheduledDate: scheduledDate
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          debitAmount: 6
          methodDetails: 7
          feeReference: 3
          senderAccountId: senderAccountId
          privateData:
            value:
            - value
            - value
          reference: reference
          comment: comment
          id: 7
          creditAmount: 3
          receiverAccountId: receiverAccountId
          commissionAmount: 0
          status: 4
        - isFee: true
          date: 6
          method: 0
          executionDate: 8
          scheduledDate: scheduledDate
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          debitAmount: 6
          methodDetails: 7
          feeReference: 3
          senderAccountId: senderAccountId
          privateData:
            value:
            - value
            - value
          reference: reference
          comment: comment
          id: 7
          creditAmount: 3
          receiverAccountId: receiverAccountId
          commissionAmount: 0
          status: 4
      properties:
        value:
          items:
            $ref: '#/components/schemas/TransactionP2P'
          type: array
      type: object
    SendPaymentInput:
      example:
        debitAccountId: "33612345678"
        creditAccountId: taxi67
        amount: 1500
        comment: Order number 2457765AX2
        scheduledDate: 2025/07/04
        privateData:
          value:
          - My data 1
          - My data 2
          - My data 3
          - ""
          - My data 5
        originTransactionId: 4086
      properties:
        debitAccountId:
          description: Account ID to be Debited
          maxLength: 256
          minLength: 0
          type: string
        creditAccountId:
          description: Account ID to Credited
          maxLength: 256
          minLength: 0
          type: string
        amount:
          description: Payment Amount
          format: int32
          type: integer
        comment:
          description: Payment Comment
          maxLength: 140
          minLength: 0
          type: string
        scheduledDate:
          description: "If scheduledDate is set, the following rules will apply:\r\
            \n1. ScheduledDate cannot be equal to the current date, Paris time (CET).\r\
            \n2. The payment will be inserted but not executed, the status will be\
            \ pending and necessary checks like user balance or user status will not\
            \ be checked.\r\n3. At 1am, Paris time (CET), on [scheduledDate], the\
            \ checks will be performed and the payment will be finalized.\r\n**This\
            \ feature is only available for some partners, contact commercial services\
            \ for more information.**"
          pattern: "^[12]\\d{3}\\/(0[1-9]|1[0-2])\\/(0[1-9]|[12]\\d|3[01])$"
          type: string
        privateData:
          $ref: '#/components/schemas/PrivateData'
        originTransactionId:
          description: Origin Transaction Identification
          format: int32
          type: integer
        reference:
          maxLength: 36
          minLength: 0
          type: string
      required:
      - creditAccountId
      - debitAccountId
      type: object
    SendPaymentOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        transaction:
          isFee: true
          date: 6
          method: 0
          executionDate: 8
          scheduledDate: scheduledDate
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          debitAmount: 6
          methodDetails: 7
          feeReference: 3
          senderAccountId: senderAccountId
          privateData:
            value:
            - value
            - value
          reference: reference
          comment: comment
          id: 7
          creditAmount: 3
          receiverAccountId: receiverAccountId
          commissionAmount: 0
          status: 4
      properties:
        transaction:
          $ref: '#/components/schemas/TransactionP2P'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    RefundMoneyInInput:
      example:
        amountToRefund: 1500
        comment: Never received the PO 12366GG
      properties:
        amountToRefund:
          description: "Refund Amount. If empty, the total amount of the payment will\
            \ be refunded."
          format: int32
          type: integer
        comment:
          description: "Comment on the refund. \r\n**Explain the reason for the refunded\
            \ amount** \r\n**Note:** In the API Response displayed before the comment\
            \ will appear the refund transaction id. Example: comment\": \"Refund\
            \ 2763789 Items not wanted\""
          maxLength: 140
          minLength: 0
          type: string
      type: object
    RefundMoneyInOutput:
      example:
        error:
          code: 2
          message: message
          psp:
            message: message
        transaction:
          date: 9
          method: 2
          IbanId: 1
          executionDate: 2
          lemonWayCommission:
            amount: 7
            idp2p: idp2p
          debitAmount: 6
          methodDetails: 7
          PSP:
            message: message
          senderAccountId: senderAccountId
          maskedLabel: maskedLabel
          reference: reference
          originId: 5
          bankStatus: bankStatus
          buyNowPayLaterInfo:
            type: type
            paymentPlanId: 5
            deferredPaymentDate: deferredPaymentDate
            secondInstallmentPaymentDate: secondInstallmentPaymentDate
          comment: comment
          id: 5
          status: 0
          commissionAmount: 3
      properties:
        transaction:
          $ref: '#/components/schemas/TransactionRefund'
        error:
          $ref: '#/components/schemas/Error'
      type: object
    TransactionRefund:
      example:
        date: 9
        method: 2
        IbanId: 1
        executionDate: 2
        lemonWayCommission:
          amount: 7
          idp2p: idp2p
        debitAmount: 6
        methodDetails: 7
        PSP:
          message: message
        senderAccountId: senderAccountId
        maskedLabel: maskedLabel
        reference: reference
        originId: 5
        bankStatus: bankStatus
        buyNowPayLaterInfo:
          type: type
          paymentPlanId: 5
          deferredPaymentDate: deferredPaymentDate
          secondInstallmentPaymentDate: secondInstallmentPaymentDate
        comment: comment
        id: 5
        status: 0
        commissionAmount: 3
      properties:
        status:
          description: "0: Success\r\n4: Pending\r\n6: PSP Error"
          format: int32
          type: integer
        senderAccountId:
          description: Debited Account
          type: string
        debitAmount:
          description: "Debited Amount\r\nAmounts are represented in cents (Euros)"
          format: int32
          type: integer
        IbanId:
          description: IBAN ID
          format: int64
          type: integer
        maskedLabel:
          type: string
        bankStatus:
          type: string
        PSP:
          $ref: '#/components/schemas/PSP'
        originId:
          description: Money-In - ID responsible for the chargeback
          format: int64
          type: integer
        buyNowPayLaterInfo:
          $ref: '#/components/schemas/BnplInfo'
        id:
          description: Transaction ID
          format: int64
          type: integer
        method:
          description: "Payment Method  \r\n0 Card    \r\n1 Bank transfer (MoneyIn)\
            \     \r\n3 Bank transfer (MoneyOut)     \r\n4 P2P    \r\n13 iDEAL   \
            \ \r\n14 SEPA DirectDebit    \r\n15 Cheque    \r\n19 Multibanco    \r\n\
            21 MBWAY    \r\n30 BNPL  \r\n35 PayPal\r\n\r\n ---\r\n **Important:**\
            \ The following services have been discontinued. \r\n \r\n16 Neosurf \
            \ \r\n17 Sofort  \r\n18 PFS Physical Card  \r\n20 Payshop  \r\n22 Polish\
            \ Instant Transfer  \r\n23 Pagare  \r\n24 MobilePay\r\n25 Paytrail\r\n\
            26 WeChat  \r\n27 P24  \r\n28 MoneyIn by TPE  \r\n29 Trustly"
          format: int32
          type: integer
        methodDetails:
          description: "Payment Method Details\r\n0 Standard\r\n1 Pay By Bank<br/>0\
            \ = STANDARD.<br/>1 = PAY_BY_BANK.<br/>"
          enum:
          - 0
          - 1
          format: int32
          type: integer
        date:
          description: "Transaction initialization date, UTC Unix timestamp"
          format: int32
          type: integer
        commissionAmount:
          description: "Your fee\r\nAmounts are given as integer numbers in cents"
          format: int32
          type: integer
        comment:
          description: Comment
          type: string
        executionDate:
          description: Transaction execution date
          format: int32
          type: integer
        lemonWayCommission:
          $ref: '#/components/schemas/LemonWayCommission'
        reference:
          description: Unique ID generated by your server
          type: string
      type: object
    RefundMoneyInCreateInput:
      example:
        linkedP2pIds:
        - 1
        - 61
        - 80
        - 33
        - 98
        - 87
        transactionDateTime: "1751620529"
        amountToRefund: 1500
        comment: Never received the PO 12366GG
      properties:
        linkedP2pIds:
          description: P2P transactions linked to Money-In refund.
          items:
            format: int64
            type: integer
          type: array
        transactionDateTime:
          description: Transaction DateTime (UTC Unix timestamp)
          pattern: "^-?\\d{1,12}$"
          type: string
        amountToRefund:
          description: "Refund Amount. If empty, the total amount of the payment will\
            \ be refunded."
          format: int32
          type: integer
        comment:
          description: "Comment on the refund. \r\n**Explain the reason for the refunded\
            \ amount** \r\n**Note:** In the API Response displayed before the comment\
            \ will appear the refund transaction id. Example: comment\": \"Refund\
            \ 2763789 Items not wanted\""
          maxLength: 140
          minLength: 0
          type: string
      required:
      - linkedP2pIds
      type: object
    GetChargebacksInput:
      properties:
        updateDate:
          description: UTC Unix timestamp
          pattern: "^-?\\d{1,12}$"
          type: string
      required:
      - updateDate
      type: object
    GetChargebacksOutput:
      example:
        _links:
          next:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          last:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          previous:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          self:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
          first:
            hreflang: hreflang
            templated: true
            method: method
            profile: profile
            name: name
            href: href
            type: type
            deprecation: deprecation
            title: title
        transactions:
          value:
          - date: 2
            method: 6
            IbanId: 9
            executionDate: 5
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            debitAmount: 8
            methodDetails: 1
            PSP:
              message: message
            senderAccountId: senderAccountId
            maskedLabel: maskedLabel
            reference: reference
            originId: 6
            bankStatus: bankStatus
            buyNowPayLaterInfo:
              type: type
              paymentPlanId: 5
              deferredPaymentDate: deferredPaymentDate
              secondInstallmentPaymentDate: secondInstallmentPaymentDate
            comment: comment
            id: 3
            commissionAmount: 6
            status: 6
          - date: 2
            method: 6
            IbanId: 9
            executionDate: 5
            lemonWayCommission:
              amount: 7
              idp2p: idp2p
            debitAmount: 8
            methodDetails: 1
            PSP:
              message: message
            senderAccountId: senderAccountId
            maskedLabel: maskedLabel
            reference: reference
            originId: 6
            bankStatus: bankStatus
            buyNowPayLaterInfo:
              type: type
              paymentPlanId: 5
              deferredPaymentDate: deferredPaymentDate
              secondInstallmentPaymentDate: secondInstallmentPaymentDate
            comment: comment
            id: 3
            commissionAmount: 6
            status: 6
        error:
          code: 2
          message: message
          psp:
            message: message
      properties:
        transactions:
          $ref: '#/components/schemas/Transactions_TransactionOut'
        _links:
          $ref: '#/components/schemas/Links'
        error:
          $ref: '#/components/schemas/Error'
      type: object
x-original-swagger-version: "2.0"
