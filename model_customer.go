/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Customer struct for Customer
type Customer struct {
	// Client account Id.
	AccountId string `json:"accountId"`
	// Client civility.    Possible values: `Mr` and `Ms`
	Civility string `json:"civility"`
	// Client first name.
	FirstName string `json:"firstName"`
	// Client last name.
	LastName string `json:"lastName"`
	// Client birth date.
	BirthDate *string `json:"birthDate,omitempty"`
	// Client phone number.
	MobileNumber string `json:"mobileNumber"`
	// Client email.
	Email string `json:"email"`
	// Client tax identification number.
	TaxIdentificationNumber *string `json:"taxIdentificationNumber,omitempty"`
	BillingAddress BnplAddress `json:"billingAddress"`
}

// NewCustomer instantiates a new Customer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomer(accountId string, civility string, firstName string, lastName string, mobileNumber string, email string, billingAddress BnplAddress) *Customer {
	this := Customer{}
	this.AccountId = accountId
	this.Civility = civility
	this.FirstName = firstName
	this.LastName = lastName
	this.MobileNumber = mobileNumber
	this.Email = email
	this.BillingAddress = billingAddress
	return &this
}

// NewCustomerWithDefaults instantiates a new Customer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerWithDefaults() *Customer {
	this := Customer{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *Customer) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *Customer) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *Customer) SetAccountId(v string) {
	o.AccountId = v
}

// GetCivility returns the Civility field value
func (o *Customer) GetCivility() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Civility
}

// GetCivilityOk returns a tuple with the Civility field value
// and a boolean to check if the value has been set.
func (o *Customer) GetCivilityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Civility, true
}

// SetCivility sets field value
func (o *Customer) SetCivility(v string) {
	o.Civility = v
}

// GetFirstName returns the FirstName field value
func (o *Customer) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *Customer) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *Customer) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *Customer) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *Customer) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *Customer) SetLastName(v string) {
	o.LastName = v
}

// GetBirthDate returns the BirthDate field value if set, zero value otherwise.
func (o *Customer) GetBirthDate() string {
	if o == nil || o.BirthDate == nil {
		var ret string
		return ret
	}
	return *o.BirthDate
}

// GetBirthDateOk returns a tuple with the BirthDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetBirthDateOk() (*string, bool) {
	if o == nil || o.BirthDate == nil {
		return nil, false
	}
	return o.BirthDate, true
}

// HasBirthDate returns a boolean if a field has been set.
func (o *Customer) HasBirthDate() bool {
	if o != nil && o.BirthDate != nil {
		return true
	}

	return false
}

// SetBirthDate gets a reference to the given string and assigns it to the BirthDate field.
func (o *Customer) SetBirthDate(v string) {
	o.BirthDate = &v
}

// GetMobileNumber returns the MobileNumber field value
func (o *Customer) GetMobileNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MobileNumber
}

// GetMobileNumberOk returns a tuple with the MobileNumber field value
// and a boolean to check if the value has been set.
func (o *Customer) GetMobileNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MobileNumber, true
}

// SetMobileNumber sets field value
func (o *Customer) SetMobileNumber(v string) {
	o.MobileNumber = v
}

// GetEmail returns the Email field value
func (o *Customer) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *Customer) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *Customer) SetEmail(v string) {
	o.Email = v
}

// GetTaxIdentificationNumber returns the TaxIdentificationNumber field value if set, zero value otherwise.
func (o *Customer) GetTaxIdentificationNumber() string {
	if o == nil || o.TaxIdentificationNumber == nil {
		var ret string
		return ret
	}
	return *o.TaxIdentificationNumber
}

// GetTaxIdentificationNumberOk returns a tuple with the TaxIdentificationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetTaxIdentificationNumberOk() (*string, bool) {
	if o == nil || o.TaxIdentificationNumber == nil {
		return nil, false
	}
	return o.TaxIdentificationNumber, true
}

// HasTaxIdentificationNumber returns a boolean if a field has been set.
func (o *Customer) HasTaxIdentificationNumber() bool {
	if o != nil && o.TaxIdentificationNumber != nil {
		return true
	}

	return false
}

// SetTaxIdentificationNumber gets a reference to the given string and assigns it to the TaxIdentificationNumber field.
func (o *Customer) SetTaxIdentificationNumber(v string) {
	o.TaxIdentificationNumber = &v
}

// GetBillingAddress returns the BillingAddress field value
func (o *Customer) GetBillingAddress() BnplAddress {
	if o == nil {
		var ret BnplAddress
		return ret
	}

	return o.BillingAddress
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value
// and a boolean to check if the value has been set.
func (o *Customer) GetBillingAddressOk() (*BnplAddress, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingAddress, true
}

// SetBillingAddress sets field value
func (o *Customer) SetBillingAddress(v BnplAddress) {
	o.BillingAddress = v
}

func (o Customer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if true {
		toSerialize["civility"] = o.Civility
	}
	if true {
		toSerialize["firstName"] = o.FirstName
	}
	if true {
		toSerialize["lastName"] = o.LastName
	}
	if o.BirthDate != nil {
		toSerialize["birthDate"] = o.BirthDate
	}
	if true {
		toSerialize["mobileNumber"] = o.MobileNumber
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if o.TaxIdentificationNumber != nil {
		toSerialize["taxIdentificationNumber"] = o.TaxIdentificationNumber
	}
	if true {
		toSerialize["billingAddress"] = o.BillingAddress
	}
	return json.Marshal(toSerialize)
}

type NullableCustomer struct {
	value *Customer
	isSet bool
}

func (v NullableCustomer) Get() *Customer {
	return v.value
}

func (v *NullableCustomer) Set(val *Customer) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomer) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomer(val *Customer) *NullableCustomer {
	return &NullableCustomer{value: val, isSet: true}
}

func (v NullableCustomer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


