/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RefundMoneyInCreateInput struct for RefundMoneyInCreateInput
type RefundMoneyInCreateInput struct {
	// P2P transactions linked to Money-In refund.
	LinkedP2pIds []int64 `json:"linkedP2pIds"`
	// Transaction DateTime (UTC Unix timestamp)
	TransactionDateTime *string `json:"transactionDateTime,omitempty"`
	// Refund Amount. If empty, the total amount of the payment will be refunded.
	AmountToRefund *int32 `json:"amountToRefund,omitempty"`
	// Comment on the refund.   **Explain the reason for the refunded amount**   **Note:** In the API Response displayed before the comment will appear the refund transaction id. Example: comment\": \"Refund 2763789 Items not wanted\"
	Comment *string `json:"comment,omitempty"`
}

// NewRefundMoneyInCreateInput instantiates a new RefundMoneyInCreateInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefundMoneyInCreateInput(linkedP2pIds []int64) *RefundMoneyInCreateInput {
	this := RefundMoneyInCreateInput{}
	this.LinkedP2pIds = linkedP2pIds
	return &this
}

// NewRefundMoneyInCreateInputWithDefaults instantiates a new RefundMoneyInCreateInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefundMoneyInCreateInputWithDefaults() *RefundMoneyInCreateInput {
	this := RefundMoneyInCreateInput{}
	return &this
}

// GetLinkedP2pIds returns the LinkedP2pIds field value
func (o *RefundMoneyInCreateInput) GetLinkedP2pIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.LinkedP2pIds
}

// GetLinkedP2pIdsOk returns a tuple with the LinkedP2pIds field value
// and a boolean to check if the value has been set.
func (o *RefundMoneyInCreateInput) GetLinkedP2pIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LinkedP2pIds, true
}

// SetLinkedP2pIds sets field value
func (o *RefundMoneyInCreateInput) SetLinkedP2pIds(v []int64) {
	o.LinkedP2pIds = v
}

// GetTransactionDateTime returns the TransactionDateTime field value if set, zero value otherwise.
func (o *RefundMoneyInCreateInput) GetTransactionDateTime() string {
	if o == nil || o.TransactionDateTime == nil {
		var ret string
		return ret
	}
	return *o.TransactionDateTime
}

// GetTransactionDateTimeOk returns a tuple with the TransactionDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefundMoneyInCreateInput) GetTransactionDateTimeOk() (*string, bool) {
	if o == nil || o.TransactionDateTime == nil {
		return nil, false
	}
	return o.TransactionDateTime, true
}

// HasTransactionDateTime returns a boolean if a field has been set.
func (o *RefundMoneyInCreateInput) HasTransactionDateTime() bool {
	if o != nil && o.TransactionDateTime != nil {
		return true
	}

	return false
}

// SetTransactionDateTime gets a reference to the given string and assigns it to the TransactionDateTime field.
func (o *RefundMoneyInCreateInput) SetTransactionDateTime(v string) {
	o.TransactionDateTime = &v
}

// GetAmountToRefund returns the AmountToRefund field value if set, zero value otherwise.
func (o *RefundMoneyInCreateInput) GetAmountToRefund() int32 {
	if o == nil || o.AmountToRefund == nil {
		var ret int32
		return ret
	}
	return *o.AmountToRefund
}

// GetAmountToRefundOk returns a tuple with the AmountToRefund field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefundMoneyInCreateInput) GetAmountToRefundOk() (*int32, bool) {
	if o == nil || o.AmountToRefund == nil {
		return nil, false
	}
	return o.AmountToRefund, true
}

// HasAmountToRefund returns a boolean if a field has been set.
func (o *RefundMoneyInCreateInput) HasAmountToRefund() bool {
	if o != nil && o.AmountToRefund != nil {
		return true
	}

	return false
}

// SetAmountToRefund gets a reference to the given int32 and assigns it to the AmountToRefund field.
func (o *RefundMoneyInCreateInput) SetAmountToRefund(v int32) {
	o.AmountToRefund = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *RefundMoneyInCreateInput) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefundMoneyInCreateInput) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *RefundMoneyInCreateInput) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *RefundMoneyInCreateInput) SetComment(v string) {
	o.Comment = &v
}

func (o RefundMoneyInCreateInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["linkedP2pIds"] = o.LinkedP2pIds
	}
	if o.TransactionDateTime != nil {
		toSerialize["transactionDateTime"] = o.TransactionDateTime
	}
	if o.AmountToRefund != nil {
		toSerialize["amountToRefund"] = o.AmountToRefund
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	return json.Marshal(toSerialize)
}

type NullableRefundMoneyInCreateInput struct {
	value *RefundMoneyInCreateInput
	isSet bool
}

func (v NullableRefundMoneyInCreateInput) Get() *RefundMoneyInCreateInput {
	return v.value
}

func (v *NullableRefundMoneyInCreateInput) Set(val *RefundMoneyInCreateInput) {
	v.value = val
	v.isSet = true
}

func (v NullableRefundMoneyInCreateInput) IsSet() bool {
	return v.isSet
}

func (v *NullableRefundMoneyInCreateInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefundMoneyInCreateInput(val *RefundMoneyInCreateInput) *NullableRefundMoneyInCreateInput {
	return &NullableRefundMoneyInCreateInput{value: val, isSet: true}
}

func (v NullableRefundMoneyInCreateInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefundMoneyInCreateInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


