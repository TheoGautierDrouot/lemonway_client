/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BnplDelivery struct for BnplDelivery
type BnplDelivery struct {
	// Possible values:     `CollectionOfTheGoodsInTheMerchantStore`  `CollectionInAThirdPartyPoint`  `DeliveryToCustomerAddress`
	DeliveryMode string `json:"deliveryMode"`
	ExpressDelivery bool `json:"expressDelivery"`
	DeliveryAddress BnplAddress `json:"deliveryAddress"`
	// Pickup name or recipient name.  Mandatory only if DeliveryMode is not \"DeliveryToCustomerAddress\".
	DeliveryPointName *string `json:"deliveryPointName,omitempty"`
}

// NewBnplDelivery instantiates a new BnplDelivery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBnplDelivery(deliveryMode string, expressDelivery bool, deliveryAddress BnplAddress) *BnplDelivery {
	this := BnplDelivery{}
	this.DeliveryMode = deliveryMode
	this.ExpressDelivery = expressDelivery
	this.DeliveryAddress = deliveryAddress
	return &this
}

// NewBnplDeliveryWithDefaults instantiates a new BnplDelivery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBnplDeliveryWithDefaults() *BnplDelivery {
	this := BnplDelivery{}
	return &this
}

// GetDeliveryMode returns the DeliveryMode field value
func (o *BnplDelivery) GetDeliveryMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeliveryMode
}

// GetDeliveryModeOk returns a tuple with the DeliveryMode field value
// and a boolean to check if the value has been set.
func (o *BnplDelivery) GetDeliveryModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeliveryMode, true
}

// SetDeliveryMode sets field value
func (o *BnplDelivery) SetDeliveryMode(v string) {
	o.DeliveryMode = v
}

// GetExpressDelivery returns the ExpressDelivery field value
func (o *BnplDelivery) GetExpressDelivery() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ExpressDelivery
}

// GetExpressDeliveryOk returns a tuple with the ExpressDelivery field value
// and a boolean to check if the value has been set.
func (o *BnplDelivery) GetExpressDeliveryOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpressDelivery, true
}

// SetExpressDelivery sets field value
func (o *BnplDelivery) SetExpressDelivery(v bool) {
	o.ExpressDelivery = v
}

// GetDeliveryAddress returns the DeliveryAddress field value
func (o *BnplDelivery) GetDeliveryAddress() BnplAddress {
	if o == nil {
		var ret BnplAddress
		return ret
	}

	return o.DeliveryAddress
}

// GetDeliveryAddressOk returns a tuple with the DeliveryAddress field value
// and a boolean to check if the value has been set.
func (o *BnplDelivery) GetDeliveryAddressOk() (*BnplAddress, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeliveryAddress, true
}

// SetDeliveryAddress sets field value
func (o *BnplDelivery) SetDeliveryAddress(v BnplAddress) {
	o.DeliveryAddress = v
}

// GetDeliveryPointName returns the DeliveryPointName field value if set, zero value otherwise.
func (o *BnplDelivery) GetDeliveryPointName() string {
	if o == nil || o.DeliveryPointName == nil {
		var ret string
		return ret
	}
	return *o.DeliveryPointName
}

// GetDeliveryPointNameOk returns a tuple with the DeliveryPointName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BnplDelivery) GetDeliveryPointNameOk() (*string, bool) {
	if o == nil || o.DeliveryPointName == nil {
		return nil, false
	}
	return o.DeliveryPointName, true
}

// HasDeliveryPointName returns a boolean if a field has been set.
func (o *BnplDelivery) HasDeliveryPointName() bool {
	if o != nil && o.DeliveryPointName != nil {
		return true
	}

	return false
}

// SetDeliveryPointName gets a reference to the given string and assigns it to the DeliveryPointName field.
func (o *BnplDelivery) SetDeliveryPointName(v string) {
	o.DeliveryPointName = &v
}

func (o BnplDelivery) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["deliveryMode"] = o.DeliveryMode
	}
	if true {
		toSerialize["expressDelivery"] = o.ExpressDelivery
	}
	if true {
		toSerialize["deliveryAddress"] = o.DeliveryAddress
	}
	if o.DeliveryPointName != nil {
		toSerialize["deliveryPointName"] = o.DeliveryPointName
	}
	return json.Marshal(toSerialize)
}

type NullableBnplDelivery struct {
	value *BnplDelivery
	isSet bool
}

func (v NullableBnplDelivery) Get() *BnplDelivery {
	return v.value
}

func (v *NullableBnplDelivery) Set(val *BnplDelivery) {
	v.value = val
	v.isSet = true
}

func (v NullableBnplDelivery) IsSet() bool {
	return v.isSet
}

func (v *NullableBnplDelivery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBnplDelivery(val *BnplDelivery) *NullableBnplDelivery {
	return &NullableBnplDelivery{value: val, isSet: true}
}

func (v NullableBnplDelivery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBnplDelivery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


