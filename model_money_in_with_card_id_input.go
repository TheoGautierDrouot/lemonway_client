/*
Lemonway DirectKit API 2.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MoneyInWithCardIdInput struct for MoneyInWithCardIdInput
type MoneyInWithCardIdInput struct {
	// Indicates if the request is delayed and will require validation.  1. If empty, the default behavior is no delay and no validation necessary (unless stated otherwise in your contract).  2. If true, the payment is pre-authorized. You will have to call `MoneyInValidate` within **delayDays** time lapse (From J to J+delayDays).  3. If false, debit is immediately effective
	IsPreAuth *bool `json:"isPreAuth,omitempty"`
	// Indicate the number of days of the deferred payment, between **0 and 6** days to have a guaranteed payment.   Only usable with isPreAuth = 1
	DelayedDays *int32 `json:"delayedDays,omitempty"`
	// Leave empty
	SpecialConfig *string `json:"specialConfig,omitempty"`
	// Unique ID of the call, generated by your server. This ID can be used as a search field when looking for operation details
	Reference *string `json:"reference,omitempty"`
	// Payment Account ID to Credit
	AccountId string `json:"accountId"`
	// Amount to Debit  Amounts are given as integer numbers in cents
	TotalAmount *int32 `json:"totalAmount,omitempty"`
	// Your Fee  Amounts are given as integer numbers in cents
	CommissionAmount *int32 `json:"commissionAmount,omitempty"`
	// Comment Regarding the Transaction
	Comment *string `json:"comment,omitempty"`
	// If true:  1. [amountCom] will be ignored and will be replaced with Lemonway's fee    2. You will not receive any fee
	AutoCommission *bool `json:"autoCommission,omitempty"`
}

// NewMoneyInWithCardIdInput instantiates a new MoneyInWithCardIdInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoneyInWithCardIdInput(accountId string) *MoneyInWithCardIdInput {
	this := MoneyInWithCardIdInput{}
	this.AccountId = accountId
	return &this
}

// NewMoneyInWithCardIdInputWithDefaults instantiates a new MoneyInWithCardIdInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoneyInWithCardIdInputWithDefaults() *MoneyInWithCardIdInput {
	this := MoneyInWithCardIdInput{}
	return &this
}

// GetIsPreAuth returns the IsPreAuth field value if set, zero value otherwise.
func (o *MoneyInWithCardIdInput) GetIsPreAuth() bool {
	if o == nil || o.IsPreAuth == nil {
		var ret bool
		return ret
	}
	return *o.IsPreAuth
}

// GetIsPreAuthOk returns a tuple with the IsPreAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyInWithCardIdInput) GetIsPreAuthOk() (*bool, bool) {
	if o == nil || o.IsPreAuth == nil {
		return nil, false
	}
	return o.IsPreAuth, true
}

// HasIsPreAuth returns a boolean if a field has been set.
func (o *MoneyInWithCardIdInput) HasIsPreAuth() bool {
	if o != nil && o.IsPreAuth != nil {
		return true
	}

	return false
}

// SetIsPreAuth gets a reference to the given bool and assigns it to the IsPreAuth field.
func (o *MoneyInWithCardIdInput) SetIsPreAuth(v bool) {
	o.IsPreAuth = &v
}

// GetDelayedDays returns the DelayedDays field value if set, zero value otherwise.
func (o *MoneyInWithCardIdInput) GetDelayedDays() int32 {
	if o == nil || o.DelayedDays == nil {
		var ret int32
		return ret
	}
	return *o.DelayedDays
}

// GetDelayedDaysOk returns a tuple with the DelayedDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyInWithCardIdInput) GetDelayedDaysOk() (*int32, bool) {
	if o == nil || o.DelayedDays == nil {
		return nil, false
	}
	return o.DelayedDays, true
}

// HasDelayedDays returns a boolean if a field has been set.
func (o *MoneyInWithCardIdInput) HasDelayedDays() bool {
	if o != nil && o.DelayedDays != nil {
		return true
	}

	return false
}

// SetDelayedDays gets a reference to the given int32 and assigns it to the DelayedDays field.
func (o *MoneyInWithCardIdInput) SetDelayedDays(v int32) {
	o.DelayedDays = &v
}

// GetSpecialConfig returns the SpecialConfig field value if set, zero value otherwise.
func (o *MoneyInWithCardIdInput) GetSpecialConfig() string {
	if o == nil || o.SpecialConfig == nil {
		var ret string
		return ret
	}
	return *o.SpecialConfig
}

// GetSpecialConfigOk returns a tuple with the SpecialConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyInWithCardIdInput) GetSpecialConfigOk() (*string, bool) {
	if o == nil || o.SpecialConfig == nil {
		return nil, false
	}
	return o.SpecialConfig, true
}

// HasSpecialConfig returns a boolean if a field has been set.
func (o *MoneyInWithCardIdInput) HasSpecialConfig() bool {
	if o != nil && o.SpecialConfig != nil {
		return true
	}

	return false
}

// SetSpecialConfig gets a reference to the given string and assigns it to the SpecialConfig field.
func (o *MoneyInWithCardIdInput) SetSpecialConfig(v string) {
	o.SpecialConfig = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *MoneyInWithCardIdInput) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyInWithCardIdInput) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *MoneyInWithCardIdInput) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *MoneyInWithCardIdInput) SetReference(v string) {
	o.Reference = &v
}

// GetAccountId returns the AccountId field value
func (o *MoneyInWithCardIdInput) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *MoneyInWithCardIdInput) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *MoneyInWithCardIdInput) SetAccountId(v string) {
	o.AccountId = v
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise.
func (o *MoneyInWithCardIdInput) GetTotalAmount() int32 {
	if o == nil || o.TotalAmount == nil {
		var ret int32
		return ret
	}
	return *o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyInWithCardIdInput) GetTotalAmountOk() (*int32, bool) {
	if o == nil || o.TotalAmount == nil {
		return nil, false
	}
	return o.TotalAmount, true
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *MoneyInWithCardIdInput) HasTotalAmount() bool {
	if o != nil && o.TotalAmount != nil {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given int32 and assigns it to the TotalAmount field.
func (o *MoneyInWithCardIdInput) SetTotalAmount(v int32) {
	o.TotalAmount = &v
}

// GetCommissionAmount returns the CommissionAmount field value if set, zero value otherwise.
func (o *MoneyInWithCardIdInput) GetCommissionAmount() int32 {
	if o == nil || o.CommissionAmount == nil {
		var ret int32
		return ret
	}
	return *o.CommissionAmount
}

// GetCommissionAmountOk returns a tuple with the CommissionAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyInWithCardIdInput) GetCommissionAmountOk() (*int32, bool) {
	if o == nil || o.CommissionAmount == nil {
		return nil, false
	}
	return o.CommissionAmount, true
}

// HasCommissionAmount returns a boolean if a field has been set.
func (o *MoneyInWithCardIdInput) HasCommissionAmount() bool {
	if o != nil && o.CommissionAmount != nil {
		return true
	}

	return false
}

// SetCommissionAmount gets a reference to the given int32 and assigns it to the CommissionAmount field.
func (o *MoneyInWithCardIdInput) SetCommissionAmount(v int32) {
	o.CommissionAmount = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *MoneyInWithCardIdInput) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyInWithCardIdInput) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *MoneyInWithCardIdInput) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *MoneyInWithCardIdInput) SetComment(v string) {
	o.Comment = &v
}

// GetAutoCommission returns the AutoCommission field value if set, zero value otherwise.
func (o *MoneyInWithCardIdInput) GetAutoCommission() bool {
	if o == nil || o.AutoCommission == nil {
		var ret bool
		return ret
	}
	return *o.AutoCommission
}

// GetAutoCommissionOk returns a tuple with the AutoCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyInWithCardIdInput) GetAutoCommissionOk() (*bool, bool) {
	if o == nil || o.AutoCommission == nil {
		return nil, false
	}
	return o.AutoCommission, true
}

// HasAutoCommission returns a boolean if a field has been set.
func (o *MoneyInWithCardIdInput) HasAutoCommission() bool {
	if o != nil && o.AutoCommission != nil {
		return true
	}

	return false
}

// SetAutoCommission gets a reference to the given bool and assigns it to the AutoCommission field.
func (o *MoneyInWithCardIdInput) SetAutoCommission(v bool) {
	o.AutoCommission = &v
}

func (o MoneyInWithCardIdInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsPreAuth != nil {
		toSerialize["isPreAuth"] = o.IsPreAuth
	}
	if o.DelayedDays != nil {
		toSerialize["delayedDays"] = o.DelayedDays
	}
	if o.SpecialConfig != nil {
		toSerialize["specialConfig"] = o.SpecialConfig
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if o.TotalAmount != nil {
		toSerialize["totalAmount"] = o.TotalAmount
	}
	if o.CommissionAmount != nil {
		toSerialize["commissionAmount"] = o.CommissionAmount
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.AutoCommission != nil {
		toSerialize["autoCommission"] = o.AutoCommission
	}
	return json.Marshal(toSerialize)
}

type NullableMoneyInWithCardIdInput struct {
	value *MoneyInWithCardIdInput
	isSet bool
}

func (v NullableMoneyInWithCardIdInput) Get() *MoneyInWithCardIdInput {
	return v.value
}

func (v *NullableMoneyInWithCardIdInput) Set(val *MoneyInWithCardIdInput) {
	v.value = val
	v.isSet = true
}

func (v NullableMoneyInWithCardIdInput) IsSet() bool {
	return v.isSet
}

func (v *NullableMoneyInWithCardIdInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoneyInWithCardIdInput(val *MoneyInWithCardIdInput) *NullableMoneyInWithCardIdInput {
	return &NullableMoneyInWithCardIdInput{value: val, isSet: true}
}

func (v NullableMoneyInWithCardIdInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoneyInWithCardIdInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


